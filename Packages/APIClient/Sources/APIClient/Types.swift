// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.URL
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
#else
import struct Foundation.URL
import struct Foundation.Data
import struct Foundation.Date
#endif
/// A type that performs HTTP operations defined by the OpenAPI document.
internal protocol APIProtocol: Sendable {
    /// - Remark: HTTP `GET /activities`.
    /// - Remark: Generated from `#/paths//activities/get(getActivities)`.
    func getActivities(_ input: Operations.getActivities.Input) async throws -> Operations.getActivities.Output
    /// - Remark: HTTP `POST /activities`.
    /// - Remark: Generated from `#/paths//activities/post(createActivity)`.
    func createActivity(_ input: Operations.createActivity.Input) async throws -> Operations.createActivity.Output
    /// - Remark: HTTP `GET /activities/statistics`.
    /// - Remark: Generated from `#/paths//activities/statistics/get(getActivityStatistics)`.
    func getActivityStatistics(_ input: Operations.getActivityStatistics.Input) async throws -> Operations.getActivityStatistics.Output
    /// - Remark: HTTP `DELETE /activities/{id}`.
    /// - Remark: Generated from `#/paths//activities/{id}/delete(deleteActivity)`.
    func deleteActivity(_ input: Operations.deleteActivity.Input) async throws -> Operations.deleteActivity.Output
    /// - Remark: HTTP `GET /admin/users`.
    /// - Remark: Generated from `#/paths//admin/users/get(searchUsersAdmin)`.
    func searchUsersAdmin(_ input: Operations.searchUsersAdmin.Input) async throws -> Operations.searchUsersAdmin.Output
    /// - Remark: HTTP `POST /admin/users`.
    /// - Remark: Generated from `#/paths//admin/users/post(createUserAdmin)`.
    func createUserAdmin(_ input: Operations.createUserAdmin.Input) async throws -> Operations.createUserAdmin.Output
    /// - Remark: HTTP `GET /admin/users/{id}`.
    /// - Remark: Generated from `#/paths//admin/users/{id}/get(getUserAdmin)`.
    func getUserAdmin(_ input: Operations.getUserAdmin.Input) async throws -> Operations.getUserAdmin.Output
    /// - Remark: HTTP `PUT /admin/users/{id}`.
    /// - Remark: Generated from `#/paths//admin/users/{id}/put(updateUserAdmin)`.
    func updateUserAdmin(_ input: Operations.updateUserAdmin.Input) async throws -> Operations.updateUserAdmin.Output
    /// - Remark: HTTP `DELETE /admin/users/{id}`.
    /// - Remark: Generated from `#/paths//admin/users/{id}/delete(deleteUserAdmin)`.
    func deleteUserAdmin(_ input: Operations.deleteUserAdmin.Input) async throws -> Operations.deleteUserAdmin.Output
    /// - Remark: HTTP `GET /admin/users/{id}/preferences`.
    /// - Remark: Generated from `#/paths//admin/users/{id}/preferences/get(getUserPreferencesAdmin)`.
    func getUserPreferencesAdmin(_ input: Operations.getUserPreferencesAdmin.Input) async throws -> Operations.getUserPreferencesAdmin.Output
    /// - Remark: HTTP `PUT /admin/users/{id}/preferences`.
    /// - Remark: Generated from `#/paths//admin/users/{id}/preferences/put(updateUserPreferencesAdmin)`.
    func updateUserPreferencesAdmin(_ input: Operations.updateUserPreferencesAdmin.Input) async throws -> Operations.updateUserPreferencesAdmin.Output
    /// - Remark: HTTP `POST /admin/users/{id}/restore`.
    /// - Remark: Generated from `#/paths//admin/users/{id}/restore/post(restoreUserAdmin)`.
    func restoreUserAdmin(_ input: Operations.restoreUserAdmin.Input) async throws -> Operations.restoreUserAdmin.Output
    /// - Remark: HTTP `GET /albums`.
    /// - Remark: Generated from `#/paths//albums/get(getAllAlbums)`.
    func getAllAlbums(_ input: Operations.getAllAlbums.Input) async throws -> Operations.getAllAlbums.Output
    /// - Remark: HTTP `POST /albums`.
    /// - Remark: Generated from `#/paths//albums/post(createAlbum)`.
    func createAlbum(_ input: Operations.createAlbum.Input) async throws -> Operations.createAlbum.Output
    /// - Remark: HTTP `GET /albums/count`.
    /// - Remark: Generated from `#/paths//albums/count/get(getAlbumCount)`.
    func getAlbumCount(_ input: Operations.getAlbumCount.Input) async throws -> Operations.getAlbumCount.Output
    /// - Remark: HTTP `GET /albums/{id}`.
    /// - Remark: Generated from `#/paths//albums/{id}/get(getAlbumInfo)`.
    func getAlbumInfo(_ input: Operations.getAlbumInfo.Input) async throws -> Operations.getAlbumInfo.Output
    /// - Remark: HTTP `PATCH /albums/{id}`.
    /// - Remark: Generated from `#/paths//albums/{id}/patch(updateAlbumInfo)`.
    func updateAlbumInfo(_ input: Operations.updateAlbumInfo.Input) async throws -> Operations.updateAlbumInfo.Output
    /// - Remark: HTTP `DELETE /albums/{id}`.
    /// - Remark: Generated from `#/paths//albums/{id}/delete(deleteAlbum)`.
    func deleteAlbum(_ input: Operations.deleteAlbum.Input) async throws -> Operations.deleteAlbum.Output
    /// - Remark: HTTP `PUT /albums/{id}/assets`.
    /// - Remark: Generated from `#/paths//albums/{id}/assets/put(addAssetsToAlbum)`.
    func addAssetsToAlbum(_ input: Operations.addAssetsToAlbum.Input) async throws -> Operations.addAssetsToAlbum.Output
    /// - Remark: HTTP `DELETE /albums/{id}/assets`.
    /// - Remark: Generated from `#/paths//albums/{id}/assets/delete(removeAssetFromAlbum)`.
    func removeAssetFromAlbum(_ input: Operations.removeAssetFromAlbum.Input) async throws -> Operations.removeAssetFromAlbum.Output
    /// - Remark: HTTP `PUT /albums/{id}/user/{userId}`.
    /// - Remark: Generated from `#/paths//albums/{id}/user/{userId}/put(updateAlbumUser)`.
    func updateAlbumUser(_ input: Operations.updateAlbumUser.Input) async throws -> Operations.updateAlbumUser.Output
    /// - Remark: HTTP `DELETE /albums/{id}/user/{userId}`.
    /// - Remark: Generated from `#/paths//albums/{id}/user/{userId}/delete(removeUserFromAlbum)`.
    func removeUserFromAlbum(_ input: Operations.removeUserFromAlbum.Input) async throws -> Operations.removeUserFromAlbum.Output
    /// - Remark: HTTP `PUT /albums/{id}/users`.
    /// - Remark: Generated from `#/paths//albums/{id}/users/put(addUsersToAlbum)`.
    func addUsersToAlbum(_ input: Operations.addUsersToAlbum.Input) async throws -> Operations.addUsersToAlbum.Output
    /// - Remark: HTTP `GET /api-keys`.
    /// - Remark: Generated from `#/paths//api-keys/get(getApiKeys)`.
    func getApiKeys(_ input: Operations.getApiKeys.Input) async throws -> Operations.getApiKeys.Output
    /// - Remark: HTTP `POST /api-keys`.
    /// - Remark: Generated from `#/paths//api-keys/post(createApiKey)`.
    func createApiKey(_ input: Operations.createApiKey.Input) async throws -> Operations.createApiKey.Output
    /// - Remark: HTTP `GET /api-keys/{id}`.
    /// - Remark: Generated from `#/paths//api-keys/{id}/get(getApiKey)`.
    func getApiKey(_ input: Operations.getApiKey.Input) async throws -> Operations.getApiKey.Output
    /// - Remark: HTTP `PUT /api-keys/{id}`.
    /// - Remark: Generated from `#/paths//api-keys/{id}/put(updateApiKey)`.
    func updateApiKey(_ input: Operations.updateApiKey.Input) async throws -> Operations.updateApiKey.Output
    /// - Remark: HTTP `DELETE /api-keys/{id}`.
    /// - Remark: Generated from `#/paths//api-keys/{id}/delete(deleteApiKey)`.
    func deleteApiKey(_ input: Operations.deleteApiKey.Input) async throws -> Operations.deleteApiKey.Output
    /// - Remark: HTTP `POST /assets`.
    /// - Remark: Generated from `#/paths//assets/post(uploadAsset)`.
    func uploadAsset(_ input: Operations.uploadAsset.Input) async throws -> Operations.uploadAsset.Output
    /// - Remark: HTTP `PUT /assets`.
    /// - Remark: Generated from `#/paths//assets/put(updateAssets)`.
    func updateAssets(_ input: Operations.updateAssets.Input) async throws -> Operations.updateAssets.Output
    /// - Remark: HTTP `DELETE /assets`.
    /// - Remark: Generated from `#/paths//assets/delete(deleteAssets)`.
    func deleteAssets(_ input: Operations.deleteAssets.Input) async throws -> Operations.deleteAssets.Output
    /// Checks if assets exist by checksums
    ///
    /// - Remark: HTTP `POST /assets/bulk-upload-check`.
    /// - Remark: Generated from `#/paths//assets/bulk-upload-check/post(checkBulkUpload)`.
    func checkBulkUpload(_ input: Operations.checkBulkUpload.Input) async throws -> Operations.checkBulkUpload.Output
    /// Get all asset of a device that are in the database, ID only.
    ///
    /// - Remark: HTTP `GET /assets/device/{deviceId}`.
    /// - Remark: Generated from `#/paths//assets/device/{deviceId}/get(getAllUserAssetsByDeviceId)`.
    func getAllUserAssetsByDeviceId(_ input: Operations.getAllUserAssetsByDeviceId.Input) async throws -> Operations.getAllUserAssetsByDeviceId.Output
    /// Checks if multiple assets exist on the server and returns all existing - used by background backup
    ///
    /// - Remark: HTTP `POST /assets/exist`.
    /// - Remark: Generated from `#/paths//assets/exist/post(checkExistingAssets)`.
    func checkExistingAssets(_ input: Operations.checkExistingAssets.Input) async throws -> Operations.checkExistingAssets.Output
    /// - Remark: HTTP `POST /assets/jobs`.
    /// - Remark: Generated from `#/paths//assets/jobs/post(runAssetJobs)`.
    func runAssetJobs(_ input: Operations.runAssetJobs.Input) async throws -> Operations.runAssetJobs.Output
    /// - Remark: HTTP `GET /assets/memory-lane`.
    /// - Remark: Generated from `#/paths//assets/memory-lane/get(getMemoryLane)`.
    func getMemoryLane(_ input: Operations.getMemoryLane.Input) async throws -> Operations.getMemoryLane.Output
    /// - Remark: HTTP `GET /assets/random`.
    /// - Remark: Generated from `#/paths//assets/random/get(getRandom)`.
    func getRandom(_ input: Operations.getRandom.Input) async throws -> Operations.getRandom.Output
    /// - Remark: HTTP `PUT /assets/stack/parent`.
    /// - Remark: Generated from `#/paths//assets/stack/parent/put(updateStackParent)`.
    func updateStackParent(_ input: Operations.updateStackParent.Input) async throws -> Operations.updateStackParent.Output
    /// - Remark: HTTP `GET /assets/statistics`.
    /// - Remark: Generated from `#/paths//assets/statistics/get(getAssetStatistics)`.
    func getAssetStatistics(_ input: Operations.getAssetStatistics.Input) async throws -> Operations.getAssetStatistics.Output
    /// - Remark: HTTP `GET /assets/{id}`.
    /// - Remark: Generated from `#/paths//assets/{id}/get(getAssetInfo)`.
    func getAssetInfo(_ input: Operations.getAssetInfo.Input) async throws -> Operations.getAssetInfo.Output
    /// - Remark: HTTP `PUT /assets/{id}`.
    /// - Remark: Generated from `#/paths//assets/{id}/put(updateAsset)`.
    func updateAsset(_ input: Operations.updateAsset.Input) async throws -> Operations.updateAsset.Output
    /// - Remark: HTTP `GET /assets/{id}/original`.
    /// - Remark: Generated from `#/paths//assets/{id}/original/get(downloadAsset)`.
    func downloadAsset(_ input: Operations.downloadAsset.Input) async throws -> Operations.downloadAsset.Output
    /// Replace the asset with new file, without changing its id
    ///
    /// - Remark: HTTP `PUT /assets/{id}/original`.
    /// - Remark: Generated from `#/paths//assets/{id}/original/put(replaceAsset)`.
    func replaceAsset(_ input: Operations.replaceAsset.Input) async throws -> Operations.replaceAsset.Output
    /// - Remark: HTTP `GET /assets/{id}/thumbnail`.
    /// - Remark: Generated from `#/paths//assets/{id}/thumbnail/get(viewAsset)`.
    func viewAsset(_ input: Operations.viewAsset.Input) async throws -> Operations.viewAsset.Output
    /// - Remark: HTTP `GET /assets/{id}/video/playback`.
    /// - Remark: Generated from `#/paths//assets/{id}/video/playback/get(playAssetVideo)`.
    func playAssetVideo(_ input: Operations.playAssetVideo.Input) async throws -> Operations.playAssetVideo.Output
    /// - Remark: HTTP `GET /audit/deletes`.
    /// - Remark: Generated from `#/paths//audit/deletes/get(getAuditDeletes)`.
    func getAuditDeletes(_ input: Operations.getAuditDeletes.Input) async throws -> Operations.getAuditDeletes.Output
    /// - Remark: HTTP `POST /auth/admin-sign-up`.
    /// - Remark: Generated from `#/paths//auth/admin-sign-up/post(signUpAdmin)`.
    func signUpAdmin(_ input: Operations.signUpAdmin.Input) async throws -> Operations.signUpAdmin.Output
    /// - Remark: HTTP `POST /auth/change-password`.
    /// - Remark: Generated from `#/paths//auth/change-password/post(changePassword)`.
    func changePassword(_ input: Operations.changePassword.Input) async throws -> Operations.changePassword.Output
    /// - Remark: HTTP `POST /auth/login`.
    /// - Remark: Generated from `#/paths//auth/login/post(login)`.
    func login(_ input: Operations.login.Input) async throws -> Operations.login.Output
    /// - Remark: HTTP `POST /auth/logout`.
    /// - Remark: Generated from `#/paths//auth/logout/post(logout)`.
    func logout(_ input: Operations.logout.Input) async throws -> Operations.logout.Output
    /// - Remark: HTTP `POST /auth/validateToken`.
    /// - Remark: Generated from `#/paths//auth/validateToken/post(validateAccessToken)`.
    func validateAccessToken(_ input: Operations.validateAccessToken.Input) async throws -> Operations.validateAccessToken.Output
    /// - Remark: HTTP `POST /download/archive`.
    /// - Remark: Generated from `#/paths//download/archive/post(downloadArchive)`.
    func downloadArchive(_ input: Operations.downloadArchive.Input) async throws -> Operations.downloadArchive.Output
    /// - Remark: HTTP `POST /download/info`.
    /// - Remark: Generated from `#/paths//download/info/post(getDownloadInfo)`.
    func getDownloadInfo(_ input: Operations.getDownloadInfo.Input) async throws -> Operations.getDownloadInfo.Output
    /// - Remark: HTTP `GET /duplicates`.
    /// - Remark: Generated from `#/paths//duplicates/get(getAssetDuplicates)`.
    func getAssetDuplicates(_ input: Operations.getAssetDuplicates.Input) async throws -> Operations.getAssetDuplicates.Output
    /// - Remark: HTTP `GET /faces`.
    /// - Remark: Generated from `#/paths//faces/get(getFaces)`.
    func getFaces(_ input: Operations.getFaces.Input) async throws -> Operations.getFaces.Output
    /// - Remark: HTTP `PUT /faces/{id}`.
    /// - Remark: Generated from `#/paths//faces/{id}/put(reassignFacesById)`.
    func reassignFacesById(_ input: Operations.reassignFacesById.Input) async throws -> Operations.reassignFacesById.Output
    /// - Remark: HTTP `GET /jobs`.
    /// - Remark: Generated from `#/paths//jobs/get(getAllJobsStatus)`.
    func getAllJobsStatus(_ input: Operations.getAllJobsStatus.Input) async throws -> Operations.getAllJobsStatus.Output
    /// - Remark: HTTP `PUT /jobs/{id}`.
    /// - Remark: Generated from `#/paths//jobs/{id}/put(sendJobCommand)`.
    func sendJobCommand(_ input: Operations.sendJobCommand.Input) async throws -> Operations.sendJobCommand.Output
    /// - Remark: HTTP `GET /libraries`.
    /// - Remark: Generated from `#/paths//libraries/get(getAllLibraries)`.
    func getAllLibraries(_ input: Operations.getAllLibraries.Input) async throws -> Operations.getAllLibraries.Output
    /// - Remark: HTTP `POST /libraries`.
    /// - Remark: Generated from `#/paths//libraries/post(createLibrary)`.
    func createLibrary(_ input: Operations.createLibrary.Input) async throws -> Operations.createLibrary.Output
    /// - Remark: HTTP `GET /libraries/{id}`.
    /// - Remark: Generated from `#/paths//libraries/{id}/get(getLibrary)`.
    func getLibrary(_ input: Operations.getLibrary.Input) async throws -> Operations.getLibrary.Output
    /// - Remark: HTTP `PUT /libraries/{id}`.
    /// - Remark: Generated from `#/paths//libraries/{id}/put(updateLibrary)`.
    func updateLibrary(_ input: Operations.updateLibrary.Input) async throws -> Operations.updateLibrary.Output
    /// - Remark: HTTP `DELETE /libraries/{id}`.
    /// - Remark: Generated from `#/paths//libraries/{id}/delete(deleteLibrary)`.
    func deleteLibrary(_ input: Operations.deleteLibrary.Input) async throws -> Operations.deleteLibrary.Output
    /// - Remark: HTTP `POST /libraries/{id}/removeOffline`.
    /// - Remark: Generated from `#/paths//libraries/{id}/removeOffline/post(removeOfflineFiles)`.
    func removeOfflineFiles(_ input: Operations.removeOfflineFiles.Input) async throws -> Operations.removeOfflineFiles.Output
    /// - Remark: HTTP `POST /libraries/{id}/scan`.
    /// - Remark: Generated from `#/paths//libraries/{id}/scan/post(scanLibrary)`.
    func scanLibrary(_ input: Operations.scanLibrary.Input) async throws -> Operations.scanLibrary.Output
    /// - Remark: HTTP `GET /libraries/{id}/statistics`.
    /// - Remark: Generated from `#/paths//libraries/{id}/statistics/get(getLibraryStatistics)`.
    func getLibraryStatistics(_ input: Operations.getLibraryStatistics.Input) async throws -> Operations.getLibraryStatistics.Output
    /// - Remark: HTTP `POST /libraries/{id}/validate`.
    /// - Remark: Generated from `#/paths//libraries/{id}/validate/post(validate)`.
    func validate(_ input: Operations.validate.Input) async throws -> Operations.validate.Output
    /// - Remark: HTTP `GET /map/markers`.
    /// - Remark: Generated from `#/paths//map/markers/get(getMapMarkers)`.
    func getMapMarkers(_ input: Operations.getMapMarkers.Input) async throws -> Operations.getMapMarkers.Output
    /// - Remark: HTTP `GET /map/style.json`.
    /// - Remark: Generated from `#/paths//map/style.json/get(getMapStyle)`.
    func getMapStyle(_ input: Operations.getMapStyle.Input) async throws -> Operations.getMapStyle.Output
    /// - Remark: HTTP `GET /memories`.
    /// - Remark: Generated from `#/paths//memories/get(searchMemories)`.
    func searchMemories(_ input: Operations.searchMemories.Input) async throws -> Operations.searchMemories.Output
    /// - Remark: HTTP `POST /memories`.
    /// - Remark: Generated from `#/paths//memories/post(createMemory)`.
    func createMemory(_ input: Operations.createMemory.Input) async throws -> Operations.createMemory.Output
    /// - Remark: HTTP `GET /memories/{id}`.
    /// - Remark: Generated from `#/paths//memories/{id}/get(getMemory)`.
    func getMemory(_ input: Operations.getMemory.Input) async throws -> Operations.getMemory.Output
    /// - Remark: HTTP `PUT /memories/{id}`.
    /// - Remark: Generated from `#/paths//memories/{id}/put(updateMemory)`.
    func updateMemory(_ input: Operations.updateMemory.Input) async throws -> Operations.updateMemory.Output
    /// - Remark: HTTP `DELETE /memories/{id}`.
    /// - Remark: Generated from `#/paths//memories/{id}/delete(deleteMemory)`.
    func deleteMemory(_ input: Operations.deleteMemory.Input) async throws -> Operations.deleteMemory.Output
    /// - Remark: HTTP `PUT /memories/{id}/assets`.
    /// - Remark: Generated from `#/paths//memories/{id}/assets/put(addMemoryAssets)`.
    func addMemoryAssets(_ input: Operations.addMemoryAssets.Input) async throws -> Operations.addMemoryAssets.Output
    /// - Remark: HTTP `DELETE /memories/{id}/assets`.
    /// - Remark: Generated from `#/paths//memories/{id}/assets/delete(removeMemoryAssets)`.
    func removeMemoryAssets(_ input: Operations.removeMemoryAssets.Input) async throws -> Operations.removeMemoryAssets.Output
    /// - Remark: HTTP `POST /notifications/test-email`.
    /// - Remark: Generated from `#/paths//notifications/test-email/post(sendTestEmail)`.
    func sendTestEmail(_ input: Operations.sendTestEmail.Input) async throws -> Operations.sendTestEmail.Output
    /// - Remark: HTTP `POST /oauth/authorize`.
    /// - Remark: Generated from `#/paths//oauth/authorize/post(startOAuth)`.
    func startOAuth(_ input: Operations.startOAuth.Input) async throws -> Operations.startOAuth.Output
    /// - Remark: HTTP `POST /oauth/callback`.
    /// - Remark: Generated from `#/paths//oauth/callback/post(finishOAuth)`.
    func finishOAuth(_ input: Operations.finishOAuth.Input) async throws -> Operations.finishOAuth.Output
    /// - Remark: HTTP `POST /oauth/link`.
    /// - Remark: Generated from `#/paths//oauth/link/post(linkOAuthAccount)`.
    func linkOAuthAccount(_ input: Operations.linkOAuthAccount.Input) async throws -> Operations.linkOAuthAccount.Output
    /// - Remark: HTTP `GET /oauth/mobile-redirect`.
    /// - Remark: Generated from `#/paths//oauth/mobile-redirect/get(redirectOAuthToMobile)`.
    func redirectOAuthToMobile(_ input: Operations.redirectOAuthToMobile.Input) async throws -> Operations.redirectOAuthToMobile.Output
    /// - Remark: HTTP `POST /oauth/unlink`.
    /// - Remark: Generated from `#/paths//oauth/unlink/post(unlinkOAuthAccount)`.
    func unlinkOAuthAccount(_ input: Operations.unlinkOAuthAccount.Input) async throws -> Operations.unlinkOAuthAccount.Output
    /// - Remark: HTTP `GET /partners`.
    /// - Remark: Generated from `#/paths//partners/get(getPartners)`.
    func getPartners(_ input: Operations.getPartners.Input) async throws -> Operations.getPartners.Output
    /// - Remark: HTTP `POST /partners/{id}`.
    /// - Remark: Generated from `#/paths//partners/{id}/post(createPartner)`.
    func createPartner(_ input: Operations.createPartner.Input) async throws -> Operations.createPartner.Output
    /// - Remark: HTTP `PUT /partners/{id}`.
    /// - Remark: Generated from `#/paths//partners/{id}/put(updatePartner)`.
    func updatePartner(_ input: Operations.updatePartner.Input) async throws -> Operations.updatePartner.Output
    /// - Remark: HTTP `DELETE /partners/{id}`.
    /// - Remark: Generated from `#/paths//partners/{id}/delete(removePartner)`.
    func removePartner(_ input: Operations.removePartner.Input) async throws -> Operations.removePartner.Output
    /// - Remark: HTTP `GET /people`.
    /// - Remark: Generated from `#/paths//people/get(getAllPeople)`.
    func getAllPeople(_ input: Operations.getAllPeople.Input) async throws -> Operations.getAllPeople.Output
    /// - Remark: HTTP `POST /people`.
    /// - Remark: Generated from `#/paths//people/post(createPerson)`.
    func createPerson(_ input: Operations.createPerson.Input) async throws -> Operations.createPerson.Output
    /// - Remark: HTTP `PUT /people`.
    /// - Remark: Generated from `#/paths//people/put(updatePeople)`.
    func updatePeople(_ input: Operations.updatePeople.Input) async throws -> Operations.updatePeople.Output
    /// - Remark: HTTP `GET /people/{id}`.
    /// - Remark: Generated from `#/paths//people/{id}/get(getPerson)`.
    func getPerson(_ input: Operations.getPerson.Input) async throws -> Operations.getPerson.Output
    /// - Remark: HTTP `PUT /people/{id}`.
    /// - Remark: Generated from `#/paths//people/{id}/put(updatePerson)`.
    func updatePerson(_ input: Operations.updatePerson.Input) async throws -> Operations.updatePerson.Output
    /// - Remark: HTTP `GET /people/{id}/assets`.
    /// - Remark: Generated from `#/paths//people/{id}/assets/get(getPersonAssets)`.
    func getPersonAssets(_ input: Operations.getPersonAssets.Input) async throws -> Operations.getPersonAssets.Output
    /// - Remark: HTTP `POST /people/{id}/merge`.
    /// - Remark: Generated from `#/paths//people/{id}/merge/post(mergePerson)`.
    func mergePerson(_ input: Operations.mergePerson.Input) async throws -> Operations.mergePerson.Output
    /// - Remark: HTTP `PUT /people/{id}/reassign`.
    /// - Remark: Generated from `#/paths//people/{id}/reassign/put(reassignFaces)`.
    func reassignFaces(_ input: Operations.reassignFaces.Input) async throws -> Operations.reassignFaces.Output
    /// - Remark: HTTP `GET /people/{id}/statistics`.
    /// - Remark: Generated from `#/paths//people/{id}/statistics/get(getPersonStatistics)`.
    func getPersonStatistics(_ input: Operations.getPersonStatistics.Input) async throws -> Operations.getPersonStatistics.Output
    /// - Remark: HTTP `GET /people/{id}/thumbnail`.
    /// - Remark: Generated from `#/paths//people/{id}/thumbnail/get(getPersonThumbnail)`.
    func getPersonThumbnail(_ input: Operations.getPersonThumbnail.Input) async throws -> Operations.getPersonThumbnail.Output
    /// - Remark: HTTP `GET /reports`.
    /// - Remark: Generated from `#/paths//reports/get(getAuditFiles)`.
    func getAuditFiles(_ input: Operations.getAuditFiles.Input) async throws -> Operations.getAuditFiles.Output
    /// - Remark: HTTP `POST /reports/checksum`.
    /// - Remark: Generated from `#/paths//reports/checksum/post(getFileChecksums)`.
    func getFileChecksums(_ input: Operations.getFileChecksums.Input) async throws -> Operations.getFileChecksums.Output
    /// - Remark: HTTP `POST /reports/fix`.
    /// - Remark: Generated from `#/paths//reports/fix/post(fixAuditFiles)`.
    func fixAuditFiles(_ input: Operations.fixAuditFiles.Input) async throws -> Operations.fixAuditFiles.Output
    /// - Remark: HTTP `GET /search/cities`.
    /// - Remark: Generated from `#/paths//search/cities/get(getAssetsByCity)`.
    func getAssetsByCity(_ input: Operations.getAssetsByCity.Input) async throws -> Operations.getAssetsByCity.Output
    /// - Remark: HTTP `GET /search/explore`.
    /// - Remark: Generated from `#/paths//search/explore/get(getExploreData)`.
    func getExploreData(_ input: Operations.getExploreData.Input) async throws -> Operations.getExploreData.Output
    /// - Remark: HTTP `POST /search/metadata`.
    /// - Remark: Generated from `#/paths//search/metadata/post(searchMetadata)`.
    func searchMetadata(_ input: Operations.searchMetadata.Input) async throws -> Operations.searchMetadata.Output
    /// - Remark: HTTP `GET /search/person`.
    /// - Remark: Generated from `#/paths//search/person/get(searchPerson)`.
    func searchPerson(_ input: Operations.searchPerson.Input) async throws -> Operations.searchPerson.Output
    /// - Remark: HTTP `GET /search/places`.
    /// - Remark: Generated from `#/paths//search/places/get(searchPlaces)`.
    func searchPlaces(_ input: Operations.searchPlaces.Input) async throws -> Operations.searchPlaces.Output
    /// - Remark: HTTP `POST /search/smart`.
    /// - Remark: Generated from `#/paths//search/smart/post(searchSmart)`.
    func searchSmart(_ input: Operations.searchSmart.Input) async throws -> Operations.searchSmart.Output
    /// - Remark: HTTP `GET /search/suggestions`.
    /// - Remark: Generated from `#/paths//search/suggestions/get(getSearchSuggestions)`.
    func getSearchSuggestions(_ input: Operations.getSearchSuggestions.Input) async throws -> Operations.getSearchSuggestions.Output
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/about`.
    /// - Remark: Generated from `#/paths//server-info/about/get(getAboutInfo)`.
    @available(*, deprecated)
    func getAboutInfo(_ input: Operations.getAboutInfo.Input) async throws -> Operations.getAboutInfo.Output
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/config`.
    /// - Remark: Generated from `#/paths//server-info/config/get(getServerConfig)`.
    @available(*, deprecated)
    func getServerConfig(_ input: Operations.getServerConfig.Input) async throws -> Operations.getServerConfig.Output
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/features`.
    /// - Remark: Generated from `#/paths//server-info/features/get(getServerFeatures)`.
    @available(*, deprecated)
    func getServerFeatures(_ input: Operations.getServerFeatures.Input) async throws -> Operations.getServerFeatures.Output
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/media-types`.
    /// - Remark: Generated from `#/paths//server-info/media-types/get(getSupportedMediaTypes)`.
    @available(*, deprecated)
    func getSupportedMediaTypes(_ input: Operations.getSupportedMediaTypes.Input) async throws -> Operations.getSupportedMediaTypes.Output
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/ping`.
    /// - Remark: Generated from `#/paths//server-info/ping/get(pingServer)`.
    @available(*, deprecated)
    func pingServer(_ input: Operations.pingServer.Input) async throws -> Operations.pingServer.Output
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/statistics`.
    /// - Remark: Generated from `#/paths//server-info/statistics/get(getServerStatistics)`.
    @available(*, deprecated)
    func getServerStatistics(_ input: Operations.getServerStatistics.Input) async throws -> Operations.getServerStatistics.Output
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/storage`.
    /// - Remark: Generated from `#/paths//server-info/storage/get(getStorage)`.
    @available(*, deprecated)
    func getStorage(_ input: Operations.getStorage.Input) async throws -> Operations.getStorage.Output
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/theme`.
    /// - Remark: Generated from `#/paths//server-info/theme/get(getTheme)`.
    @available(*, deprecated)
    func getTheme(_ input: Operations.getTheme.Input) async throws -> Operations.getTheme.Output
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/version`.
    /// - Remark: Generated from `#/paths//server-info/version/get(getServerVersion)`.
    @available(*, deprecated)
    func getServerVersion(_ input: Operations.getServerVersion.Input) async throws -> Operations.getServerVersion.Output
    /// - Remark: HTTP `GET /sessions`.
    /// - Remark: Generated from `#/paths//sessions/get(getSessions)`.
    func getSessions(_ input: Operations.getSessions.Input) async throws -> Operations.getSessions.Output
    /// - Remark: HTTP `DELETE /sessions`.
    /// - Remark: Generated from `#/paths//sessions/delete(deleteAllSessions)`.
    func deleteAllSessions(_ input: Operations.deleteAllSessions.Input) async throws -> Operations.deleteAllSessions.Output
    /// - Remark: HTTP `DELETE /sessions/{id}`.
    /// - Remark: Generated from `#/paths//sessions/{id}/delete(deleteSession)`.
    func deleteSession(_ input: Operations.deleteSession.Input) async throws -> Operations.deleteSession.Output
    /// - Remark: HTTP `GET /shared-links`.
    /// - Remark: Generated from `#/paths//shared-links/get(getAllSharedLinks)`.
    func getAllSharedLinks(_ input: Operations.getAllSharedLinks.Input) async throws -> Operations.getAllSharedLinks.Output
    /// - Remark: HTTP `POST /shared-links`.
    /// - Remark: Generated from `#/paths//shared-links/post(createSharedLink)`.
    func createSharedLink(_ input: Operations.createSharedLink.Input) async throws -> Operations.createSharedLink.Output
    /// - Remark: HTTP `GET /shared-links/me`.
    /// - Remark: Generated from `#/paths//shared-links/me/get(getMySharedLink)`.
    func getMySharedLink(_ input: Operations.getMySharedLink.Input) async throws -> Operations.getMySharedLink.Output
    /// - Remark: HTTP `GET /shared-links/{id}`.
    /// - Remark: Generated from `#/paths//shared-links/{id}/get(getSharedLinkById)`.
    func getSharedLinkById(_ input: Operations.getSharedLinkById.Input) async throws -> Operations.getSharedLinkById.Output
    /// - Remark: HTTP `PATCH /shared-links/{id}`.
    /// - Remark: Generated from `#/paths//shared-links/{id}/patch(updateSharedLink)`.
    func updateSharedLink(_ input: Operations.updateSharedLink.Input) async throws -> Operations.updateSharedLink.Output
    /// - Remark: HTTP `DELETE /shared-links/{id}`.
    /// - Remark: Generated from `#/paths//shared-links/{id}/delete(removeSharedLink)`.
    func removeSharedLink(_ input: Operations.removeSharedLink.Input) async throws -> Operations.removeSharedLink.Output
    /// - Remark: HTTP `PUT /shared-links/{id}/assets`.
    /// - Remark: Generated from `#/paths//shared-links/{id}/assets/put(addSharedLinkAssets)`.
    func addSharedLinkAssets(_ input: Operations.addSharedLinkAssets.Input) async throws -> Operations.addSharedLinkAssets.Output
    /// - Remark: HTTP `DELETE /shared-links/{id}/assets`.
    /// - Remark: Generated from `#/paths//shared-links/{id}/assets/delete(removeSharedLinkAssets)`.
    func removeSharedLinkAssets(_ input: Operations.removeSharedLinkAssets.Input) async throws -> Operations.removeSharedLinkAssets.Output
    /// - Remark: HTTP `POST /sync/delta-sync`.
    /// - Remark: Generated from `#/paths//sync/delta-sync/post(getDeltaSync)`.
    func getDeltaSync(_ input: Operations.getDeltaSync.Input) async throws -> Operations.getDeltaSync.Output
    /// - Remark: HTTP `POST /sync/full-sync`.
    /// - Remark: Generated from `#/paths//sync/full-sync/post(getFullSyncForUser)`.
    func getFullSyncForUser(_ input: Operations.getFullSyncForUser.Input) async throws -> Operations.getFullSyncForUser.Output
    /// - Remark: HTTP `GET /system-config`.
    /// - Remark: Generated from `#/paths//system-config/get(getConfig)`.
    func getConfig(_ input: Operations.getConfig.Input) async throws -> Operations.getConfig.Output
    /// - Remark: HTTP `PUT /system-config`.
    /// - Remark: Generated from `#/paths//system-config/put(updateConfig)`.
    func updateConfig(_ input: Operations.updateConfig.Input) async throws -> Operations.updateConfig.Output
    /// - Remark: HTTP `GET /system-config/defaults`.
    /// - Remark: Generated from `#/paths//system-config/defaults/get(getConfigDefaults)`.
    func getConfigDefaults(_ input: Operations.getConfigDefaults.Input) async throws -> Operations.getConfigDefaults.Output
    /// - Remark: HTTP `GET /system-config/storage-template-options`.
    /// - Remark: Generated from `#/paths//system-config/storage-template-options/get(getStorageTemplateOptions)`.
    func getStorageTemplateOptions(_ input: Operations.getStorageTemplateOptions.Input) async throws -> Operations.getStorageTemplateOptions.Output
    /// - Remark: HTTP `GET /system-metadata/admin-onboarding`.
    /// - Remark: Generated from `#/paths//system-metadata/admin-onboarding/get(getAdminOnboarding)`.
    func getAdminOnboarding(_ input: Operations.getAdminOnboarding.Input) async throws -> Operations.getAdminOnboarding.Output
    /// - Remark: HTTP `POST /system-metadata/admin-onboarding`.
    /// - Remark: Generated from `#/paths//system-metadata/admin-onboarding/post(updateAdminOnboarding)`.
    func updateAdminOnboarding(_ input: Operations.updateAdminOnboarding.Input) async throws -> Operations.updateAdminOnboarding.Output
    /// - Remark: HTTP `GET /system-metadata/reverse-geocoding-state`.
    /// - Remark: Generated from `#/paths//system-metadata/reverse-geocoding-state/get(getReverseGeocodingState)`.
    func getReverseGeocodingState(_ input: Operations.getReverseGeocodingState.Input) async throws -> Operations.getReverseGeocodingState.Output
    /// - Remark: HTTP `GET /tags`.
    /// - Remark: Generated from `#/paths//tags/get(getAllTags)`.
    func getAllTags(_ input: Operations.getAllTags.Input) async throws -> Operations.getAllTags.Output
    /// - Remark: HTTP `POST /tags`.
    /// - Remark: Generated from `#/paths//tags/post(createTag)`.
    func createTag(_ input: Operations.createTag.Input) async throws -> Operations.createTag.Output
    /// - Remark: HTTP `GET /tags/{id}`.
    /// - Remark: Generated from `#/paths//tags/{id}/get(getTagById)`.
    func getTagById(_ input: Operations.getTagById.Input) async throws -> Operations.getTagById.Output
    /// - Remark: HTTP `PATCH /tags/{id}`.
    /// - Remark: Generated from `#/paths//tags/{id}/patch(updateTag)`.
    func updateTag(_ input: Operations.updateTag.Input) async throws -> Operations.updateTag.Output
    /// - Remark: HTTP `DELETE /tags/{id}`.
    /// - Remark: Generated from `#/paths//tags/{id}/delete(deleteTag)`.
    func deleteTag(_ input: Operations.deleteTag.Input) async throws -> Operations.deleteTag.Output
    /// - Remark: HTTP `GET /tags/{id}/assets`.
    /// - Remark: Generated from `#/paths//tags/{id}/assets/get(getTagAssets)`.
    func getTagAssets(_ input: Operations.getTagAssets.Input) async throws -> Operations.getTagAssets.Output
    /// - Remark: HTTP `PUT /tags/{id}/assets`.
    /// - Remark: Generated from `#/paths//tags/{id}/assets/put(tagAssets)`.
    func tagAssets(_ input: Operations.tagAssets.Input) async throws -> Operations.tagAssets.Output
    /// - Remark: HTTP `DELETE /tags/{id}/assets`.
    /// - Remark: Generated from `#/paths//tags/{id}/assets/delete(untagAssets)`.
    func untagAssets(_ input: Operations.untagAssets.Input) async throws -> Operations.untagAssets.Output
    /// - Remark: HTTP `GET /timeline/bucket`.
    /// - Remark: Generated from `#/paths//timeline/bucket/get(getTimeBucket)`.
    func getTimeBucket(_ input: Operations.getTimeBucket.Input) async throws -> Operations.getTimeBucket.Output
    /// - Remark: HTTP `GET /timeline/buckets`.
    /// - Remark: Generated from `#/paths//timeline/buckets/get(getTimeBuckets)`.
    func getTimeBuckets(_ input: Operations.getTimeBuckets.Input) async throws -> Operations.getTimeBuckets.Output
    /// - Remark: HTTP `POST /trash/empty`.
    /// - Remark: Generated from `#/paths//trash/empty/post(emptyTrash)`.
    func emptyTrash(_ input: Operations.emptyTrash.Input) async throws -> Operations.emptyTrash.Output
    /// - Remark: HTTP `POST /trash/restore`.
    /// - Remark: Generated from `#/paths//trash/restore/post(restoreTrash)`.
    func restoreTrash(_ input: Operations.restoreTrash.Input) async throws -> Operations.restoreTrash.Output
    /// - Remark: HTTP `POST /trash/restore/assets`.
    /// - Remark: Generated from `#/paths//trash/restore/assets/post(restoreAssets)`.
    func restoreAssets(_ input: Operations.restoreAssets.Input) async throws -> Operations.restoreAssets.Output
    /// - Remark: HTTP `GET /users`.
    /// - Remark: Generated from `#/paths//users/get(searchUsers)`.
    func searchUsers(_ input: Operations.searchUsers.Input) async throws -> Operations.searchUsers.Output
    /// - Remark: HTTP `GET /users/me`.
    /// - Remark: Generated from `#/paths//users/me/get(getMyUser)`.
    func getMyUser(_ input: Operations.getMyUser.Input) async throws -> Operations.getMyUser.Output
    /// - Remark: HTTP `PUT /users/me`.
    /// - Remark: Generated from `#/paths//users/me/put(updateMyUser)`.
    func updateMyUser(_ input: Operations.updateMyUser.Input) async throws -> Operations.updateMyUser.Output
    /// - Remark: HTTP `GET /users/me/preferences`.
    /// - Remark: Generated from `#/paths//users/me/preferences/get(getMyPreferences)`.
    func getMyPreferences(_ input: Operations.getMyPreferences.Input) async throws -> Operations.getMyPreferences.Output
    /// - Remark: HTTP `PUT /users/me/preferences`.
    /// - Remark: Generated from `#/paths//users/me/preferences/put(updateMyPreferences)`.
    func updateMyPreferences(_ input: Operations.updateMyPreferences.Input) async throws -> Operations.updateMyPreferences.Output
    /// - Remark: HTTP `POST /users/profile-image`.
    /// - Remark: Generated from `#/paths//users/profile-image/post(createProfileImage)`.
    func createProfileImage(_ input: Operations.createProfileImage.Input) async throws -> Operations.createProfileImage.Output
    /// - Remark: HTTP `DELETE /users/profile-image`.
    /// - Remark: Generated from `#/paths//users/profile-image/delete(deleteProfileImage)`.
    func deleteProfileImage(_ input: Operations.deleteProfileImage.Input) async throws -> Operations.deleteProfileImage.Output
    /// - Remark: HTTP `GET /users/{id}`.
    /// - Remark: Generated from `#/paths//users/{id}/get(getUser)`.
    func getUser(_ input: Operations.getUser.Input) async throws -> Operations.getUser.Output
    /// - Remark: HTTP `GET /users/{id}/profile-image`.
    /// - Remark: Generated from `#/paths//users/{id}/profile-image/get(getProfileImage)`.
    func getProfileImage(_ input: Operations.getProfileImage.Input) async throws -> Operations.getProfileImage.Output
}

/// Convenience overloads for operation inputs.
extension APIProtocol {
    /// - Remark: HTTP `GET /activities`.
    /// - Remark: Generated from `#/paths//activities/get(getActivities)`.
    internal func getActivities(
        query: Operations.getActivities.Input.Query,
        headers: Operations.getActivities.Input.Headers = .init()
    ) async throws -> Operations.getActivities.Output {
        try await getActivities(Operations.getActivities.Input(
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `POST /activities`.
    /// - Remark: Generated from `#/paths//activities/post(createActivity)`.
    internal func createActivity(
        headers: Operations.createActivity.Input.Headers = .init(),
        body: Operations.createActivity.Input.Body
    ) async throws -> Operations.createActivity.Output {
        try await createActivity(Operations.createActivity.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /activities/statistics`.
    /// - Remark: Generated from `#/paths//activities/statistics/get(getActivityStatistics)`.
    internal func getActivityStatistics(
        query: Operations.getActivityStatistics.Input.Query,
        headers: Operations.getActivityStatistics.Input.Headers = .init()
    ) async throws -> Operations.getActivityStatistics.Output {
        try await getActivityStatistics(Operations.getActivityStatistics.Input(
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `DELETE /activities/{id}`.
    /// - Remark: Generated from `#/paths//activities/{id}/delete(deleteActivity)`.
    internal func deleteActivity(path: Operations.deleteActivity.Input.Path) async throws -> Operations.deleteActivity.Output {
        try await deleteActivity(Operations.deleteActivity.Input(path: path))
    }
    /// - Remark: HTTP `GET /admin/users`.
    /// - Remark: Generated from `#/paths//admin/users/get(searchUsersAdmin)`.
    internal func searchUsersAdmin(
        query: Operations.searchUsersAdmin.Input.Query = .init(),
        headers: Operations.searchUsersAdmin.Input.Headers = .init()
    ) async throws -> Operations.searchUsersAdmin.Output {
        try await searchUsersAdmin(Operations.searchUsersAdmin.Input(
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `POST /admin/users`.
    /// - Remark: Generated from `#/paths//admin/users/post(createUserAdmin)`.
    internal func createUserAdmin(
        headers: Operations.createUserAdmin.Input.Headers = .init(),
        body: Operations.createUserAdmin.Input.Body
    ) async throws -> Operations.createUserAdmin.Output {
        try await createUserAdmin(Operations.createUserAdmin.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /admin/users/{id}`.
    /// - Remark: Generated from `#/paths//admin/users/{id}/get(getUserAdmin)`.
    internal func getUserAdmin(
        path: Operations.getUserAdmin.Input.Path,
        headers: Operations.getUserAdmin.Input.Headers = .init()
    ) async throws -> Operations.getUserAdmin.Output {
        try await getUserAdmin(Operations.getUserAdmin.Input(
            path: path,
            headers: headers
        ))
    }
    /// - Remark: HTTP `PUT /admin/users/{id}`.
    /// - Remark: Generated from `#/paths//admin/users/{id}/put(updateUserAdmin)`.
    internal func updateUserAdmin(
        path: Operations.updateUserAdmin.Input.Path,
        headers: Operations.updateUserAdmin.Input.Headers = .init(),
        body: Operations.updateUserAdmin.Input.Body
    ) async throws -> Operations.updateUserAdmin.Output {
        try await updateUserAdmin(Operations.updateUserAdmin.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `DELETE /admin/users/{id}`.
    /// - Remark: Generated from `#/paths//admin/users/{id}/delete(deleteUserAdmin)`.
    internal func deleteUserAdmin(
        path: Operations.deleteUserAdmin.Input.Path,
        headers: Operations.deleteUserAdmin.Input.Headers = .init(),
        body: Operations.deleteUserAdmin.Input.Body
    ) async throws -> Operations.deleteUserAdmin.Output {
        try await deleteUserAdmin(Operations.deleteUserAdmin.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /admin/users/{id}/preferences`.
    /// - Remark: Generated from `#/paths//admin/users/{id}/preferences/get(getUserPreferencesAdmin)`.
    internal func getUserPreferencesAdmin(
        path: Operations.getUserPreferencesAdmin.Input.Path,
        headers: Operations.getUserPreferencesAdmin.Input.Headers = .init()
    ) async throws -> Operations.getUserPreferencesAdmin.Output {
        try await getUserPreferencesAdmin(Operations.getUserPreferencesAdmin.Input(
            path: path,
            headers: headers
        ))
    }
    /// - Remark: HTTP `PUT /admin/users/{id}/preferences`.
    /// - Remark: Generated from `#/paths//admin/users/{id}/preferences/put(updateUserPreferencesAdmin)`.
    internal func updateUserPreferencesAdmin(
        path: Operations.updateUserPreferencesAdmin.Input.Path,
        headers: Operations.updateUserPreferencesAdmin.Input.Headers = .init(),
        body: Operations.updateUserPreferencesAdmin.Input.Body
    ) async throws -> Operations.updateUserPreferencesAdmin.Output {
        try await updateUserPreferencesAdmin(Operations.updateUserPreferencesAdmin.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `POST /admin/users/{id}/restore`.
    /// - Remark: Generated from `#/paths//admin/users/{id}/restore/post(restoreUserAdmin)`.
    internal func restoreUserAdmin(
        path: Operations.restoreUserAdmin.Input.Path,
        headers: Operations.restoreUserAdmin.Input.Headers = .init()
    ) async throws -> Operations.restoreUserAdmin.Output {
        try await restoreUserAdmin(Operations.restoreUserAdmin.Input(
            path: path,
            headers: headers
        ))
    }
    /// - Remark: HTTP `GET /albums`.
    /// - Remark: Generated from `#/paths//albums/get(getAllAlbums)`.
    internal func getAllAlbums(
        query: Operations.getAllAlbums.Input.Query = .init(),
        headers: Operations.getAllAlbums.Input.Headers = .init()
    ) async throws -> Operations.getAllAlbums.Output {
        try await getAllAlbums(Operations.getAllAlbums.Input(
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `POST /albums`.
    /// - Remark: Generated from `#/paths//albums/post(createAlbum)`.
    internal func createAlbum(
        headers: Operations.createAlbum.Input.Headers = .init(),
        body: Operations.createAlbum.Input.Body
    ) async throws -> Operations.createAlbum.Output {
        try await createAlbum(Operations.createAlbum.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /albums/count`.
    /// - Remark: Generated from `#/paths//albums/count/get(getAlbumCount)`.
    internal func getAlbumCount(headers: Operations.getAlbumCount.Input.Headers = .init()) async throws -> Operations.getAlbumCount.Output {
        try await getAlbumCount(Operations.getAlbumCount.Input(headers: headers))
    }
    /// - Remark: HTTP `GET /albums/{id}`.
    /// - Remark: Generated from `#/paths//albums/{id}/get(getAlbumInfo)`.
    internal func getAlbumInfo(
        path: Operations.getAlbumInfo.Input.Path,
        query: Operations.getAlbumInfo.Input.Query = .init(),
        headers: Operations.getAlbumInfo.Input.Headers = .init()
    ) async throws -> Operations.getAlbumInfo.Output {
        try await getAlbumInfo(Operations.getAlbumInfo.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `PATCH /albums/{id}`.
    /// - Remark: Generated from `#/paths//albums/{id}/patch(updateAlbumInfo)`.
    internal func updateAlbumInfo(
        path: Operations.updateAlbumInfo.Input.Path,
        headers: Operations.updateAlbumInfo.Input.Headers = .init(),
        body: Operations.updateAlbumInfo.Input.Body
    ) async throws -> Operations.updateAlbumInfo.Output {
        try await updateAlbumInfo(Operations.updateAlbumInfo.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `DELETE /albums/{id}`.
    /// - Remark: Generated from `#/paths//albums/{id}/delete(deleteAlbum)`.
    internal func deleteAlbum(path: Operations.deleteAlbum.Input.Path) async throws -> Operations.deleteAlbum.Output {
        try await deleteAlbum(Operations.deleteAlbum.Input(path: path))
    }
    /// - Remark: HTTP `PUT /albums/{id}/assets`.
    /// - Remark: Generated from `#/paths//albums/{id}/assets/put(addAssetsToAlbum)`.
    internal func addAssetsToAlbum(
        path: Operations.addAssetsToAlbum.Input.Path,
        query: Operations.addAssetsToAlbum.Input.Query = .init(),
        headers: Operations.addAssetsToAlbum.Input.Headers = .init(),
        body: Operations.addAssetsToAlbum.Input.Body
    ) async throws -> Operations.addAssetsToAlbum.Output {
        try await addAssetsToAlbum(Operations.addAssetsToAlbum.Input(
            path: path,
            query: query,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `DELETE /albums/{id}/assets`.
    /// - Remark: Generated from `#/paths//albums/{id}/assets/delete(removeAssetFromAlbum)`.
    internal func removeAssetFromAlbum(
        path: Operations.removeAssetFromAlbum.Input.Path,
        headers: Operations.removeAssetFromAlbum.Input.Headers = .init(),
        body: Operations.removeAssetFromAlbum.Input.Body
    ) async throws -> Operations.removeAssetFromAlbum.Output {
        try await removeAssetFromAlbum(Operations.removeAssetFromAlbum.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `PUT /albums/{id}/user/{userId}`.
    /// - Remark: Generated from `#/paths//albums/{id}/user/{userId}/put(updateAlbumUser)`.
    internal func updateAlbumUser(
        path: Operations.updateAlbumUser.Input.Path,
        body: Operations.updateAlbumUser.Input.Body
    ) async throws -> Operations.updateAlbumUser.Output {
        try await updateAlbumUser(Operations.updateAlbumUser.Input(
            path: path,
            body: body
        ))
    }
    /// - Remark: HTTP `DELETE /albums/{id}/user/{userId}`.
    /// - Remark: Generated from `#/paths//albums/{id}/user/{userId}/delete(removeUserFromAlbum)`.
    internal func removeUserFromAlbum(path: Operations.removeUserFromAlbum.Input.Path) async throws -> Operations.removeUserFromAlbum.Output {
        try await removeUserFromAlbum(Operations.removeUserFromAlbum.Input(path: path))
    }
    /// - Remark: HTTP `PUT /albums/{id}/users`.
    /// - Remark: Generated from `#/paths//albums/{id}/users/put(addUsersToAlbum)`.
    internal func addUsersToAlbum(
        path: Operations.addUsersToAlbum.Input.Path,
        headers: Operations.addUsersToAlbum.Input.Headers = .init(),
        body: Operations.addUsersToAlbum.Input.Body
    ) async throws -> Operations.addUsersToAlbum.Output {
        try await addUsersToAlbum(Operations.addUsersToAlbum.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /api-keys`.
    /// - Remark: Generated from `#/paths//api-keys/get(getApiKeys)`.
    internal func getApiKeys(headers: Operations.getApiKeys.Input.Headers = .init()) async throws -> Operations.getApiKeys.Output {
        try await getApiKeys(Operations.getApiKeys.Input(headers: headers))
    }
    /// - Remark: HTTP `POST /api-keys`.
    /// - Remark: Generated from `#/paths//api-keys/post(createApiKey)`.
    internal func createApiKey(
        headers: Operations.createApiKey.Input.Headers = .init(),
        body: Operations.createApiKey.Input.Body
    ) async throws -> Operations.createApiKey.Output {
        try await createApiKey(Operations.createApiKey.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /api-keys/{id}`.
    /// - Remark: Generated from `#/paths//api-keys/{id}/get(getApiKey)`.
    internal func getApiKey(
        path: Operations.getApiKey.Input.Path,
        headers: Operations.getApiKey.Input.Headers = .init()
    ) async throws -> Operations.getApiKey.Output {
        try await getApiKey(Operations.getApiKey.Input(
            path: path,
            headers: headers
        ))
    }
    /// - Remark: HTTP `PUT /api-keys/{id}`.
    /// - Remark: Generated from `#/paths//api-keys/{id}/put(updateApiKey)`.
    internal func updateApiKey(
        path: Operations.updateApiKey.Input.Path,
        headers: Operations.updateApiKey.Input.Headers = .init(),
        body: Operations.updateApiKey.Input.Body
    ) async throws -> Operations.updateApiKey.Output {
        try await updateApiKey(Operations.updateApiKey.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `DELETE /api-keys/{id}`.
    /// - Remark: Generated from `#/paths//api-keys/{id}/delete(deleteApiKey)`.
    internal func deleteApiKey(path: Operations.deleteApiKey.Input.Path) async throws -> Operations.deleteApiKey.Output {
        try await deleteApiKey(Operations.deleteApiKey.Input(path: path))
    }
    /// - Remark: HTTP `POST /assets`.
    /// - Remark: Generated from `#/paths//assets/post(uploadAsset)`.
    internal func uploadAsset(
        query: Operations.uploadAsset.Input.Query = .init(),
        headers: Operations.uploadAsset.Input.Headers = .init(),
        body: Operations.uploadAsset.Input.Body
    ) async throws -> Operations.uploadAsset.Output {
        try await uploadAsset(Operations.uploadAsset.Input(
            query: query,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `PUT /assets`.
    /// - Remark: Generated from `#/paths//assets/put(updateAssets)`.
    internal func updateAssets(body: Operations.updateAssets.Input.Body) async throws -> Operations.updateAssets.Output {
        try await updateAssets(Operations.updateAssets.Input(body: body))
    }
    /// - Remark: HTTP `DELETE /assets`.
    /// - Remark: Generated from `#/paths//assets/delete(deleteAssets)`.
    internal func deleteAssets(body: Operations.deleteAssets.Input.Body) async throws -> Operations.deleteAssets.Output {
        try await deleteAssets(Operations.deleteAssets.Input(body: body))
    }
    /// Checks if assets exist by checksums
    ///
    /// - Remark: HTTP `POST /assets/bulk-upload-check`.
    /// - Remark: Generated from `#/paths//assets/bulk-upload-check/post(checkBulkUpload)`.
    internal func checkBulkUpload(
        headers: Operations.checkBulkUpload.Input.Headers = .init(),
        body: Operations.checkBulkUpload.Input.Body
    ) async throws -> Operations.checkBulkUpload.Output {
        try await checkBulkUpload(Operations.checkBulkUpload.Input(
            headers: headers,
            body: body
        ))
    }
    /// Get all asset of a device that are in the database, ID only.
    ///
    /// - Remark: HTTP `GET /assets/device/{deviceId}`.
    /// - Remark: Generated from `#/paths//assets/device/{deviceId}/get(getAllUserAssetsByDeviceId)`.
    internal func getAllUserAssetsByDeviceId(
        path: Operations.getAllUserAssetsByDeviceId.Input.Path,
        headers: Operations.getAllUserAssetsByDeviceId.Input.Headers = .init()
    ) async throws -> Operations.getAllUserAssetsByDeviceId.Output {
        try await getAllUserAssetsByDeviceId(Operations.getAllUserAssetsByDeviceId.Input(
            path: path,
            headers: headers
        ))
    }
    /// Checks if multiple assets exist on the server and returns all existing - used by background backup
    ///
    /// - Remark: HTTP `POST /assets/exist`.
    /// - Remark: Generated from `#/paths//assets/exist/post(checkExistingAssets)`.
    internal func checkExistingAssets(
        headers: Operations.checkExistingAssets.Input.Headers = .init(),
        body: Operations.checkExistingAssets.Input.Body
    ) async throws -> Operations.checkExistingAssets.Output {
        try await checkExistingAssets(Operations.checkExistingAssets.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `POST /assets/jobs`.
    /// - Remark: Generated from `#/paths//assets/jobs/post(runAssetJobs)`.
    internal func runAssetJobs(body: Operations.runAssetJobs.Input.Body) async throws -> Operations.runAssetJobs.Output {
        try await runAssetJobs(Operations.runAssetJobs.Input(body: body))
    }
    /// - Remark: HTTP `GET /assets/memory-lane`.
    /// - Remark: Generated from `#/paths//assets/memory-lane/get(getMemoryLane)`.
    internal func getMemoryLane(
        query: Operations.getMemoryLane.Input.Query,
        headers: Operations.getMemoryLane.Input.Headers = .init()
    ) async throws -> Operations.getMemoryLane.Output {
        try await getMemoryLane(Operations.getMemoryLane.Input(
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `GET /assets/random`.
    /// - Remark: Generated from `#/paths//assets/random/get(getRandom)`.
    internal func getRandom(
        query: Operations.getRandom.Input.Query = .init(),
        headers: Operations.getRandom.Input.Headers = .init()
    ) async throws -> Operations.getRandom.Output {
        try await getRandom(Operations.getRandom.Input(
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `PUT /assets/stack/parent`.
    /// - Remark: Generated from `#/paths//assets/stack/parent/put(updateStackParent)`.
    internal func updateStackParent(body: Operations.updateStackParent.Input.Body) async throws -> Operations.updateStackParent.Output {
        try await updateStackParent(Operations.updateStackParent.Input(body: body))
    }
    /// - Remark: HTTP `GET /assets/statistics`.
    /// - Remark: Generated from `#/paths//assets/statistics/get(getAssetStatistics)`.
    internal func getAssetStatistics(
        query: Operations.getAssetStatistics.Input.Query = .init(),
        headers: Operations.getAssetStatistics.Input.Headers = .init()
    ) async throws -> Operations.getAssetStatistics.Output {
        try await getAssetStatistics(Operations.getAssetStatistics.Input(
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `GET /assets/{id}`.
    /// - Remark: Generated from `#/paths//assets/{id}/get(getAssetInfo)`.
    internal func getAssetInfo(
        path: Operations.getAssetInfo.Input.Path,
        query: Operations.getAssetInfo.Input.Query = .init(),
        headers: Operations.getAssetInfo.Input.Headers = .init()
    ) async throws -> Operations.getAssetInfo.Output {
        try await getAssetInfo(Operations.getAssetInfo.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `PUT /assets/{id}`.
    /// - Remark: Generated from `#/paths//assets/{id}/put(updateAsset)`.
    internal func updateAsset(
        path: Operations.updateAsset.Input.Path,
        headers: Operations.updateAsset.Input.Headers = .init(),
        body: Operations.updateAsset.Input.Body
    ) async throws -> Operations.updateAsset.Output {
        try await updateAsset(Operations.updateAsset.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /assets/{id}/original`.
    /// - Remark: Generated from `#/paths//assets/{id}/original/get(downloadAsset)`.
    internal func downloadAsset(
        path: Operations.downloadAsset.Input.Path,
        query: Operations.downloadAsset.Input.Query = .init(),
        headers: Operations.downloadAsset.Input.Headers = .init()
    ) async throws -> Operations.downloadAsset.Output {
        try await downloadAsset(Operations.downloadAsset.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Replace the asset with new file, without changing its id
    ///
    /// - Remark: HTTP `PUT /assets/{id}/original`.
    /// - Remark: Generated from `#/paths//assets/{id}/original/put(replaceAsset)`.
    internal func replaceAsset(
        path: Operations.replaceAsset.Input.Path,
        query: Operations.replaceAsset.Input.Query = .init(),
        headers: Operations.replaceAsset.Input.Headers = .init(),
        body: Operations.replaceAsset.Input.Body
    ) async throws -> Operations.replaceAsset.Output {
        try await replaceAsset(Operations.replaceAsset.Input(
            path: path,
            query: query,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /assets/{id}/thumbnail`.
    /// - Remark: Generated from `#/paths//assets/{id}/thumbnail/get(viewAsset)`.
    internal func viewAsset(
        path: Operations.viewAsset.Input.Path,
        query: Operations.viewAsset.Input.Query = .init(),
        headers: Operations.viewAsset.Input.Headers = .init()
    ) async throws -> Operations.viewAsset.Output {
        try await viewAsset(Operations.viewAsset.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `GET /assets/{id}/video/playback`.
    /// - Remark: Generated from `#/paths//assets/{id}/video/playback/get(playAssetVideo)`.
    internal func playAssetVideo(
        path: Operations.playAssetVideo.Input.Path,
        query: Operations.playAssetVideo.Input.Query = .init(),
        headers: Operations.playAssetVideo.Input.Headers = .init()
    ) async throws -> Operations.playAssetVideo.Output {
        try await playAssetVideo(Operations.playAssetVideo.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `GET /audit/deletes`.
    /// - Remark: Generated from `#/paths//audit/deletes/get(getAuditDeletes)`.
    internal func getAuditDeletes(
        query: Operations.getAuditDeletes.Input.Query,
        headers: Operations.getAuditDeletes.Input.Headers = .init()
    ) async throws -> Operations.getAuditDeletes.Output {
        try await getAuditDeletes(Operations.getAuditDeletes.Input(
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `POST /auth/admin-sign-up`.
    /// - Remark: Generated from `#/paths//auth/admin-sign-up/post(signUpAdmin)`.
    internal func signUpAdmin(
        headers: Operations.signUpAdmin.Input.Headers = .init(),
        body: Operations.signUpAdmin.Input.Body
    ) async throws -> Operations.signUpAdmin.Output {
        try await signUpAdmin(Operations.signUpAdmin.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `POST /auth/change-password`.
    /// - Remark: Generated from `#/paths//auth/change-password/post(changePassword)`.
    internal func changePassword(
        headers: Operations.changePassword.Input.Headers = .init(),
        body: Operations.changePassword.Input.Body
    ) async throws -> Operations.changePassword.Output {
        try await changePassword(Operations.changePassword.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `POST /auth/login`.
    /// - Remark: Generated from `#/paths//auth/login/post(login)`.
    internal func login(
        headers: Operations.login.Input.Headers = .init(),
        body: Operations.login.Input.Body
    ) async throws -> Operations.login.Output {
        try await login(Operations.login.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `POST /auth/logout`.
    /// - Remark: Generated from `#/paths//auth/logout/post(logout)`.
    internal func logout(headers: Operations.logout.Input.Headers = .init()) async throws -> Operations.logout.Output {
        try await logout(Operations.logout.Input(headers: headers))
    }
    /// - Remark: HTTP `POST /auth/validateToken`.
    /// - Remark: Generated from `#/paths//auth/validateToken/post(validateAccessToken)`.
    internal func validateAccessToken(headers: Operations.validateAccessToken.Input.Headers = .init()) async throws -> Operations.validateAccessToken.Output {
        try await validateAccessToken(Operations.validateAccessToken.Input(headers: headers))
    }
    /// - Remark: HTTP `POST /download/archive`.
    /// - Remark: Generated from `#/paths//download/archive/post(downloadArchive)`.
    internal func downloadArchive(
        query: Operations.downloadArchive.Input.Query = .init(),
        headers: Operations.downloadArchive.Input.Headers = .init(),
        body: Operations.downloadArchive.Input.Body
    ) async throws -> Operations.downloadArchive.Output {
        try await downloadArchive(Operations.downloadArchive.Input(
            query: query,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `POST /download/info`.
    /// - Remark: Generated from `#/paths//download/info/post(getDownloadInfo)`.
    internal func getDownloadInfo(
        query: Operations.getDownloadInfo.Input.Query = .init(),
        headers: Operations.getDownloadInfo.Input.Headers = .init(),
        body: Operations.getDownloadInfo.Input.Body
    ) async throws -> Operations.getDownloadInfo.Output {
        try await getDownloadInfo(Operations.getDownloadInfo.Input(
            query: query,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /duplicates`.
    /// - Remark: Generated from `#/paths//duplicates/get(getAssetDuplicates)`.
    internal func getAssetDuplicates(headers: Operations.getAssetDuplicates.Input.Headers = .init()) async throws -> Operations.getAssetDuplicates.Output {
        try await getAssetDuplicates(Operations.getAssetDuplicates.Input(headers: headers))
    }
    /// - Remark: HTTP `GET /faces`.
    /// - Remark: Generated from `#/paths//faces/get(getFaces)`.
    internal func getFaces(
        query: Operations.getFaces.Input.Query,
        headers: Operations.getFaces.Input.Headers = .init()
    ) async throws -> Operations.getFaces.Output {
        try await getFaces(Operations.getFaces.Input(
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `PUT /faces/{id}`.
    /// - Remark: Generated from `#/paths//faces/{id}/put(reassignFacesById)`.
    internal func reassignFacesById(
        path: Operations.reassignFacesById.Input.Path,
        headers: Operations.reassignFacesById.Input.Headers = .init(),
        body: Operations.reassignFacesById.Input.Body
    ) async throws -> Operations.reassignFacesById.Output {
        try await reassignFacesById(Operations.reassignFacesById.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /jobs`.
    /// - Remark: Generated from `#/paths//jobs/get(getAllJobsStatus)`.
    internal func getAllJobsStatus(headers: Operations.getAllJobsStatus.Input.Headers = .init()) async throws -> Operations.getAllJobsStatus.Output {
        try await getAllJobsStatus(Operations.getAllJobsStatus.Input(headers: headers))
    }
    /// - Remark: HTTP `PUT /jobs/{id}`.
    /// - Remark: Generated from `#/paths//jobs/{id}/put(sendJobCommand)`.
    internal func sendJobCommand(
        path: Operations.sendJobCommand.Input.Path,
        headers: Operations.sendJobCommand.Input.Headers = .init(),
        body: Operations.sendJobCommand.Input.Body
    ) async throws -> Operations.sendJobCommand.Output {
        try await sendJobCommand(Operations.sendJobCommand.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /libraries`.
    /// - Remark: Generated from `#/paths//libraries/get(getAllLibraries)`.
    internal func getAllLibraries(headers: Operations.getAllLibraries.Input.Headers = .init()) async throws -> Operations.getAllLibraries.Output {
        try await getAllLibraries(Operations.getAllLibraries.Input(headers: headers))
    }
    /// - Remark: HTTP `POST /libraries`.
    /// - Remark: Generated from `#/paths//libraries/post(createLibrary)`.
    internal func createLibrary(
        headers: Operations.createLibrary.Input.Headers = .init(),
        body: Operations.createLibrary.Input.Body
    ) async throws -> Operations.createLibrary.Output {
        try await createLibrary(Operations.createLibrary.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /libraries/{id}`.
    /// - Remark: Generated from `#/paths//libraries/{id}/get(getLibrary)`.
    internal func getLibrary(
        path: Operations.getLibrary.Input.Path,
        headers: Operations.getLibrary.Input.Headers = .init()
    ) async throws -> Operations.getLibrary.Output {
        try await getLibrary(Operations.getLibrary.Input(
            path: path,
            headers: headers
        ))
    }
    /// - Remark: HTTP `PUT /libraries/{id}`.
    /// - Remark: Generated from `#/paths//libraries/{id}/put(updateLibrary)`.
    internal func updateLibrary(
        path: Operations.updateLibrary.Input.Path,
        headers: Operations.updateLibrary.Input.Headers = .init(),
        body: Operations.updateLibrary.Input.Body
    ) async throws -> Operations.updateLibrary.Output {
        try await updateLibrary(Operations.updateLibrary.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `DELETE /libraries/{id}`.
    /// - Remark: Generated from `#/paths//libraries/{id}/delete(deleteLibrary)`.
    internal func deleteLibrary(path: Operations.deleteLibrary.Input.Path) async throws -> Operations.deleteLibrary.Output {
        try await deleteLibrary(Operations.deleteLibrary.Input(path: path))
    }
    /// - Remark: HTTP `POST /libraries/{id}/removeOffline`.
    /// - Remark: Generated from `#/paths//libraries/{id}/removeOffline/post(removeOfflineFiles)`.
    internal func removeOfflineFiles(path: Operations.removeOfflineFiles.Input.Path) async throws -> Operations.removeOfflineFiles.Output {
        try await removeOfflineFiles(Operations.removeOfflineFiles.Input(path: path))
    }
    /// - Remark: HTTP `POST /libraries/{id}/scan`.
    /// - Remark: Generated from `#/paths//libraries/{id}/scan/post(scanLibrary)`.
    internal func scanLibrary(
        path: Operations.scanLibrary.Input.Path,
        body: Operations.scanLibrary.Input.Body
    ) async throws -> Operations.scanLibrary.Output {
        try await scanLibrary(Operations.scanLibrary.Input(
            path: path,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /libraries/{id}/statistics`.
    /// - Remark: Generated from `#/paths//libraries/{id}/statistics/get(getLibraryStatistics)`.
    internal func getLibraryStatistics(
        path: Operations.getLibraryStatistics.Input.Path,
        headers: Operations.getLibraryStatistics.Input.Headers = .init()
    ) async throws -> Operations.getLibraryStatistics.Output {
        try await getLibraryStatistics(Operations.getLibraryStatistics.Input(
            path: path,
            headers: headers
        ))
    }
    /// - Remark: HTTP `POST /libraries/{id}/validate`.
    /// - Remark: Generated from `#/paths//libraries/{id}/validate/post(validate)`.
    internal func validate(
        path: Operations.validate.Input.Path,
        headers: Operations.validate.Input.Headers = .init(),
        body: Operations.validate.Input.Body
    ) async throws -> Operations.validate.Output {
        try await validate(Operations.validate.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /map/markers`.
    /// - Remark: Generated from `#/paths//map/markers/get(getMapMarkers)`.
    internal func getMapMarkers(
        query: Operations.getMapMarkers.Input.Query = .init(),
        headers: Operations.getMapMarkers.Input.Headers = .init()
    ) async throws -> Operations.getMapMarkers.Output {
        try await getMapMarkers(Operations.getMapMarkers.Input(
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `GET /map/style.json`.
    /// - Remark: Generated from `#/paths//map/style.json/get(getMapStyle)`.
    internal func getMapStyle(
        query: Operations.getMapStyle.Input.Query,
        headers: Operations.getMapStyle.Input.Headers = .init()
    ) async throws -> Operations.getMapStyle.Output {
        try await getMapStyle(Operations.getMapStyle.Input(
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `GET /memories`.
    /// - Remark: Generated from `#/paths//memories/get(searchMemories)`.
    internal func searchMemories(headers: Operations.searchMemories.Input.Headers = .init()) async throws -> Operations.searchMemories.Output {
        try await searchMemories(Operations.searchMemories.Input(headers: headers))
    }
    /// - Remark: HTTP `POST /memories`.
    /// - Remark: Generated from `#/paths//memories/post(createMemory)`.
    internal func createMemory(
        headers: Operations.createMemory.Input.Headers = .init(),
        body: Operations.createMemory.Input.Body
    ) async throws -> Operations.createMemory.Output {
        try await createMemory(Operations.createMemory.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /memories/{id}`.
    /// - Remark: Generated from `#/paths//memories/{id}/get(getMemory)`.
    internal func getMemory(
        path: Operations.getMemory.Input.Path,
        headers: Operations.getMemory.Input.Headers = .init()
    ) async throws -> Operations.getMemory.Output {
        try await getMemory(Operations.getMemory.Input(
            path: path,
            headers: headers
        ))
    }
    /// - Remark: HTTP `PUT /memories/{id}`.
    /// - Remark: Generated from `#/paths//memories/{id}/put(updateMemory)`.
    internal func updateMemory(
        path: Operations.updateMemory.Input.Path,
        headers: Operations.updateMemory.Input.Headers = .init(),
        body: Operations.updateMemory.Input.Body
    ) async throws -> Operations.updateMemory.Output {
        try await updateMemory(Operations.updateMemory.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `DELETE /memories/{id}`.
    /// - Remark: Generated from `#/paths//memories/{id}/delete(deleteMemory)`.
    internal func deleteMemory(path: Operations.deleteMemory.Input.Path) async throws -> Operations.deleteMemory.Output {
        try await deleteMemory(Operations.deleteMemory.Input(path: path))
    }
    /// - Remark: HTTP `PUT /memories/{id}/assets`.
    /// - Remark: Generated from `#/paths//memories/{id}/assets/put(addMemoryAssets)`.
    internal func addMemoryAssets(
        path: Operations.addMemoryAssets.Input.Path,
        headers: Operations.addMemoryAssets.Input.Headers = .init(),
        body: Operations.addMemoryAssets.Input.Body
    ) async throws -> Operations.addMemoryAssets.Output {
        try await addMemoryAssets(Operations.addMemoryAssets.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `DELETE /memories/{id}/assets`.
    /// - Remark: Generated from `#/paths//memories/{id}/assets/delete(removeMemoryAssets)`.
    internal func removeMemoryAssets(
        path: Operations.removeMemoryAssets.Input.Path,
        headers: Operations.removeMemoryAssets.Input.Headers = .init(),
        body: Operations.removeMemoryAssets.Input.Body
    ) async throws -> Operations.removeMemoryAssets.Output {
        try await removeMemoryAssets(Operations.removeMemoryAssets.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `POST /notifications/test-email`.
    /// - Remark: Generated from `#/paths//notifications/test-email/post(sendTestEmail)`.
    internal func sendTestEmail(body: Operations.sendTestEmail.Input.Body) async throws -> Operations.sendTestEmail.Output {
        try await sendTestEmail(Operations.sendTestEmail.Input(body: body))
    }
    /// - Remark: HTTP `POST /oauth/authorize`.
    /// - Remark: Generated from `#/paths//oauth/authorize/post(startOAuth)`.
    internal func startOAuth(
        headers: Operations.startOAuth.Input.Headers = .init(),
        body: Operations.startOAuth.Input.Body
    ) async throws -> Operations.startOAuth.Output {
        try await startOAuth(Operations.startOAuth.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `POST /oauth/callback`.
    /// - Remark: Generated from `#/paths//oauth/callback/post(finishOAuth)`.
    internal func finishOAuth(
        headers: Operations.finishOAuth.Input.Headers = .init(),
        body: Operations.finishOAuth.Input.Body
    ) async throws -> Operations.finishOAuth.Output {
        try await finishOAuth(Operations.finishOAuth.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `POST /oauth/link`.
    /// - Remark: Generated from `#/paths//oauth/link/post(linkOAuthAccount)`.
    internal func linkOAuthAccount(
        headers: Operations.linkOAuthAccount.Input.Headers = .init(),
        body: Operations.linkOAuthAccount.Input.Body
    ) async throws -> Operations.linkOAuthAccount.Output {
        try await linkOAuthAccount(Operations.linkOAuthAccount.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /oauth/mobile-redirect`.
    /// - Remark: Generated from `#/paths//oauth/mobile-redirect/get(redirectOAuthToMobile)`.
    internal func redirectOAuthToMobile() async throws -> Operations.redirectOAuthToMobile.Output {
        try await redirectOAuthToMobile(Operations.redirectOAuthToMobile.Input())
    }
    /// - Remark: HTTP `POST /oauth/unlink`.
    /// - Remark: Generated from `#/paths//oauth/unlink/post(unlinkOAuthAccount)`.
    internal func unlinkOAuthAccount(headers: Operations.unlinkOAuthAccount.Input.Headers = .init()) async throws -> Operations.unlinkOAuthAccount.Output {
        try await unlinkOAuthAccount(Operations.unlinkOAuthAccount.Input(headers: headers))
    }
    /// - Remark: HTTP `GET /partners`.
    /// - Remark: Generated from `#/paths//partners/get(getPartners)`.
    internal func getPartners(
        query: Operations.getPartners.Input.Query,
        headers: Operations.getPartners.Input.Headers = .init()
    ) async throws -> Operations.getPartners.Output {
        try await getPartners(Operations.getPartners.Input(
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `POST /partners/{id}`.
    /// - Remark: Generated from `#/paths//partners/{id}/post(createPartner)`.
    internal func createPartner(
        path: Operations.createPartner.Input.Path,
        headers: Operations.createPartner.Input.Headers = .init()
    ) async throws -> Operations.createPartner.Output {
        try await createPartner(Operations.createPartner.Input(
            path: path,
            headers: headers
        ))
    }
    /// - Remark: HTTP `PUT /partners/{id}`.
    /// - Remark: Generated from `#/paths//partners/{id}/put(updatePartner)`.
    internal func updatePartner(
        path: Operations.updatePartner.Input.Path,
        headers: Operations.updatePartner.Input.Headers = .init(),
        body: Operations.updatePartner.Input.Body
    ) async throws -> Operations.updatePartner.Output {
        try await updatePartner(Operations.updatePartner.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `DELETE /partners/{id}`.
    /// - Remark: Generated from `#/paths//partners/{id}/delete(removePartner)`.
    internal func removePartner(path: Operations.removePartner.Input.Path) async throws -> Operations.removePartner.Output {
        try await removePartner(Operations.removePartner.Input(path: path))
    }
    /// - Remark: HTTP `GET /people`.
    /// - Remark: Generated from `#/paths//people/get(getAllPeople)`.
    internal func getAllPeople(
        query: Operations.getAllPeople.Input.Query = .init(),
        headers: Operations.getAllPeople.Input.Headers = .init()
    ) async throws -> Operations.getAllPeople.Output {
        try await getAllPeople(Operations.getAllPeople.Input(
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `POST /people`.
    /// - Remark: Generated from `#/paths//people/post(createPerson)`.
    internal func createPerson(
        headers: Operations.createPerson.Input.Headers = .init(),
        body: Operations.createPerson.Input.Body
    ) async throws -> Operations.createPerson.Output {
        try await createPerson(Operations.createPerson.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `PUT /people`.
    /// - Remark: Generated from `#/paths//people/put(updatePeople)`.
    internal func updatePeople(
        headers: Operations.updatePeople.Input.Headers = .init(),
        body: Operations.updatePeople.Input.Body
    ) async throws -> Operations.updatePeople.Output {
        try await updatePeople(Operations.updatePeople.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /people/{id}`.
    /// - Remark: Generated from `#/paths//people/{id}/get(getPerson)`.
    internal func getPerson(
        path: Operations.getPerson.Input.Path,
        headers: Operations.getPerson.Input.Headers = .init()
    ) async throws -> Operations.getPerson.Output {
        try await getPerson(Operations.getPerson.Input(
            path: path,
            headers: headers
        ))
    }
    /// - Remark: HTTP `PUT /people/{id}`.
    /// - Remark: Generated from `#/paths//people/{id}/put(updatePerson)`.
    internal func updatePerson(
        path: Operations.updatePerson.Input.Path,
        headers: Operations.updatePerson.Input.Headers = .init(),
        body: Operations.updatePerson.Input.Body
    ) async throws -> Operations.updatePerson.Output {
        try await updatePerson(Operations.updatePerson.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /people/{id}/assets`.
    /// - Remark: Generated from `#/paths//people/{id}/assets/get(getPersonAssets)`.
    internal func getPersonAssets(
        path: Operations.getPersonAssets.Input.Path,
        headers: Operations.getPersonAssets.Input.Headers = .init()
    ) async throws -> Operations.getPersonAssets.Output {
        try await getPersonAssets(Operations.getPersonAssets.Input(
            path: path,
            headers: headers
        ))
    }
    /// - Remark: HTTP `POST /people/{id}/merge`.
    /// - Remark: Generated from `#/paths//people/{id}/merge/post(mergePerson)`.
    internal func mergePerson(
        path: Operations.mergePerson.Input.Path,
        headers: Operations.mergePerson.Input.Headers = .init(),
        body: Operations.mergePerson.Input.Body
    ) async throws -> Operations.mergePerson.Output {
        try await mergePerson(Operations.mergePerson.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `PUT /people/{id}/reassign`.
    /// - Remark: Generated from `#/paths//people/{id}/reassign/put(reassignFaces)`.
    internal func reassignFaces(
        path: Operations.reassignFaces.Input.Path,
        headers: Operations.reassignFaces.Input.Headers = .init(),
        body: Operations.reassignFaces.Input.Body
    ) async throws -> Operations.reassignFaces.Output {
        try await reassignFaces(Operations.reassignFaces.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /people/{id}/statistics`.
    /// - Remark: Generated from `#/paths//people/{id}/statistics/get(getPersonStatistics)`.
    internal func getPersonStatistics(
        path: Operations.getPersonStatistics.Input.Path,
        headers: Operations.getPersonStatistics.Input.Headers = .init()
    ) async throws -> Operations.getPersonStatistics.Output {
        try await getPersonStatistics(Operations.getPersonStatistics.Input(
            path: path,
            headers: headers
        ))
    }
    /// - Remark: HTTP `GET /people/{id}/thumbnail`.
    /// - Remark: Generated from `#/paths//people/{id}/thumbnail/get(getPersonThumbnail)`.
    internal func getPersonThumbnail(
        path: Operations.getPersonThumbnail.Input.Path,
        headers: Operations.getPersonThumbnail.Input.Headers = .init()
    ) async throws -> Operations.getPersonThumbnail.Output {
        try await getPersonThumbnail(Operations.getPersonThumbnail.Input(
            path: path,
            headers: headers
        ))
    }
    /// - Remark: HTTP `GET /reports`.
    /// - Remark: Generated from `#/paths//reports/get(getAuditFiles)`.
    internal func getAuditFiles(headers: Operations.getAuditFiles.Input.Headers = .init()) async throws -> Operations.getAuditFiles.Output {
        try await getAuditFiles(Operations.getAuditFiles.Input(headers: headers))
    }
    /// - Remark: HTTP `POST /reports/checksum`.
    /// - Remark: Generated from `#/paths//reports/checksum/post(getFileChecksums)`.
    internal func getFileChecksums(
        headers: Operations.getFileChecksums.Input.Headers = .init(),
        body: Operations.getFileChecksums.Input.Body
    ) async throws -> Operations.getFileChecksums.Output {
        try await getFileChecksums(Operations.getFileChecksums.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `POST /reports/fix`.
    /// - Remark: Generated from `#/paths//reports/fix/post(fixAuditFiles)`.
    internal func fixAuditFiles(body: Operations.fixAuditFiles.Input.Body) async throws -> Operations.fixAuditFiles.Output {
        try await fixAuditFiles(Operations.fixAuditFiles.Input(body: body))
    }
    /// - Remark: HTTP `GET /search/cities`.
    /// - Remark: Generated from `#/paths//search/cities/get(getAssetsByCity)`.
    internal func getAssetsByCity(headers: Operations.getAssetsByCity.Input.Headers = .init()) async throws -> Operations.getAssetsByCity.Output {
        try await getAssetsByCity(Operations.getAssetsByCity.Input(headers: headers))
    }
    /// - Remark: HTTP `GET /search/explore`.
    /// - Remark: Generated from `#/paths//search/explore/get(getExploreData)`.
    internal func getExploreData(headers: Operations.getExploreData.Input.Headers = .init()) async throws -> Operations.getExploreData.Output {
        try await getExploreData(Operations.getExploreData.Input(headers: headers))
    }
    /// - Remark: HTTP `POST /search/metadata`.
    /// - Remark: Generated from `#/paths//search/metadata/post(searchMetadata)`.
    internal func searchMetadata(
        headers: Operations.searchMetadata.Input.Headers = .init(),
        body: Operations.searchMetadata.Input.Body
    ) async throws -> Operations.searchMetadata.Output {
        try await searchMetadata(Operations.searchMetadata.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /search/person`.
    /// - Remark: Generated from `#/paths//search/person/get(searchPerson)`.
    internal func searchPerson(
        query: Operations.searchPerson.Input.Query,
        headers: Operations.searchPerson.Input.Headers = .init()
    ) async throws -> Operations.searchPerson.Output {
        try await searchPerson(Operations.searchPerson.Input(
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `GET /search/places`.
    /// - Remark: Generated from `#/paths//search/places/get(searchPlaces)`.
    internal func searchPlaces(
        query: Operations.searchPlaces.Input.Query,
        headers: Operations.searchPlaces.Input.Headers = .init()
    ) async throws -> Operations.searchPlaces.Output {
        try await searchPlaces(Operations.searchPlaces.Input(
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `POST /search/smart`.
    /// - Remark: Generated from `#/paths//search/smart/post(searchSmart)`.
    internal func searchSmart(
        headers: Operations.searchSmart.Input.Headers = .init(),
        body: Operations.searchSmart.Input.Body
    ) async throws -> Operations.searchSmart.Output {
        try await searchSmart(Operations.searchSmart.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /search/suggestions`.
    /// - Remark: Generated from `#/paths//search/suggestions/get(getSearchSuggestions)`.
    internal func getSearchSuggestions(
        query: Operations.getSearchSuggestions.Input.Query,
        headers: Operations.getSearchSuggestions.Input.Headers = .init()
    ) async throws -> Operations.getSearchSuggestions.Output {
        try await getSearchSuggestions(Operations.getSearchSuggestions.Input(
            query: query,
            headers: headers
        ))
    }
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/about`.
    /// - Remark: Generated from `#/paths//server-info/about/get(getAboutInfo)`.
    @available(*, deprecated)
    internal func getAboutInfo(headers: Operations.getAboutInfo.Input.Headers = .init()) async throws -> Operations.getAboutInfo.Output {
        try await getAboutInfo(Operations.getAboutInfo.Input(headers: headers))
    }
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/config`.
    /// - Remark: Generated from `#/paths//server-info/config/get(getServerConfig)`.
    @available(*, deprecated)
    internal func getServerConfig(headers: Operations.getServerConfig.Input.Headers = .init()) async throws -> Operations.getServerConfig.Output {
        try await getServerConfig(Operations.getServerConfig.Input(headers: headers))
    }
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/features`.
    /// - Remark: Generated from `#/paths//server-info/features/get(getServerFeatures)`.
    @available(*, deprecated)
    internal func getServerFeatures(headers: Operations.getServerFeatures.Input.Headers = .init()) async throws -> Operations.getServerFeatures.Output {
        try await getServerFeatures(Operations.getServerFeatures.Input(headers: headers))
    }
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/media-types`.
    /// - Remark: Generated from `#/paths//server-info/media-types/get(getSupportedMediaTypes)`.
    @available(*, deprecated)
    internal func getSupportedMediaTypes(headers: Operations.getSupportedMediaTypes.Input.Headers = .init()) async throws -> Operations.getSupportedMediaTypes.Output {
        try await getSupportedMediaTypes(Operations.getSupportedMediaTypes.Input(headers: headers))
    }
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/ping`.
    /// - Remark: Generated from `#/paths//server-info/ping/get(pingServer)`.
    @available(*, deprecated)
    internal func pingServer(headers: Operations.pingServer.Input.Headers = .init()) async throws -> Operations.pingServer.Output {
        try await pingServer(Operations.pingServer.Input(headers: headers))
    }
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/statistics`.
    /// - Remark: Generated from `#/paths//server-info/statistics/get(getServerStatistics)`.
    @available(*, deprecated)
    internal func getServerStatistics(headers: Operations.getServerStatistics.Input.Headers = .init()) async throws -> Operations.getServerStatistics.Output {
        try await getServerStatistics(Operations.getServerStatistics.Input(headers: headers))
    }
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/storage`.
    /// - Remark: Generated from `#/paths//server-info/storage/get(getStorage)`.
    @available(*, deprecated)
    internal func getStorage(headers: Operations.getStorage.Input.Headers = .init()) async throws -> Operations.getStorage.Output {
        try await getStorage(Operations.getStorage.Input(headers: headers))
    }
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/theme`.
    /// - Remark: Generated from `#/paths//server-info/theme/get(getTheme)`.
    @available(*, deprecated)
    internal func getTheme(headers: Operations.getTheme.Input.Headers = .init()) async throws -> Operations.getTheme.Output {
        try await getTheme(Operations.getTheme.Input(headers: headers))
    }
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/version`.
    /// - Remark: Generated from `#/paths//server-info/version/get(getServerVersion)`.
    @available(*, deprecated)
    internal func getServerVersion(headers: Operations.getServerVersion.Input.Headers = .init()) async throws -> Operations.getServerVersion.Output {
        try await getServerVersion(Operations.getServerVersion.Input(headers: headers))
    }
    /// - Remark: HTTP `GET /sessions`.
    /// - Remark: Generated from `#/paths//sessions/get(getSessions)`.
    internal func getSessions(headers: Operations.getSessions.Input.Headers = .init()) async throws -> Operations.getSessions.Output {
        try await getSessions(Operations.getSessions.Input(headers: headers))
    }
    /// - Remark: HTTP `DELETE /sessions`.
    /// - Remark: Generated from `#/paths//sessions/delete(deleteAllSessions)`.
    internal func deleteAllSessions() async throws -> Operations.deleteAllSessions.Output {
        try await deleteAllSessions(Operations.deleteAllSessions.Input())
    }
    /// - Remark: HTTP `DELETE /sessions/{id}`.
    /// - Remark: Generated from `#/paths//sessions/{id}/delete(deleteSession)`.
    internal func deleteSession(path: Operations.deleteSession.Input.Path) async throws -> Operations.deleteSession.Output {
        try await deleteSession(Operations.deleteSession.Input(path: path))
    }
    /// - Remark: HTTP `GET /shared-links`.
    /// - Remark: Generated from `#/paths//shared-links/get(getAllSharedLinks)`.
    internal func getAllSharedLinks(headers: Operations.getAllSharedLinks.Input.Headers = .init()) async throws -> Operations.getAllSharedLinks.Output {
        try await getAllSharedLinks(Operations.getAllSharedLinks.Input(headers: headers))
    }
    /// - Remark: HTTP `POST /shared-links`.
    /// - Remark: Generated from `#/paths//shared-links/post(createSharedLink)`.
    internal func createSharedLink(
        headers: Operations.createSharedLink.Input.Headers = .init(),
        body: Operations.createSharedLink.Input.Body
    ) async throws -> Operations.createSharedLink.Output {
        try await createSharedLink(Operations.createSharedLink.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /shared-links/me`.
    /// - Remark: Generated from `#/paths//shared-links/me/get(getMySharedLink)`.
    internal func getMySharedLink(
        query: Operations.getMySharedLink.Input.Query = .init(),
        headers: Operations.getMySharedLink.Input.Headers = .init()
    ) async throws -> Operations.getMySharedLink.Output {
        try await getMySharedLink(Operations.getMySharedLink.Input(
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `GET /shared-links/{id}`.
    /// - Remark: Generated from `#/paths//shared-links/{id}/get(getSharedLinkById)`.
    internal func getSharedLinkById(
        path: Operations.getSharedLinkById.Input.Path,
        headers: Operations.getSharedLinkById.Input.Headers = .init()
    ) async throws -> Operations.getSharedLinkById.Output {
        try await getSharedLinkById(Operations.getSharedLinkById.Input(
            path: path,
            headers: headers
        ))
    }
    /// - Remark: HTTP `PATCH /shared-links/{id}`.
    /// - Remark: Generated from `#/paths//shared-links/{id}/patch(updateSharedLink)`.
    internal func updateSharedLink(
        path: Operations.updateSharedLink.Input.Path,
        headers: Operations.updateSharedLink.Input.Headers = .init(),
        body: Operations.updateSharedLink.Input.Body
    ) async throws -> Operations.updateSharedLink.Output {
        try await updateSharedLink(Operations.updateSharedLink.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `DELETE /shared-links/{id}`.
    /// - Remark: Generated from `#/paths//shared-links/{id}/delete(removeSharedLink)`.
    internal func removeSharedLink(path: Operations.removeSharedLink.Input.Path) async throws -> Operations.removeSharedLink.Output {
        try await removeSharedLink(Operations.removeSharedLink.Input(path: path))
    }
    /// - Remark: HTTP `PUT /shared-links/{id}/assets`.
    /// - Remark: Generated from `#/paths//shared-links/{id}/assets/put(addSharedLinkAssets)`.
    internal func addSharedLinkAssets(
        path: Operations.addSharedLinkAssets.Input.Path,
        query: Operations.addSharedLinkAssets.Input.Query = .init(),
        headers: Operations.addSharedLinkAssets.Input.Headers = .init(),
        body: Operations.addSharedLinkAssets.Input.Body
    ) async throws -> Operations.addSharedLinkAssets.Output {
        try await addSharedLinkAssets(Operations.addSharedLinkAssets.Input(
            path: path,
            query: query,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `DELETE /shared-links/{id}/assets`.
    /// - Remark: Generated from `#/paths//shared-links/{id}/assets/delete(removeSharedLinkAssets)`.
    internal func removeSharedLinkAssets(
        path: Operations.removeSharedLinkAssets.Input.Path,
        query: Operations.removeSharedLinkAssets.Input.Query = .init(),
        headers: Operations.removeSharedLinkAssets.Input.Headers = .init(),
        body: Operations.removeSharedLinkAssets.Input.Body
    ) async throws -> Operations.removeSharedLinkAssets.Output {
        try await removeSharedLinkAssets(Operations.removeSharedLinkAssets.Input(
            path: path,
            query: query,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `POST /sync/delta-sync`.
    /// - Remark: Generated from `#/paths//sync/delta-sync/post(getDeltaSync)`.
    internal func getDeltaSync(
        headers: Operations.getDeltaSync.Input.Headers = .init(),
        body: Operations.getDeltaSync.Input.Body
    ) async throws -> Operations.getDeltaSync.Output {
        try await getDeltaSync(Operations.getDeltaSync.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `POST /sync/full-sync`.
    /// - Remark: Generated from `#/paths//sync/full-sync/post(getFullSyncForUser)`.
    internal func getFullSyncForUser(
        headers: Operations.getFullSyncForUser.Input.Headers = .init(),
        body: Operations.getFullSyncForUser.Input.Body
    ) async throws -> Operations.getFullSyncForUser.Output {
        try await getFullSyncForUser(Operations.getFullSyncForUser.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /system-config`.
    /// - Remark: Generated from `#/paths//system-config/get(getConfig)`.
    internal func getConfig(headers: Operations.getConfig.Input.Headers = .init()) async throws -> Operations.getConfig.Output {
        try await getConfig(Operations.getConfig.Input(headers: headers))
    }
    /// - Remark: HTTP `PUT /system-config`.
    /// - Remark: Generated from `#/paths//system-config/put(updateConfig)`.
    internal func updateConfig(
        headers: Operations.updateConfig.Input.Headers = .init(),
        body: Operations.updateConfig.Input.Body
    ) async throws -> Operations.updateConfig.Output {
        try await updateConfig(Operations.updateConfig.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /system-config/defaults`.
    /// - Remark: Generated from `#/paths//system-config/defaults/get(getConfigDefaults)`.
    internal func getConfigDefaults(headers: Operations.getConfigDefaults.Input.Headers = .init()) async throws -> Operations.getConfigDefaults.Output {
        try await getConfigDefaults(Operations.getConfigDefaults.Input(headers: headers))
    }
    /// - Remark: HTTP `GET /system-config/storage-template-options`.
    /// - Remark: Generated from `#/paths//system-config/storage-template-options/get(getStorageTemplateOptions)`.
    internal func getStorageTemplateOptions(headers: Operations.getStorageTemplateOptions.Input.Headers = .init()) async throws -> Operations.getStorageTemplateOptions.Output {
        try await getStorageTemplateOptions(Operations.getStorageTemplateOptions.Input(headers: headers))
    }
    /// - Remark: HTTP `GET /system-metadata/admin-onboarding`.
    /// - Remark: Generated from `#/paths//system-metadata/admin-onboarding/get(getAdminOnboarding)`.
    internal func getAdminOnboarding(headers: Operations.getAdminOnboarding.Input.Headers = .init()) async throws -> Operations.getAdminOnboarding.Output {
        try await getAdminOnboarding(Operations.getAdminOnboarding.Input(headers: headers))
    }
    /// - Remark: HTTP `POST /system-metadata/admin-onboarding`.
    /// - Remark: Generated from `#/paths//system-metadata/admin-onboarding/post(updateAdminOnboarding)`.
    internal func updateAdminOnboarding(body: Operations.updateAdminOnboarding.Input.Body) async throws -> Operations.updateAdminOnboarding.Output {
        try await updateAdminOnboarding(Operations.updateAdminOnboarding.Input(body: body))
    }
    /// - Remark: HTTP `GET /system-metadata/reverse-geocoding-state`.
    /// - Remark: Generated from `#/paths//system-metadata/reverse-geocoding-state/get(getReverseGeocodingState)`.
    internal func getReverseGeocodingState(headers: Operations.getReverseGeocodingState.Input.Headers = .init()) async throws -> Operations.getReverseGeocodingState.Output {
        try await getReverseGeocodingState(Operations.getReverseGeocodingState.Input(headers: headers))
    }
    /// - Remark: HTTP `GET /tags`.
    /// - Remark: Generated from `#/paths//tags/get(getAllTags)`.
    internal func getAllTags(headers: Operations.getAllTags.Input.Headers = .init()) async throws -> Operations.getAllTags.Output {
        try await getAllTags(Operations.getAllTags.Input(headers: headers))
    }
    /// - Remark: HTTP `POST /tags`.
    /// - Remark: Generated from `#/paths//tags/post(createTag)`.
    internal func createTag(
        headers: Operations.createTag.Input.Headers = .init(),
        body: Operations.createTag.Input.Body
    ) async throws -> Operations.createTag.Output {
        try await createTag(Operations.createTag.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /tags/{id}`.
    /// - Remark: Generated from `#/paths//tags/{id}/get(getTagById)`.
    internal func getTagById(
        path: Operations.getTagById.Input.Path,
        headers: Operations.getTagById.Input.Headers = .init()
    ) async throws -> Operations.getTagById.Output {
        try await getTagById(Operations.getTagById.Input(
            path: path,
            headers: headers
        ))
    }
    /// - Remark: HTTP `PATCH /tags/{id}`.
    /// - Remark: Generated from `#/paths//tags/{id}/patch(updateTag)`.
    internal func updateTag(
        path: Operations.updateTag.Input.Path,
        headers: Operations.updateTag.Input.Headers = .init(),
        body: Operations.updateTag.Input.Body
    ) async throws -> Operations.updateTag.Output {
        try await updateTag(Operations.updateTag.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `DELETE /tags/{id}`.
    /// - Remark: Generated from `#/paths//tags/{id}/delete(deleteTag)`.
    internal func deleteTag(path: Operations.deleteTag.Input.Path) async throws -> Operations.deleteTag.Output {
        try await deleteTag(Operations.deleteTag.Input(path: path))
    }
    /// - Remark: HTTP `GET /tags/{id}/assets`.
    /// - Remark: Generated from `#/paths//tags/{id}/assets/get(getTagAssets)`.
    internal func getTagAssets(
        path: Operations.getTagAssets.Input.Path,
        headers: Operations.getTagAssets.Input.Headers = .init()
    ) async throws -> Operations.getTagAssets.Output {
        try await getTagAssets(Operations.getTagAssets.Input(
            path: path,
            headers: headers
        ))
    }
    /// - Remark: HTTP `PUT /tags/{id}/assets`.
    /// - Remark: Generated from `#/paths//tags/{id}/assets/put(tagAssets)`.
    internal func tagAssets(
        path: Operations.tagAssets.Input.Path,
        headers: Operations.tagAssets.Input.Headers = .init(),
        body: Operations.tagAssets.Input.Body
    ) async throws -> Operations.tagAssets.Output {
        try await tagAssets(Operations.tagAssets.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `DELETE /tags/{id}/assets`.
    /// - Remark: Generated from `#/paths//tags/{id}/assets/delete(untagAssets)`.
    internal func untagAssets(
        path: Operations.untagAssets.Input.Path,
        headers: Operations.untagAssets.Input.Headers = .init(),
        body: Operations.untagAssets.Input.Body
    ) async throws -> Operations.untagAssets.Output {
        try await untagAssets(Operations.untagAssets.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /timeline/bucket`.
    /// - Remark: Generated from `#/paths//timeline/bucket/get(getTimeBucket)`.
    internal func getTimeBucket(
        query: Operations.getTimeBucket.Input.Query,
        headers: Operations.getTimeBucket.Input.Headers = .init()
    ) async throws -> Operations.getTimeBucket.Output {
        try await getTimeBucket(Operations.getTimeBucket.Input(
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `GET /timeline/buckets`.
    /// - Remark: Generated from `#/paths//timeline/buckets/get(getTimeBuckets)`.
    internal func getTimeBuckets(
        query: Operations.getTimeBuckets.Input.Query,
        headers: Operations.getTimeBuckets.Input.Headers = .init()
    ) async throws -> Operations.getTimeBuckets.Output {
        try await getTimeBuckets(Operations.getTimeBuckets.Input(
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `POST /trash/empty`.
    /// - Remark: Generated from `#/paths//trash/empty/post(emptyTrash)`.
    internal func emptyTrash() async throws -> Operations.emptyTrash.Output {
        try await emptyTrash(Operations.emptyTrash.Input())
    }
    /// - Remark: HTTP `POST /trash/restore`.
    /// - Remark: Generated from `#/paths//trash/restore/post(restoreTrash)`.
    internal func restoreTrash() async throws -> Operations.restoreTrash.Output {
        try await restoreTrash(Operations.restoreTrash.Input())
    }
    /// - Remark: HTTP `POST /trash/restore/assets`.
    /// - Remark: Generated from `#/paths//trash/restore/assets/post(restoreAssets)`.
    internal func restoreAssets(body: Operations.restoreAssets.Input.Body) async throws -> Operations.restoreAssets.Output {
        try await restoreAssets(Operations.restoreAssets.Input(body: body))
    }
    /// - Remark: HTTP `GET /users`.
    /// - Remark: Generated from `#/paths//users/get(searchUsers)`.
    internal func searchUsers(headers: Operations.searchUsers.Input.Headers = .init()) async throws -> Operations.searchUsers.Output {
        try await searchUsers(Operations.searchUsers.Input(headers: headers))
    }
    /// - Remark: HTTP `GET /users/me`.
    /// - Remark: Generated from `#/paths//users/me/get(getMyUser)`.
    internal func getMyUser(headers: Operations.getMyUser.Input.Headers = .init()) async throws -> Operations.getMyUser.Output {
        try await getMyUser(Operations.getMyUser.Input(headers: headers))
    }
    /// - Remark: HTTP `PUT /users/me`.
    /// - Remark: Generated from `#/paths//users/me/put(updateMyUser)`.
    internal func updateMyUser(
        headers: Operations.updateMyUser.Input.Headers = .init(),
        body: Operations.updateMyUser.Input.Body
    ) async throws -> Operations.updateMyUser.Output {
        try await updateMyUser(Operations.updateMyUser.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /users/me/preferences`.
    /// - Remark: Generated from `#/paths//users/me/preferences/get(getMyPreferences)`.
    internal func getMyPreferences(headers: Operations.getMyPreferences.Input.Headers = .init()) async throws -> Operations.getMyPreferences.Output {
        try await getMyPreferences(Operations.getMyPreferences.Input(headers: headers))
    }
    /// - Remark: HTTP `PUT /users/me/preferences`.
    /// - Remark: Generated from `#/paths//users/me/preferences/put(updateMyPreferences)`.
    internal func updateMyPreferences(
        headers: Operations.updateMyPreferences.Input.Headers = .init(),
        body: Operations.updateMyPreferences.Input.Body
    ) async throws -> Operations.updateMyPreferences.Output {
        try await updateMyPreferences(Operations.updateMyPreferences.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `POST /users/profile-image`.
    /// - Remark: Generated from `#/paths//users/profile-image/post(createProfileImage)`.
    internal func createProfileImage(
        headers: Operations.createProfileImage.Input.Headers = .init(),
        body: Operations.createProfileImage.Input.Body
    ) async throws -> Operations.createProfileImage.Output {
        try await createProfileImage(Operations.createProfileImage.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `DELETE /users/profile-image`.
    /// - Remark: Generated from `#/paths//users/profile-image/delete(deleteProfileImage)`.
    internal func deleteProfileImage() async throws -> Operations.deleteProfileImage.Output {
        try await deleteProfileImage(Operations.deleteProfileImage.Input())
    }
    /// - Remark: HTTP `GET /users/{id}`.
    /// - Remark: Generated from `#/paths//users/{id}/get(getUser)`.
    internal func getUser(
        path: Operations.getUser.Input.Path,
        headers: Operations.getUser.Input.Headers = .init()
    ) async throws -> Operations.getUser.Output {
        try await getUser(Operations.getUser.Input(
            path: path,
            headers: headers
        ))
    }
    /// - Remark: HTTP `GET /users/{id}/profile-image`.
    /// - Remark: Generated from `#/paths//users/{id}/profile-image/get(getProfileImage)`.
    internal func getProfileImage(
        path: Operations.getProfileImage.Input.Path,
        headers: Operations.getProfileImage.Input.Headers = .init()
    ) async throws -> Operations.getProfileImage.Output {
        try await getProfileImage(Operations.getProfileImage.Input(
            path: path,
            headers: headers
        ))
    }
}

/// Server URLs defined in the OpenAPI document.
internal enum Servers {
    internal static func server1() throws -> Foundation.URL {
        try Foundation.URL(
            validatingOpenAPIServerURL: "/api",
            variables: []
        )
    }
}

/// Types generated from the components section of the OpenAPI document.
internal enum Components {
    /// Types generated from the `#/components/schemas` section of the OpenAPI document.
    internal enum Schemas {
        /// - Remark: Generated from `#/components/schemas/APIKeyCreateDto`.
        internal struct APIKeyCreateDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/APIKeyCreateDto/name`.
            internal var name: Swift.String?
            /// Creates a new `APIKeyCreateDto`.
            ///
            /// - Parameters:
            ///   - name:
            internal init(name: Swift.String? = nil) {
                self.name = name
            }
            internal enum CodingKeys: String, CodingKey {
                case name
            }
        }
        /// - Remark: Generated from `#/components/schemas/APIKeyCreateResponseDto`.
        internal struct APIKeyCreateResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/APIKeyCreateResponseDto/apiKey`.
            internal var apiKey: Components.Schemas.APIKeyResponseDto
            /// - Remark: Generated from `#/components/schemas/APIKeyCreateResponseDto/secret`.
            internal var secret: Swift.String
            /// Creates a new `APIKeyCreateResponseDto`.
            ///
            /// - Parameters:
            ///   - apiKey:
            ///   - secret:
            internal init(
                apiKey: Components.Schemas.APIKeyResponseDto,
                secret: Swift.String
            ) {
                self.apiKey = apiKey
                self.secret = secret
            }
            internal enum CodingKeys: String, CodingKey {
                case apiKey
                case secret
            }
        }
        /// - Remark: Generated from `#/components/schemas/APIKeyResponseDto`.
        internal struct APIKeyResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/APIKeyResponseDto/createdAt`.
            internal var createdAt: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/APIKeyResponseDto/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/APIKeyResponseDto/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/APIKeyResponseDto/updatedAt`.
            internal var updatedAt: Foundation.Date
            /// Creates a new `APIKeyResponseDto`.
            ///
            /// - Parameters:
            ///   - createdAt:
            ///   - id:
            ///   - name:
            ///   - updatedAt:
            internal init(
                createdAt: Foundation.Date,
                id: Swift.String,
                name: Swift.String,
                updatedAt: Foundation.Date
            ) {
                self.createdAt = createdAt
                self.id = id
                self.name = name
                self.updatedAt = updatedAt
            }
            internal enum CodingKeys: String, CodingKey {
                case createdAt
                case id
                case name
                case updatedAt
            }
        }
        /// - Remark: Generated from `#/components/schemas/APIKeyUpdateDto`.
        internal struct APIKeyUpdateDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/APIKeyUpdateDto/name`.
            internal var name: Swift.String
            /// Creates a new `APIKeyUpdateDto`.
            ///
            /// - Parameters:
            ///   - name:
            internal init(name: Swift.String) {
                self.name = name
            }
            internal enum CodingKeys: String, CodingKey {
                case name
            }
        }
        /// - Remark: Generated from `#/components/schemas/ActivityCreateDto`.
        internal struct ActivityCreateDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ActivityCreateDto/albumId`.
            internal var albumId: Swift.String
            /// - Remark: Generated from `#/components/schemas/ActivityCreateDto/assetId`.
            internal var assetId: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ActivityCreateDto/comment`.
            internal var comment: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ActivityCreateDto/type`.
            internal var _type: Components.Schemas.ReactionType
            /// Creates a new `ActivityCreateDto`.
            ///
            /// - Parameters:
            ///   - albumId:
            ///   - assetId:
            ///   - comment:
            ///   - _type:
            internal init(
                albumId: Swift.String,
                assetId: Swift.String? = nil,
                comment: Swift.String? = nil,
                _type: Components.Schemas.ReactionType
            ) {
                self.albumId = albumId
                self.assetId = assetId
                self.comment = comment
                self._type = _type
            }
            internal enum CodingKeys: String, CodingKey {
                case albumId
                case assetId
                case comment
                case _type = "type"
            }
        }
        /// - Remark: Generated from `#/components/schemas/ActivityResponseDto`.
        internal struct ActivityResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ActivityResponseDto/assetId`.
            internal var assetId: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ActivityResponseDto/comment`.
            internal var comment: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ActivityResponseDto/createdAt`.
            internal var createdAt: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/ActivityResponseDto/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/ActivityResponseDto/type`.
            @frozen internal enum _typePayload: String, Codable, Hashable, Sendable {
                case comment = "comment"
                case like = "like"
            }
            /// - Remark: Generated from `#/components/schemas/ActivityResponseDto/type`.
            internal var _type: Components.Schemas.ActivityResponseDto._typePayload
            /// - Remark: Generated from `#/components/schemas/ActivityResponseDto/user`.
            internal var user: Components.Schemas.UserResponseDto
            /// Creates a new `ActivityResponseDto`.
            ///
            /// - Parameters:
            ///   - assetId:
            ///   - comment:
            ///   - createdAt:
            ///   - id:
            ///   - _type:
            ///   - user:
            internal init(
                assetId: Swift.String? = nil,
                comment: Swift.String? = nil,
                createdAt: Foundation.Date,
                id: Swift.String,
                _type: Components.Schemas.ActivityResponseDto._typePayload,
                user: Components.Schemas.UserResponseDto
            ) {
                self.assetId = assetId
                self.comment = comment
                self.createdAt = createdAt
                self.id = id
                self._type = _type
                self.user = user
            }
            internal enum CodingKeys: String, CodingKey {
                case assetId
                case comment
                case createdAt
                case id
                case _type = "type"
                case user
            }
        }
        /// - Remark: Generated from `#/components/schemas/ActivityStatisticsResponseDto`.
        internal struct ActivityStatisticsResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ActivityStatisticsResponseDto/comments`.
            internal var comments: Swift.Int
            /// Creates a new `ActivityStatisticsResponseDto`.
            ///
            /// - Parameters:
            ///   - comments:
            internal init(comments: Swift.Int) {
                self.comments = comments
            }
            internal enum CodingKeys: String, CodingKey {
                case comments
            }
        }
        /// - Remark: Generated from `#/components/schemas/AddUsersDto`.
        internal struct AddUsersDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AddUsersDto/albumUsers`.
            internal var albumUsers: [Components.Schemas.AlbumUserAddDto]
            /// Creates a new `AddUsersDto`.
            ///
            /// - Parameters:
            ///   - albumUsers:
            internal init(albumUsers: [Components.Schemas.AlbumUserAddDto]) {
                self.albumUsers = albumUsers
            }
            internal enum CodingKeys: String, CodingKey {
                case albumUsers
            }
        }
        /// - Remark: Generated from `#/components/schemas/AdminOnboardingUpdateDto`.
        internal struct AdminOnboardingUpdateDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AdminOnboardingUpdateDto/isOnboarded`.
            internal var isOnboarded: Swift.Bool
            /// Creates a new `AdminOnboardingUpdateDto`.
            ///
            /// - Parameters:
            ///   - isOnboarded:
            internal init(isOnboarded: Swift.Bool) {
                self.isOnboarded = isOnboarded
            }
            internal enum CodingKeys: String, CodingKey {
                case isOnboarded
            }
        }
        /// - Remark: Generated from `#/components/schemas/AlbumCountResponseDto`.
        internal struct AlbumCountResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AlbumCountResponseDto/notShared`.
            internal var notShared: Swift.Int
            /// - Remark: Generated from `#/components/schemas/AlbumCountResponseDto/owned`.
            internal var owned: Swift.Int
            /// - Remark: Generated from `#/components/schemas/AlbumCountResponseDto/shared`.
            internal var shared: Swift.Int
            /// Creates a new `AlbumCountResponseDto`.
            ///
            /// - Parameters:
            ///   - notShared:
            ///   - owned:
            ///   - shared:
            internal init(
                notShared: Swift.Int,
                owned: Swift.Int,
                shared: Swift.Int
            ) {
                self.notShared = notShared
                self.owned = owned
                self.shared = shared
            }
            internal enum CodingKeys: String, CodingKey {
                case notShared
                case owned
                case shared
            }
        }
        /// - Remark: Generated from `#/components/schemas/AlbumResponseDto`.
        internal struct AlbumResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AlbumResponseDto/albumName`.
            internal var albumName: Swift.String
            /// - Remark: Generated from `#/components/schemas/AlbumResponseDto/albumThumbnailAssetId`.
            internal var albumThumbnailAssetId: Swift.String?
            /// - Remark: Generated from `#/components/schemas/AlbumResponseDto/albumUsers`.
            internal var albumUsers: [Components.Schemas.AlbumUserResponseDto]
            /// - Remark: Generated from `#/components/schemas/AlbumResponseDto/assetCount`.
            internal var assetCount: Swift.Int
            /// - Remark: Generated from `#/components/schemas/AlbumResponseDto/assets`.
            internal var assets: [Components.Schemas.AssetResponseDto]
            /// - Remark: Generated from `#/components/schemas/AlbumResponseDto/createdAt`.
            internal var createdAt: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/AlbumResponseDto/description`.
            internal var description: Swift.String
            /// - Remark: Generated from `#/components/schemas/AlbumResponseDto/endDate`.
            internal var endDate: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/AlbumResponseDto/hasSharedLink`.
            internal var hasSharedLink: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/AlbumResponseDto/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/AlbumResponseDto/isActivityEnabled`.
            internal var isActivityEnabled: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/AlbumResponseDto/lastModifiedAssetTimestamp`.
            internal var lastModifiedAssetTimestamp: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/AlbumResponseDto/order`.
            internal var order: Components.Schemas.AssetOrder?
            /// - Remark: Generated from `#/components/schemas/AlbumResponseDto/owner`.
            internal var owner: Components.Schemas.UserResponseDto
            /// - Remark: Generated from `#/components/schemas/AlbumResponseDto/ownerId`.
            internal var ownerId: Swift.String
            /// - Remark: Generated from `#/components/schemas/AlbumResponseDto/shared`.
            internal var shared: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/AlbumResponseDto/startDate`.
            internal var startDate: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/AlbumResponseDto/updatedAt`.
            internal var updatedAt: Foundation.Date
            /// Creates a new `AlbumResponseDto`.
            ///
            /// - Parameters:
            ///   - albumName:
            ///   - albumThumbnailAssetId:
            ///   - albumUsers:
            ///   - assetCount:
            ///   - assets:
            ///   - createdAt:
            ///   - description:
            ///   - endDate:
            ///   - hasSharedLink:
            ///   - id:
            ///   - isActivityEnabled:
            ///   - lastModifiedAssetTimestamp:
            ///   - order:
            ///   - owner:
            ///   - ownerId:
            ///   - shared:
            ///   - startDate:
            ///   - updatedAt:
            internal init(
                albumName: Swift.String,
                albumThumbnailAssetId: Swift.String? = nil,
                albumUsers: [Components.Schemas.AlbumUserResponseDto],
                assetCount: Swift.Int,
                assets: [Components.Schemas.AssetResponseDto],
                createdAt: Foundation.Date,
                description: Swift.String,
                endDate: Foundation.Date? = nil,
                hasSharedLink: Swift.Bool,
                id: Swift.String,
                isActivityEnabled: Swift.Bool,
                lastModifiedAssetTimestamp: Foundation.Date? = nil,
                order: Components.Schemas.AssetOrder? = nil,
                owner: Components.Schemas.UserResponseDto,
                ownerId: Swift.String,
                shared: Swift.Bool,
                startDate: Foundation.Date? = nil,
                updatedAt: Foundation.Date
            ) {
                self.albumName = albumName
                self.albumThumbnailAssetId = albumThumbnailAssetId
                self.albumUsers = albumUsers
                self.assetCount = assetCount
                self.assets = assets
                self.createdAt = createdAt
                self.description = description
                self.endDate = endDate
                self.hasSharedLink = hasSharedLink
                self.id = id
                self.isActivityEnabled = isActivityEnabled
                self.lastModifiedAssetTimestamp = lastModifiedAssetTimestamp
                self.order = order
                self.owner = owner
                self.ownerId = ownerId
                self.shared = shared
                self.startDate = startDate
                self.updatedAt = updatedAt
            }
            internal enum CodingKeys: String, CodingKey {
                case albumName
                case albumThumbnailAssetId
                case albumUsers
                case assetCount
                case assets
                case createdAt
                case description
                case endDate
                case hasSharedLink
                case id
                case isActivityEnabled
                case lastModifiedAssetTimestamp
                case order
                case owner
                case ownerId
                case shared
                case startDate
                case updatedAt
            }
        }
        /// - Remark: Generated from `#/components/schemas/AlbumUserAddDto`.
        internal struct AlbumUserAddDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AlbumUserAddDto/role`.
            internal var role: Components.Schemas.AlbumUserRole?
            /// - Remark: Generated from `#/components/schemas/AlbumUserAddDto/userId`.
            internal var userId: Swift.String
            /// Creates a new `AlbumUserAddDto`.
            ///
            /// - Parameters:
            ///   - role:
            ///   - userId:
            internal init(
                role: Components.Schemas.AlbumUserRole? = nil,
                userId: Swift.String
            ) {
                self.role = role
                self.userId = userId
            }
            internal enum CodingKeys: String, CodingKey {
                case role
                case userId
            }
        }
        /// - Remark: Generated from `#/components/schemas/AlbumUserCreateDto`.
        internal struct AlbumUserCreateDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AlbumUserCreateDto/role`.
            internal var role: Components.Schemas.AlbumUserRole
            /// - Remark: Generated from `#/components/schemas/AlbumUserCreateDto/userId`.
            internal var userId: Swift.String
            /// Creates a new `AlbumUserCreateDto`.
            ///
            /// - Parameters:
            ///   - role:
            ///   - userId:
            internal init(
                role: Components.Schemas.AlbumUserRole,
                userId: Swift.String
            ) {
                self.role = role
                self.userId = userId
            }
            internal enum CodingKeys: String, CodingKey {
                case role
                case userId
            }
        }
        /// - Remark: Generated from `#/components/schemas/AlbumUserResponseDto`.
        internal struct AlbumUserResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AlbumUserResponseDto/role`.
            internal var role: Components.Schemas.AlbumUserRole
            /// - Remark: Generated from `#/components/schemas/AlbumUserResponseDto/user`.
            internal var user: Components.Schemas.UserResponseDto
            /// Creates a new `AlbumUserResponseDto`.
            ///
            /// - Parameters:
            ///   - role:
            ///   - user:
            internal init(
                role: Components.Schemas.AlbumUserRole,
                user: Components.Schemas.UserResponseDto
            ) {
                self.role = role
                self.user = user
            }
            internal enum CodingKeys: String, CodingKey {
                case role
                case user
            }
        }
        /// - Remark: Generated from `#/components/schemas/AlbumUserRole`.
        @frozen internal enum AlbumUserRole: String, Codable, Hashable, Sendable {
            case editor = "editor"
            case viewer = "viewer"
        }
        /// - Remark: Generated from `#/components/schemas/AllJobStatusResponseDto`.
        internal struct AllJobStatusResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AllJobStatusResponseDto/backgroundTask`.
            internal var backgroundTask: Components.Schemas.JobStatusDto
            /// - Remark: Generated from `#/components/schemas/AllJobStatusResponseDto/duplicateDetection`.
            internal var duplicateDetection: Components.Schemas.JobStatusDto
            /// - Remark: Generated from `#/components/schemas/AllJobStatusResponseDto/faceDetection`.
            internal var faceDetection: Components.Schemas.JobStatusDto
            /// - Remark: Generated from `#/components/schemas/AllJobStatusResponseDto/facialRecognition`.
            internal var facialRecognition: Components.Schemas.JobStatusDto
            /// - Remark: Generated from `#/components/schemas/AllJobStatusResponseDto/library`.
            internal var library: Components.Schemas.JobStatusDto
            /// - Remark: Generated from `#/components/schemas/AllJobStatusResponseDto/metadataExtraction`.
            internal var metadataExtraction: Components.Schemas.JobStatusDto
            /// - Remark: Generated from `#/components/schemas/AllJobStatusResponseDto/migration`.
            internal var migration: Components.Schemas.JobStatusDto
            /// - Remark: Generated from `#/components/schemas/AllJobStatusResponseDto/notifications`.
            internal var notifications: Components.Schemas.JobStatusDto
            /// - Remark: Generated from `#/components/schemas/AllJobStatusResponseDto/search`.
            internal var search: Components.Schemas.JobStatusDto
            /// - Remark: Generated from `#/components/schemas/AllJobStatusResponseDto/sidecar`.
            internal var sidecar: Components.Schemas.JobStatusDto
            /// - Remark: Generated from `#/components/schemas/AllJobStatusResponseDto/smartSearch`.
            internal var smartSearch: Components.Schemas.JobStatusDto
            /// - Remark: Generated from `#/components/schemas/AllJobStatusResponseDto/storageTemplateMigration`.
            internal var storageTemplateMigration: Components.Schemas.JobStatusDto
            /// - Remark: Generated from `#/components/schemas/AllJobStatusResponseDto/thumbnailGeneration`.
            internal var thumbnailGeneration: Components.Schemas.JobStatusDto
            /// - Remark: Generated from `#/components/schemas/AllJobStatusResponseDto/videoConversion`.
            internal var videoConversion: Components.Schemas.JobStatusDto
            /// Creates a new `AllJobStatusResponseDto`.
            ///
            /// - Parameters:
            ///   - backgroundTask:
            ///   - duplicateDetection:
            ///   - faceDetection:
            ///   - facialRecognition:
            ///   - library:
            ///   - metadataExtraction:
            ///   - migration:
            ///   - notifications:
            ///   - search:
            ///   - sidecar:
            ///   - smartSearch:
            ///   - storageTemplateMigration:
            ///   - thumbnailGeneration:
            ///   - videoConversion:
            internal init(
                backgroundTask: Components.Schemas.JobStatusDto,
                duplicateDetection: Components.Schemas.JobStatusDto,
                faceDetection: Components.Schemas.JobStatusDto,
                facialRecognition: Components.Schemas.JobStatusDto,
                library: Components.Schemas.JobStatusDto,
                metadataExtraction: Components.Schemas.JobStatusDto,
                migration: Components.Schemas.JobStatusDto,
                notifications: Components.Schemas.JobStatusDto,
                search: Components.Schemas.JobStatusDto,
                sidecar: Components.Schemas.JobStatusDto,
                smartSearch: Components.Schemas.JobStatusDto,
                storageTemplateMigration: Components.Schemas.JobStatusDto,
                thumbnailGeneration: Components.Schemas.JobStatusDto,
                videoConversion: Components.Schemas.JobStatusDto
            ) {
                self.backgroundTask = backgroundTask
                self.duplicateDetection = duplicateDetection
                self.faceDetection = faceDetection
                self.facialRecognition = facialRecognition
                self.library = library
                self.metadataExtraction = metadataExtraction
                self.migration = migration
                self.notifications = notifications
                self.search = search
                self.sidecar = sidecar
                self.smartSearch = smartSearch
                self.storageTemplateMigration = storageTemplateMigration
                self.thumbnailGeneration = thumbnailGeneration
                self.videoConversion = videoConversion
            }
            internal enum CodingKeys: String, CodingKey {
                case backgroundTask
                case duplicateDetection
                case faceDetection
                case facialRecognition
                case library
                case metadataExtraction
                case migration
                case notifications
                case search
                case sidecar
                case smartSearch
                case storageTemplateMigration
                case thumbnailGeneration
                case videoConversion
            }
        }
        /// - Remark: Generated from `#/components/schemas/AssetBulkDeleteDto`.
        internal struct AssetBulkDeleteDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AssetBulkDeleteDto/force`.
            internal var force: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/AssetBulkDeleteDto/ids`.
            internal var ids: [Swift.String]
            /// Creates a new `AssetBulkDeleteDto`.
            ///
            /// - Parameters:
            ///   - force:
            ///   - ids:
            internal init(
                force: Swift.Bool? = nil,
                ids: [Swift.String]
            ) {
                self.force = force
                self.ids = ids
            }
            internal enum CodingKeys: String, CodingKey {
                case force
                case ids
            }
        }
        /// - Remark: Generated from `#/components/schemas/AssetBulkUpdateDto`.
        internal struct AssetBulkUpdateDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AssetBulkUpdateDto/dateTimeOriginal`.
            internal var dateTimeOriginal: Swift.String?
            /// - Remark: Generated from `#/components/schemas/AssetBulkUpdateDto/duplicateId`.
            internal var duplicateId: Swift.String?
            /// - Remark: Generated from `#/components/schemas/AssetBulkUpdateDto/ids`.
            internal var ids: [Swift.String]
            /// - Remark: Generated from `#/components/schemas/AssetBulkUpdateDto/isArchived`.
            internal var isArchived: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/AssetBulkUpdateDto/isFavorite`.
            internal var isFavorite: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/AssetBulkUpdateDto/latitude`.
            internal var latitude: Swift.Double?
            /// - Remark: Generated from `#/components/schemas/AssetBulkUpdateDto/longitude`.
            internal var longitude: Swift.Double?
            /// - Remark: Generated from `#/components/schemas/AssetBulkUpdateDto/removeParent`.
            internal var removeParent: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/AssetBulkUpdateDto/stackParentId`.
            internal var stackParentId: Swift.String?
            /// Creates a new `AssetBulkUpdateDto`.
            ///
            /// - Parameters:
            ///   - dateTimeOriginal:
            ///   - duplicateId:
            ///   - ids:
            ///   - isArchived:
            ///   - isFavorite:
            ///   - latitude:
            ///   - longitude:
            ///   - removeParent:
            ///   - stackParentId:
            internal init(
                dateTimeOriginal: Swift.String? = nil,
                duplicateId: Swift.String? = nil,
                ids: [Swift.String],
                isArchived: Swift.Bool? = nil,
                isFavorite: Swift.Bool? = nil,
                latitude: Swift.Double? = nil,
                longitude: Swift.Double? = nil,
                removeParent: Swift.Bool? = nil,
                stackParentId: Swift.String? = nil
            ) {
                self.dateTimeOriginal = dateTimeOriginal
                self.duplicateId = duplicateId
                self.ids = ids
                self.isArchived = isArchived
                self.isFavorite = isFavorite
                self.latitude = latitude
                self.longitude = longitude
                self.removeParent = removeParent
                self.stackParentId = stackParentId
            }
            internal enum CodingKeys: String, CodingKey {
                case dateTimeOriginal
                case duplicateId
                case ids
                case isArchived
                case isFavorite
                case latitude
                case longitude
                case removeParent
                case stackParentId
            }
        }
        /// - Remark: Generated from `#/components/schemas/AssetBulkUploadCheckDto`.
        internal struct AssetBulkUploadCheckDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AssetBulkUploadCheckDto/assets`.
            internal var assets: [Components.Schemas.AssetBulkUploadCheckItem]
            /// Creates a new `AssetBulkUploadCheckDto`.
            ///
            /// - Parameters:
            ///   - assets:
            internal init(assets: [Components.Schemas.AssetBulkUploadCheckItem]) {
                self.assets = assets
            }
            internal enum CodingKeys: String, CodingKey {
                case assets
            }
        }
        /// - Remark: Generated from `#/components/schemas/AssetBulkUploadCheckItem`.
        internal struct AssetBulkUploadCheckItem: Codable, Hashable, Sendable {
            /// base64 or hex encoded sha1 hash
            ///
            /// - Remark: Generated from `#/components/schemas/AssetBulkUploadCheckItem/checksum`.
            internal var checksum: Swift.String
            /// - Remark: Generated from `#/components/schemas/AssetBulkUploadCheckItem/id`.
            internal var id: Swift.String
            /// Creates a new `AssetBulkUploadCheckItem`.
            ///
            /// - Parameters:
            ///   - checksum: base64 or hex encoded sha1 hash
            ///   - id:
            internal init(
                checksum: Swift.String,
                id: Swift.String
            ) {
                self.checksum = checksum
                self.id = id
            }
            internal enum CodingKeys: String, CodingKey {
                case checksum
                case id
            }
        }
        /// - Remark: Generated from `#/components/schemas/AssetBulkUploadCheckResponseDto`.
        internal struct AssetBulkUploadCheckResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AssetBulkUploadCheckResponseDto/results`.
            internal var results: [Components.Schemas.AssetBulkUploadCheckResult]
            /// Creates a new `AssetBulkUploadCheckResponseDto`.
            ///
            /// - Parameters:
            ///   - results:
            internal init(results: [Components.Schemas.AssetBulkUploadCheckResult]) {
                self.results = results
            }
            internal enum CodingKeys: String, CodingKey {
                case results
            }
        }
        /// - Remark: Generated from `#/components/schemas/AssetBulkUploadCheckResult`.
        internal struct AssetBulkUploadCheckResult: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AssetBulkUploadCheckResult/action`.
            @frozen internal enum actionPayload: String, Codable, Hashable, Sendable {
                case accept = "accept"
                case reject = "reject"
            }
            /// - Remark: Generated from `#/components/schemas/AssetBulkUploadCheckResult/action`.
            internal var action: Components.Schemas.AssetBulkUploadCheckResult.actionPayload
            /// - Remark: Generated from `#/components/schemas/AssetBulkUploadCheckResult/assetId`.
            internal var assetId: Swift.String?
            /// - Remark: Generated from `#/components/schemas/AssetBulkUploadCheckResult/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/AssetBulkUploadCheckResult/reason`.
            @frozen internal enum reasonPayload: String, Codable, Hashable, Sendable {
                case duplicate = "duplicate"
                case unsupported_hyphen_format = "unsupported-format"
            }
            /// - Remark: Generated from `#/components/schemas/AssetBulkUploadCheckResult/reason`.
            internal var reason: Components.Schemas.AssetBulkUploadCheckResult.reasonPayload?
            /// Creates a new `AssetBulkUploadCheckResult`.
            ///
            /// - Parameters:
            ///   - action:
            ///   - assetId:
            ///   - id:
            ///   - reason:
            internal init(
                action: Components.Schemas.AssetBulkUploadCheckResult.actionPayload,
                assetId: Swift.String? = nil,
                id: Swift.String,
                reason: Components.Schemas.AssetBulkUploadCheckResult.reasonPayload? = nil
            ) {
                self.action = action
                self.assetId = assetId
                self.id = id
                self.reason = reason
            }
            internal enum CodingKeys: String, CodingKey {
                case action
                case assetId
                case id
                case reason
            }
        }
        /// - Remark: Generated from `#/components/schemas/AssetDeltaSyncDto`.
        internal struct AssetDeltaSyncDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AssetDeltaSyncDto/updatedAfter`.
            internal var updatedAfter: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/AssetDeltaSyncDto/userIds`.
            internal var userIds: [Swift.String]
            /// Creates a new `AssetDeltaSyncDto`.
            ///
            /// - Parameters:
            ///   - updatedAfter:
            ///   - userIds:
            internal init(
                updatedAfter: Foundation.Date,
                userIds: [Swift.String]
            ) {
                self.updatedAfter = updatedAfter
                self.userIds = userIds
            }
            internal enum CodingKeys: String, CodingKey {
                case updatedAfter
                case userIds
            }
        }
        /// - Remark: Generated from `#/components/schemas/AssetDeltaSyncResponseDto`.
        internal struct AssetDeltaSyncResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AssetDeltaSyncResponseDto/deleted`.
            internal var deleted: [Swift.String]
            /// - Remark: Generated from `#/components/schemas/AssetDeltaSyncResponseDto/needsFullSync`.
            internal var needsFullSync: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/AssetDeltaSyncResponseDto/upserted`.
            internal var upserted: [Components.Schemas.AssetResponseDto]
            /// Creates a new `AssetDeltaSyncResponseDto`.
            ///
            /// - Parameters:
            ///   - deleted:
            ///   - needsFullSync:
            ///   - upserted:
            internal init(
                deleted: [Swift.String],
                needsFullSync: Swift.Bool,
                upserted: [Components.Schemas.AssetResponseDto]
            ) {
                self.deleted = deleted
                self.needsFullSync = needsFullSync
                self.upserted = upserted
            }
            internal enum CodingKeys: String, CodingKey {
                case deleted
                case needsFullSync
                case upserted
            }
        }
        /// - Remark: Generated from `#/components/schemas/AssetFaceResponseDto`.
        internal struct AssetFaceResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AssetFaceResponseDto/boundingBoxX1`.
            internal var boundingBoxX1: Swift.Int
            /// - Remark: Generated from `#/components/schemas/AssetFaceResponseDto/boundingBoxX2`.
            internal var boundingBoxX2: Swift.Int
            /// - Remark: Generated from `#/components/schemas/AssetFaceResponseDto/boundingBoxY1`.
            internal var boundingBoxY1: Swift.Int
            /// - Remark: Generated from `#/components/schemas/AssetFaceResponseDto/boundingBoxY2`.
            internal var boundingBoxY2: Swift.Int
            /// - Remark: Generated from `#/components/schemas/AssetFaceResponseDto/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/AssetFaceResponseDto/imageHeight`.
            internal var imageHeight: Swift.Int
            /// - Remark: Generated from `#/components/schemas/AssetFaceResponseDto/imageWidth`.
            internal var imageWidth: Swift.Int
            /// - Remark: Generated from `#/components/schemas/AssetFaceResponseDto/person`.
            internal struct personPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/AssetFaceResponseDto/person/value1`.
                internal var value1: Components.Schemas.PersonResponseDto
                /// Creates a new `personPayload`.
                ///
                /// - Parameters:
                ///   - value1:
                internal init(value1: Components.Schemas.PersonResponseDto) {
                    self.value1 = value1
                }
                internal init(from decoder: any Decoder) throws {
                    value1 = try .init(from: decoder)
                }
                internal func encode(to encoder: any Encoder) throws {
                    try value1.encode(to: encoder)
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetFaceResponseDto/person`.
            internal var person: Components.Schemas.AssetFaceResponseDto.personPayload?
            /// Creates a new `AssetFaceResponseDto`.
            ///
            /// - Parameters:
            ///   - boundingBoxX1:
            ///   - boundingBoxX2:
            ///   - boundingBoxY1:
            ///   - boundingBoxY2:
            ///   - id:
            ///   - imageHeight:
            ///   - imageWidth:
            ///   - person:
            internal init(
                boundingBoxX1: Swift.Int,
                boundingBoxX2: Swift.Int,
                boundingBoxY1: Swift.Int,
                boundingBoxY2: Swift.Int,
                id: Swift.String,
                imageHeight: Swift.Int,
                imageWidth: Swift.Int,
                person: Components.Schemas.AssetFaceResponseDto.personPayload? = nil
            ) {
                self.boundingBoxX1 = boundingBoxX1
                self.boundingBoxX2 = boundingBoxX2
                self.boundingBoxY1 = boundingBoxY1
                self.boundingBoxY2 = boundingBoxY2
                self.id = id
                self.imageHeight = imageHeight
                self.imageWidth = imageWidth
                self.person = person
            }
            internal enum CodingKeys: String, CodingKey {
                case boundingBoxX1
                case boundingBoxX2
                case boundingBoxY1
                case boundingBoxY2
                case id
                case imageHeight
                case imageWidth
                case person
            }
        }
        /// - Remark: Generated from `#/components/schemas/AssetFaceUpdateDto`.
        internal struct AssetFaceUpdateDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AssetFaceUpdateDto/data`.
            internal var data: [Components.Schemas.AssetFaceUpdateItem]
            /// Creates a new `AssetFaceUpdateDto`.
            ///
            /// - Parameters:
            ///   - data:
            internal init(data: [Components.Schemas.AssetFaceUpdateItem]) {
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/AssetFaceUpdateItem`.
        internal struct AssetFaceUpdateItem: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AssetFaceUpdateItem/assetId`.
            internal var assetId: Swift.String
            /// - Remark: Generated from `#/components/schemas/AssetFaceUpdateItem/personId`.
            internal var personId: Swift.String
            /// Creates a new `AssetFaceUpdateItem`.
            ///
            /// - Parameters:
            ///   - assetId:
            ///   - personId:
            internal init(
                assetId: Swift.String,
                personId: Swift.String
            ) {
                self.assetId = assetId
                self.personId = personId
            }
            internal enum CodingKeys: String, CodingKey {
                case assetId
                case personId
            }
        }
        /// - Remark: Generated from `#/components/schemas/AssetFaceWithoutPersonResponseDto`.
        internal struct AssetFaceWithoutPersonResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AssetFaceWithoutPersonResponseDto/boundingBoxX1`.
            internal var boundingBoxX1: Swift.Int
            /// - Remark: Generated from `#/components/schemas/AssetFaceWithoutPersonResponseDto/boundingBoxX2`.
            internal var boundingBoxX2: Swift.Int
            /// - Remark: Generated from `#/components/schemas/AssetFaceWithoutPersonResponseDto/boundingBoxY1`.
            internal var boundingBoxY1: Swift.Int
            /// - Remark: Generated from `#/components/schemas/AssetFaceWithoutPersonResponseDto/boundingBoxY2`.
            internal var boundingBoxY2: Swift.Int
            /// - Remark: Generated from `#/components/schemas/AssetFaceWithoutPersonResponseDto/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/AssetFaceWithoutPersonResponseDto/imageHeight`.
            internal var imageHeight: Swift.Int
            /// - Remark: Generated from `#/components/schemas/AssetFaceWithoutPersonResponseDto/imageWidth`.
            internal var imageWidth: Swift.Int
            /// Creates a new `AssetFaceWithoutPersonResponseDto`.
            ///
            /// - Parameters:
            ///   - boundingBoxX1:
            ///   - boundingBoxX2:
            ///   - boundingBoxY1:
            ///   - boundingBoxY2:
            ///   - id:
            ///   - imageHeight:
            ///   - imageWidth:
            internal init(
                boundingBoxX1: Swift.Int,
                boundingBoxX2: Swift.Int,
                boundingBoxY1: Swift.Int,
                boundingBoxY2: Swift.Int,
                id: Swift.String,
                imageHeight: Swift.Int,
                imageWidth: Swift.Int
            ) {
                self.boundingBoxX1 = boundingBoxX1
                self.boundingBoxX2 = boundingBoxX2
                self.boundingBoxY1 = boundingBoxY1
                self.boundingBoxY2 = boundingBoxY2
                self.id = id
                self.imageHeight = imageHeight
                self.imageWidth = imageWidth
            }
            internal enum CodingKeys: String, CodingKey {
                case boundingBoxX1
                case boundingBoxX2
                case boundingBoxY1
                case boundingBoxY2
                case id
                case imageHeight
                case imageWidth
            }
        }
        /// - Remark: Generated from `#/components/schemas/AssetFullSyncDto`.
        internal struct AssetFullSyncDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AssetFullSyncDto/lastId`.
            internal var lastId: Swift.String?
            /// - Remark: Generated from `#/components/schemas/AssetFullSyncDto/limit`.
            internal var limit: Swift.Int
            /// - Remark: Generated from `#/components/schemas/AssetFullSyncDto/updatedUntil`.
            internal var updatedUntil: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/AssetFullSyncDto/userId`.
            internal var userId: Swift.String?
            /// Creates a new `AssetFullSyncDto`.
            ///
            /// - Parameters:
            ///   - lastId:
            ///   - limit:
            ///   - updatedUntil:
            ///   - userId:
            internal init(
                lastId: Swift.String? = nil,
                limit: Swift.Int,
                updatedUntil: Foundation.Date,
                userId: Swift.String? = nil
            ) {
                self.lastId = lastId
                self.limit = limit
                self.updatedUntil = updatedUntil
                self.userId = userId
            }
            internal enum CodingKeys: String, CodingKey {
                case lastId
                case limit
                case updatedUntil
                case userId
            }
        }
        /// - Remark: Generated from `#/components/schemas/AssetIdsDto`.
        internal struct AssetIdsDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AssetIdsDto/assetIds`.
            internal var assetIds: [Swift.String]
            /// Creates a new `AssetIdsDto`.
            ///
            /// - Parameters:
            ///   - assetIds:
            internal init(assetIds: [Swift.String]) {
                self.assetIds = assetIds
            }
            internal enum CodingKeys: String, CodingKey {
                case assetIds
            }
        }
        /// - Remark: Generated from `#/components/schemas/AssetIdsResponseDto`.
        internal struct AssetIdsResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AssetIdsResponseDto/assetId`.
            internal var assetId: Swift.String
            /// - Remark: Generated from `#/components/schemas/AssetIdsResponseDto/error`.
            @frozen internal enum errorPayload: String, Codable, Hashable, Sendable {
                case duplicate = "duplicate"
                case no_permission = "no_permission"
                case not_found = "not_found"
            }
            /// - Remark: Generated from `#/components/schemas/AssetIdsResponseDto/error`.
            internal var error: Components.Schemas.AssetIdsResponseDto.errorPayload?
            /// - Remark: Generated from `#/components/schemas/AssetIdsResponseDto/success`.
            internal var success: Swift.Bool
            /// Creates a new `AssetIdsResponseDto`.
            ///
            /// - Parameters:
            ///   - assetId:
            ///   - error:
            ///   - success:
            internal init(
                assetId: Swift.String,
                error: Components.Schemas.AssetIdsResponseDto.errorPayload? = nil,
                success: Swift.Bool
            ) {
                self.assetId = assetId
                self.error = error
                self.success = success
            }
            internal enum CodingKeys: String, CodingKey {
                case assetId
                case error
                case success
            }
        }
        /// - Remark: Generated from `#/components/schemas/AssetJobName`.
        @frozen internal enum AssetJobName: String, Codable, Hashable, Sendable {
            case regenerate_hyphen_thumbnail = "regenerate-thumbnail"
            case refresh_hyphen_metadata = "refresh-metadata"
            case transcode_hyphen_video = "transcode-video"
        }
        /// - Remark: Generated from `#/components/schemas/AssetJobsDto`.
        internal struct AssetJobsDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AssetJobsDto/assetIds`.
            internal var assetIds: [Swift.String]
            /// - Remark: Generated from `#/components/schemas/AssetJobsDto/name`.
            internal var name: Components.Schemas.AssetJobName
            /// Creates a new `AssetJobsDto`.
            ///
            /// - Parameters:
            ///   - assetIds:
            ///   - name:
            internal init(
                assetIds: [Swift.String],
                name: Components.Schemas.AssetJobName
            ) {
                self.assetIds = assetIds
                self.name = name
            }
            internal enum CodingKeys: String, CodingKey {
                case assetIds
                case name
            }
        }
        /// - Remark: Generated from `#/components/schemas/AssetMediaCreateDto`.
        @frozen internal enum AssetMediaCreateDto: Sendable, Hashable {
            /// - Remark: Generated from `#/components/schemas/AssetMediaCreateDto/assetData`.
            internal struct assetDataPayload: Sendable, Hashable {
                internal var body: OpenAPIRuntime.HTTPBody
                /// Creates a new `assetDataPayload`.
                ///
                /// - Parameters:
                ///   - body:
                internal init(body: OpenAPIRuntime.HTTPBody) {
                    self.body = body
                }
            }
            case assetData(OpenAPIRuntime.MultipartPart<Components.Schemas.AssetMediaCreateDto.assetDataPayload>)
            /// - Remark: Generated from `#/components/schemas/AssetMediaCreateDto/deviceAssetId`.
            internal struct deviceAssetIdPayload: Sendable, Hashable {
                internal var body: OpenAPIRuntime.HTTPBody
                /// Creates a new `deviceAssetIdPayload`.
                ///
                /// - Parameters:
                ///   - body:
                internal init(body: OpenAPIRuntime.HTTPBody) {
                    self.body = body
                }
            }
            case deviceAssetId(OpenAPIRuntime.MultipartPart<Components.Schemas.AssetMediaCreateDto.deviceAssetIdPayload>)
            /// - Remark: Generated from `#/components/schemas/AssetMediaCreateDto/deviceId`.
            internal struct deviceIdPayload: Sendable, Hashable {
                internal var body: OpenAPIRuntime.HTTPBody
                /// Creates a new `deviceIdPayload`.
                ///
                /// - Parameters:
                ///   - body:
                internal init(body: OpenAPIRuntime.HTTPBody) {
                    self.body = body
                }
            }
            case deviceId(OpenAPIRuntime.MultipartPart<Components.Schemas.AssetMediaCreateDto.deviceIdPayload>)
            /// - Remark: Generated from `#/components/schemas/AssetMediaCreateDto/duration`.
            internal struct durationPayload: Sendable, Hashable {
                internal var body: OpenAPIRuntime.HTTPBody
                /// Creates a new `durationPayload`.
                ///
                /// - Parameters:
                ///   - body:
                internal init(body: OpenAPIRuntime.HTTPBody) {
                    self.body = body
                }
            }
            case duration(OpenAPIRuntime.MultipartPart<Components.Schemas.AssetMediaCreateDto.durationPayload>)
            /// - Remark: Generated from `#/components/schemas/AssetMediaCreateDto/fileCreatedAt`.
            internal struct fileCreatedAtPayload: Sendable, Hashable {
                internal var body: OpenAPIRuntime.HTTPBody
                /// Creates a new `fileCreatedAtPayload`.
                ///
                /// - Parameters:
                ///   - body:
                internal init(body: OpenAPIRuntime.HTTPBody) {
                    self.body = body
                }
            }
            case fileCreatedAt(OpenAPIRuntime.MultipartPart<Components.Schemas.AssetMediaCreateDto.fileCreatedAtPayload>)
            /// - Remark: Generated from `#/components/schemas/AssetMediaCreateDto/fileModifiedAt`.
            internal struct fileModifiedAtPayload: Sendable, Hashable {
                internal var body: OpenAPIRuntime.HTTPBody
                /// Creates a new `fileModifiedAtPayload`.
                ///
                /// - Parameters:
                ///   - body:
                internal init(body: OpenAPIRuntime.HTTPBody) {
                    self.body = body
                }
            }
            case fileModifiedAt(OpenAPIRuntime.MultipartPart<Components.Schemas.AssetMediaCreateDto.fileModifiedAtPayload>)
            /// - Remark: Generated from `#/components/schemas/AssetMediaCreateDto/isArchived`.
            internal struct isArchivedPayload: Sendable, Hashable {
                internal var body: OpenAPIRuntime.HTTPBody
                /// Creates a new `isArchivedPayload`.
                ///
                /// - Parameters:
                ///   - body:
                internal init(body: OpenAPIRuntime.HTTPBody) {
                    self.body = body
                }
            }
            case isArchived(OpenAPIRuntime.MultipartPart<Components.Schemas.AssetMediaCreateDto.isArchivedPayload>)
            /// - Remark: Generated from `#/components/schemas/AssetMediaCreateDto/isFavorite`.
            internal struct isFavoritePayload: Sendable, Hashable {
                internal var body: OpenAPIRuntime.HTTPBody
                /// Creates a new `isFavoritePayload`.
                ///
                /// - Parameters:
                ///   - body:
                internal init(body: OpenAPIRuntime.HTTPBody) {
                    self.body = body
                }
            }
            case isFavorite(OpenAPIRuntime.MultipartPart<Components.Schemas.AssetMediaCreateDto.isFavoritePayload>)
            /// - Remark: Generated from `#/components/schemas/AssetMediaCreateDto/isOffline`.
            internal struct isOfflinePayload: Sendable, Hashable {
                internal var body: OpenAPIRuntime.HTTPBody
                /// Creates a new `isOfflinePayload`.
                ///
                /// - Parameters:
                ///   - body:
                internal init(body: OpenAPIRuntime.HTTPBody) {
                    self.body = body
                }
            }
            case isOffline(OpenAPIRuntime.MultipartPart<Components.Schemas.AssetMediaCreateDto.isOfflinePayload>)
            /// - Remark: Generated from `#/components/schemas/AssetMediaCreateDto/isVisible`.
            internal struct isVisiblePayload: Sendable, Hashable {
                internal var body: OpenAPIRuntime.HTTPBody
                /// Creates a new `isVisiblePayload`.
                ///
                /// - Parameters:
                ///   - body:
                internal init(body: OpenAPIRuntime.HTTPBody) {
                    self.body = body
                }
            }
            case isVisible(OpenAPIRuntime.MultipartPart<Components.Schemas.AssetMediaCreateDto.isVisiblePayload>)
            /// - Remark: Generated from `#/components/schemas/AssetMediaCreateDto/livePhotoVideoId`.
            internal struct livePhotoVideoIdPayload: Sendable, Hashable {
                internal var body: OpenAPIRuntime.HTTPBody
                /// Creates a new `livePhotoVideoIdPayload`.
                ///
                /// - Parameters:
                ///   - body:
                internal init(body: OpenAPIRuntime.HTTPBody) {
                    self.body = body
                }
            }
            case livePhotoVideoId(OpenAPIRuntime.MultipartPart<Components.Schemas.AssetMediaCreateDto.livePhotoVideoIdPayload>)
            /// - Remark: Generated from `#/components/schemas/AssetMediaCreateDto/sidecarData`.
            internal struct sidecarDataPayload: Sendable, Hashable {
                internal var body: OpenAPIRuntime.HTTPBody
                /// Creates a new `sidecarDataPayload`.
                ///
                /// - Parameters:
                ///   - body:
                internal init(body: OpenAPIRuntime.HTTPBody) {
                    self.body = body
                }
            }
            case sidecarData(OpenAPIRuntime.MultipartPart<Components.Schemas.AssetMediaCreateDto.sidecarDataPayload>)
            case undocumented(OpenAPIRuntime.MultipartRawPart)
        }
        /// - Remark: Generated from `#/components/schemas/AssetMediaReplaceDto`.
        @frozen internal enum AssetMediaReplaceDto: Sendable, Hashable {
            /// - Remark: Generated from `#/components/schemas/AssetMediaReplaceDto/assetData`.
            internal struct assetDataPayload: Sendable, Hashable {
                internal var body: OpenAPIRuntime.HTTPBody
                /// Creates a new `assetDataPayload`.
                ///
                /// - Parameters:
                ///   - body:
                internal init(body: OpenAPIRuntime.HTTPBody) {
                    self.body = body
                }
            }
            case assetData(OpenAPIRuntime.MultipartPart<Components.Schemas.AssetMediaReplaceDto.assetDataPayload>)
            /// - Remark: Generated from `#/components/schemas/AssetMediaReplaceDto/deviceAssetId`.
            internal struct deviceAssetIdPayload: Sendable, Hashable {
                internal var body: OpenAPIRuntime.HTTPBody
                /// Creates a new `deviceAssetIdPayload`.
                ///
                /// - Parameters:
                ///   - body:
                internal init(body: OpenAPIRuntime.HTTPBody) {
                    self.body = body
                }
            }
            case deviceAssetId(OpenAPIRuntime.MultipartPart<Components.Schemas.AssetMediaReplaceDto.deviceAssetIdPayload>)
            /// - Remark: Generated from `#/components/schemas/AssetMediaReplaceDto/deviceId`.
            internal struct deviceIdPayload: Sendable, Hashable {
                internal var body: OpenAPIRuntime.HTTPBody
                /// Creates a new `deviceIdPayload`.
                ///
                /// - Parameters:
                ///   - body:
                internal init(body: OpenAPIRuntime.HTTPBody) {
                    self.body = body
                }
            }
            case deviceId(OpenAPIRuntime.MultipartPart<Components.Schemas.AssetMediaReplaceDto.deviceIdPayload>)
            /// - Remark: Generated from `#/components/schemas/AssetMediaReplaceDto/duration`.
            internal struct durationPayload: Sendable, Hashable {
                internal var body: OpenAPIRuntime.HTTPBody
                /// Creates a new `durationPayload`.
                ///
                /// - Parameters:
                ///   - body:
                internal init(body: OpenAPIRuntime.HTTPBody) {
                    self.body = body
                }
            }
            case duration(OpenAPIRuntime.MultipartPart<Components.Schemas.AssetMediaReplaceDto.durationPayload>)
            /// - Remark: Generated from `#/components/schemas/AssetMediaReplaceDto/fileCreatedAt`.
            internal struct fileCreatedAtPayload: Sendable, Hashable {
                internal var body: OpenAPIRuntime.HTTPBody
                /// Creates a new `fileCreatedAtPayload`.
                ///
                /// - Parameters:
                ///   - body:
                internal init(body: OpenAPIRuntime.HTTPBody) {
                    self.body = body
                }
            }
            case fileCreatedAt(OpenAPIRuntime.MultipartPart<Components.Schemas.AssetMediaReplaceDto.fileCreatedAtPayload>)
            /// - Remark: Generated from `#/components/schemas/AssetMediaReplaceDto/fileModifiedAt`.
            internal struct fileModifiedAtPayload: Sendable, Hashable {
                internal var body: OpenAPIRuntime.HTTPBody
                /// Creates a new `fileModifiedAtPayload`.
                ///
                /// - Parameters:
                ///   - body:
                internal init(body: OpenAPIRuntime.HTTPBody) {
                    self.body = body
                }
            }
            case fileModifiedAt(OpenAPIRuntime.MultipartPart<Components.Schemas.AssetMediaReplaceDto.fileModifiedAtPayload>)
            case undocumented(OpenAPIRuntime.MultipartRawPart)
        }
        /// - Remark: Generated from `#/components/schemas/AssetMediaResponseDto`.
        internal struct AssetMediaResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AssetMediaResponseDto/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/AssetMediaResponseDto/status`.
            internal var status: Components.Schemas.AssetMediaStatus
            /// Creates a new `AssetMediaResponseDto`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - status:
            internal init(
                id: Swift.String,
                status: Components.Schemas.AssetMediaStatus
            ) {
                self.id = id
                self.status = status
            }
            internal enum CodingKeys: String, CodingKey {
                case id
                case status
            }
        }
        /// - Remark: Generated from `#/components/schemas/AssetMediaSize`.
        @frozen internal enum AssetMediaSize: String, Codable, Hashable, Sendable {
            case preview = "preview"
            case thumbnail = "thumbnail"
        }
        /// - Remark: Generated from `#/components/schemas/AssetMediaStatus`.
        @frozen internal enum AssetMediaStatus: String, Codable, Hashable, Sendable {
            case created = "created"
            case replaced = "replaced"
            case duplicate = "duplicate"
        }
        /// - Remark: Generated from `#/components/schemas/AssetOrder`.
        @frozen internal enum AssetOrder: String, Codable, Hashable, Sendable {
            case asc = "asc"
            case desc = "desc"
        }
        /// - Remark: Generated from `#/components/schemas/AssetResponseDto`.
        internal struct AssetResponseDto: Codable, Hashable, Sendable {
            /// base64 encoded sha1 hash
            ///
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/checksum`.
            internal var checksum: Swift.String {
                get  {
                    storage.value.checksum
                }
                _modify {
                    yield &storage.value.checksum
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/deviceAssetId`.
            internal var deviceAssetId: Swift.String {
                get  {
                    storage.value.deviceAssetId
                }
                _modify {
                    yield &storage.value.deviceAssetId
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/deviceId`.
            internal var deviceId: Swift.String {
                get  {
                    storage.value.deviceId
                }
                _modify {
                    yield &storage.value.deviceId
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/duplicateId`.
            internal var duplicateId: Swift.String? {
                get  {
                    storage.value.duplicateId
                }
                _modify {
                    yield &storage.value.duplicateId
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/duration`.
            internal var duration: Swift.String {
                get  {
                    storage.value.duration
                }
                _modify {
                    yield &storage.value.duration
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/exifInfo`.
            internal var exifInfo: Components.Schemas.ExifResponseDto? {
                get  {
                    storage.value.exifInfo
                }
                _modify {
                    yield &storage.value.exifInfo
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/fileCreatedAt`.
            internal var fileCreatedAt: Foundation.Date {
                get  {
                    storage.value.fileCreatedAt
                }
                _modify {
                    yield &storage.value.fileCreatedAt
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/fileModifiedAt`.
            internal var fileModifiedAt: Foundation.Date {
                get  {
                    storage.value.fileModifiedAt
                }
                _modify {
                    yield &storage.value.fileModifiedAt
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/hasMetadata`.
            internal var hasMetadata: Swift.Bool {
                get  {
                    storage.value.hasMetadata
                }
                _modify {
                    yield &storage.value.hasMetadata
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/id`.
            internal var id: Swift.String {
                get  {
                    storage.value.id
                }
                _modify {
                    yield &storage.value.id
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/isArchived`.
            internal var isArchived: Swift.Bool {
                get  {
                    storage.value.isArchived
                }
                _modify {
                    yield &storage.value.isArchived
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/isFavorite`.
            internal var isFavorite: Swift.Bool {
                get  {
                    storage.value.isFavorite
                }
                _modify {
                    yield &storage.value.isFavorite
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/isOffline`.
            internal var isOffline: Swift.Bool {
                get  {
                    storage.value.isOffline
                }
                _modify {
                    yield &storage.value.isOffline
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/isTrashed`.
            internal var isTrashed: Swift.Bool {
                get  {
                    storage.value.isTrashed
                }
                _modify {
                    yield &storage.value.isTrashed
                }
            }
            /// This property was deprecated in v1.106.0
            ///
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/libraryId`.
            @available(*, deprecated)
            internal var libraryId: Swift.String?
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/livePhotoVideoId`.
            internal var livePhotoVideoId: Swift.String? {
                get  {
                    storage.value.livePhotoVideoId
                }
                _modify {
                    yield &storage.value.livePhotoVideoId
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/localDateTime`.
            internal var localDateTime: Foundation.Date {
                get  {
                    storage.value.localDateTime
                }
                _modify {
                    yield &storage.value.localDateTime
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/originalFileName`.
            internal var originalFileName: Swift.String {
                get  {
                    storage.value.originalFileName
                }
                _modify {
                    yield &storage.value.originalFileName
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/originalMimeType`.
            internal var originalMimeType: Swift.String? {
                get  {
                    storage.value.originalMimeType
                }
                _modify {
                    yield &storage.value.originalMimeType
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/originalPath`.
            internal var originalPath: Swift.String {
                get  {
                    storage.value.originalPath
                }
                _modify {
                    yield &storage.value.originalPath
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/owner`.
            internal var owner: Components.Schemas.UserResponseDto? {
                get  {
                    storage.value.owner
                }
                _modify {
                    yield &storage.value.owner
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/ownerId`.
            internal var ownerId: Swift.String {
                get  {
                    storage.value.ownerId
                }
                _modify {
                    yield &storage.value.ownerId
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/people`.
            internal var people: [Components.Schemas.PersonWithFacesResponseDto]? {
                get  {
                    storage.value.people
                }
                _modify {
                    yield &storage.value.people
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/resized`.
            internal var resized: Swift.Bool {
                get  {
                    storage.value.resized
                }
                _modify {
                    yield &storage.value.resized
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/smartInfo`.
            internal var smartInfo: Components.Schemas.SmartInfoResponseDto? {
                get  {
                    storage.value.smartInfo
                }
                _modify {
                    yield &storage.value.smartInfo
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/stack`.
            internal var stack: [Components.Schemas.AssetResponseDto]? {
                get  {
                    storage.value.stack
                }
                _modify {
                    yield &storage.value.stack
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/stackCount`.
            internal var stackCount: Swift.Int? {
                get  {
                    storage.value.stackCount
                }
                _modify {
                    yield &storage.value.stackCount
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/stackParentId`.
            internal var stackParentId: Swift.String? {
                get  {
                    storage.value.stackParentId
                }
                _modify {
                    yield &storage.value.stackParentId
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/tags`.
            internal var tags: [Components.Schemas.TagResponseDto]? {
                get  {
                    storage.value.tags
                }
                _modify {
                    yield &storage.value.tags
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/thumbhash`.
            internal var thumbhash: Swift.String? {
                get  {
                    storage.value.thumbhash
                }
                _modify {
                    yield &storage.value.thumbhash
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/type`.
            internal var _type: Components.Schemas.AssetTypeEnum {
                get  {
                    storage.value._type
                }
                _modify {
                    yield &storage.value._type
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/unassignedFaces`.
            internal var unassignedFaces: [Components.Schemas.AssetFaceWithoutPersonResponseDto]? {
                get  {
                    storage.value.unassignedFaces
                }
                _modify {
                    yield &storage.value.unassignedFaces
                }
            }
            /// - Remark: Generated from `#/components/schemas/AssetResponseDto/updatedAt`.
            internal var updatedAt: Foundation.Date {
                get  {
                    storage.value.updatedAt
                }
                _modify {
                    yield &storage.value.updatedAt
                }
            }
            /// Creates a new `AssetResponseDto`.
            ///
            /// - Parameters:
            ///   - checksum: base64 encoded sha1 hash
            ///   - deviceAssetId:
            ///   - deviceId:
            ///   - duplicateId:
            ///   - duration:
            ///   - exifInfo:
            ///   - fileCreatedAt:
            ///   - fileModifiedAt:
            ///   - hasMetadata:
            ///   - id:
            ///   - isArchived:
            ///   - isFavorite:
            ///   - isOffline:
            ///   - isTrashed:
            ///   - libraryId: This property was deprecated in v1.106.0
            ///   - livePhotoVideoId:
            ///   - localDateTime:
            ///   - originalFileName:
            ///   - originalMimeType:
            ///   - originalPath:
            ///   - owner:
            ///   - ownerId:
            ///   - people:
            ///   - resized:
            ///   - smartInfo:
            ///   - stack:
            ///   - stackCount:
            ///   - stackParentId:
            ///   - tags:
            ///   - thumbhash:
            ///   - _type:
            ///   - unassignedFaces:
            ///   - updatedAt:
            internal init(
                checksum: Swift.String,
                deviceAssetId: Swift.String,
                deviceId: Swift.String,
                duplicateId: Swift.String? = nil,
                duration: Swift.String,
                exifInfo: Components.Schemas.ExifResponseDto? = nil,
                fileCreatedAt: Foundation.Date,
                fileModifiedAt: Foundation.Date,
                hasMetadata: Swift.Bool,
                id: Swift.String,
                isArchived: Swift.Bool,
                isFavorite: Swift.Bool,
                isOffline: Swift.Bool,
                isTrashed: Swift.Bool,
                libraryId: Swift.String? = nil,
                livePhotoVideoId: Swift.String? = nil,
                localDateTime: Foundation.Date,
                originalFileName: Swift.String,
                originalMimeType: Swift.String? = nil,
                originalPath: Swift.String,
                owner: Components.Schemas.UserResponseDto? = nil,
                ownerId: Swift.String,
                people: [Components.Schemas.PersonWithFacesResponseDto]? = nil,
                resized: Swift.Bool,
                smartInfo: Components.Schemas.SmartInfoResponseDto? = nil,
                stack: [Components.Schemas.AssetResponseDto]? = nil,
                stackCount: Swift.Int? = nil,
                stackParentId: Swift.String? = nil,
                tags: [Components.Schemas.TagResponseDto]? = nil,
                thumbhash: Swift.String? = nil,
                _type: Components.Schemas.AssetTypeEnum,
                unassignedFaces: [Components.Schemas.AssetFaceWithoutPersonResponseDto]? = nil,
                updatedAt: Foundation.Date
            ) {
                storage = .init(value: .init(
                    checksum: checksum,
                    deviceAssetId: deviceAssetId,
                    deviceId: deviceId,
                    duplicateId: duplicateId,
                    duration: duration,
                    exifInfo: exifInfo,
                    fileCreatedAt: fileCreatedAt,
                    fileModifiedAt: fileModifiedAt,
                    hasMetadata: hasMetadata,
                    id: id,
                    isArchived: isArchived,
                    isFavorite: isFavorite,
                    isOffline: isOffline,
                    isTrashed: isTrashed,
                    livePhotoVideoId: livePhotoVideoId,
                    localDateTime: localDateTime,
                    originalFileName: originalFileName,
                    originalMimeType: originalMimeType,
                    originalPath: originalPath,
                    owner: owner,
                    ownerId: ownerId,
                    people: people,
                    resized: resized,
                    smartInfo: smartInfo,
                    stack: stack,
                    stackCount: stackCount,
                    stackParentId: stackParentId,
                    tags: tags,
                    thumbhash: thumbhash,
                    _type: _type,
                    unassignedFaces: unassignedFaces,
                    updatedAt: updatedAt
                ))
            }
            internal enum CodingKeys: String, CodingKey {
                case checksum
                case deviceAssetId
                case deviceId
                case duplicateId
                case duration
                case exifInfo
                case fileCreatedAt
                case fileModifiedAt
                case hasMetadata
                case id
                case isArchived
                case isFavorite
                case isOffline
                case isTrashed
                case libraryId
                case livePhotoVideoId
                case localDateTime
                case originalFileName
                case originalMimeType
                case originalPath
                case owner
                case ownerId
                case people
                case resized
                case smartInfo
                case stack
                case stackCount
                case stackParentId
                case tags
                case thumbhash
                case _type = "type"
                case unassignedFaces
                case updatedAt
            }
            internal init(from decoder: any Decoder) throws {
                storage = try .init(from: decoder)
            }
            internal func encode(to encoder: any Encoder) throws {
                try storage.encode(to: encoder)
            }
            /// Internal reference storage to allow type recursion.
            private var storage: OpenAPIRuntime.CopyOnWriteBox<Storage>
            private struct Storage: Codable, Hashable, Sendable {
                /// base64 encoded sha1 hash
                ///
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/checksum`.
                var checksum: Swift.String
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/deviceAssetId`.
                var deviceAssetId: Swift.String
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/deviceId`.
                var deviceId: Swift.String
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/duplicateId`.
                var duplicateId: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/duration`.
                var duration: Swift.String
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/exifInfo`.
                var exifInfo: Components.Schemas.ExifResponseDto?
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/fileCreatedAt`.
                var fileCreatedAt: Foundation.Date
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/fileModifiedAt`.
                var fileModifiedAt: Foundation.Date
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/hasMetadata`.
                var hasMetadata: Swift.Bool
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/id`.
                var id: Swift.String
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/isArchived`.
                var isArchived: Swift.Bool
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/isFavorite`.
                var isFavorite: Swift.Bool
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/isOffline`.
                var isOffline: Swift.Bool
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/isTrashed`.
                var isTrashed: Swift.Bool
                /// This property was deprecated in v1.106.0
                ///
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/libraryId`.
                @available(*, deprecated)
                var libraryId: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/livePhotoVideoId`.
                var livePhotoVideoId: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/localDateTime`.
                var localDateTime: Foundation.Date
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/originalFileName`.
                var originalFileName: Swift.String
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/originalMimeType`.
                var originalMimeType: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/originalPath`.
                var originalPath: Swift.String
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/owner`.
                var owner: Components.Schemas.UserResponseDto?
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/ownerId`.
                var ownerId: Swift.String
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/people`.
                var people: [Components.Schemas.PersonWithFacesResponseDto]?
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/resized`.
                var resized: Swift.Bool
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/smartInfo`.
                var smartInfo: Components.Schemas.SmartInfoResponseDto?
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/stack`.
                var stack: [Components.Schemas.AssetResponseDto]?
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/stackCount`.
                var stackCount: Swift.Int?
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/stackParentId`.
                var stackParentId: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/tags`.
                var tags: [Components.Schemas.TagResponseDto]?
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/thumbhash`.
                var thumbhash: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/type`.
                var _type: Components.Schemas.AssetTypeEnum
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/unassignedFaces`.
                var unassignedFaces: [Components.Schemas.AssetFaceWithoutPersonResponseDto]?
                /// - Remark: Generated from `#/components/schemas/AssetResponseDto/updatedAt`.
                var updatedAt: Foundation.Date
                init(
                    checksum: Swift.String,
                    deviceAssetId: Swift.String,
                    deviceId: Swift.String,
                    duplicateId: Swift.String? = nil,
                    duration: Swift.String,
                    exifInfo: Components.Schemas.ExifResponseDto? = nil,
                    fileCreatedAt: Foundation.Date,
                    fileModifiedAt: Foundation.Date,
                    hasMetadata: Swift.Bool,
                    id: Swift.String,
                    isArchived: Swift.Bool,
                    isFavorite: Swift.Bool,
                    isOffline: Swift.Bool,
                    isTrashed: Swift.Bool,
                    libraryId: Swift.String? = nil,
                    livePhotoVideoId: Swift.String? = nil,
                    localDateTime: Foundation.Date,
                    originalFileName: Swift.String,
                    originalMimeType: Swift.String? = nil,
                    originalPath: Swift.String,
                    owner: Components.Schemas.UserResponseDto? = nil,
                    ownerId: Swift.String,
                    people: [Components.Schemas.PersonWithFacesResponseDto]? = nil,
                    resized: Swift.Bool,
                    smartInfo: Components.Schemas.SmartInfoResponseDto? = nil,
                    stack: [Components.Schemas.AssetResponseDto]? = nil,
                    stackCount: Swift.Int? = nil,
                    stackParentId: Swift.String? = nil,
                    tags: [Components.Schemas.TagResponseDto]? = nil,
                    thumbhash: Swift.String? = nil,
                    _type: Components.Schemas.AssetTypeEnum,
                    unassignedFaces: [Components.Schemas.AssetFaceWithoutPersonResponseDto]? = nil,
                    updatedAt: Foundation.Date
                ) {
                    self.checksum = checksum
                    self.deviceAssetId = deviceAssetId
                    self.deviceId = deviceId
                    self.duplicateId = duplicateId
                    self.duration = duration
                    self.exifInfo = exifInfo
                    self.fileCreatedAt = fileCreatedAt
                    self.fileModifiedAt = fileModifiedAt
                    self.hasMetadata = hasMetadata
                    self.id = id
                    self.isArchived = isArchived
                    self.isFavorite = isFavorite
                    self.isOffline = isOffline
                    self.isTrashed = isTrashed
                    self.libraryId = libraryId
                    self.livePhotoVideoId = livePhotoVideoId
                    self.localDateTime = localDateTime
                    self.originalFileName = originalFileName
                    self.originalMimeType = originalMimeType
                    self.originalPath = originalPath
                    self.owner = owner
                    self.ownerId = ownerId
                    self.people = people
                    self.resized = resized
                    self.smartInfo = smartInfo
                    self.stack = stack
                    self.stackCount = stackCount
                    self.stackParentId = stackParentId
                    self.tags = tags
                    self.thumbhash = thumbhash
                    self._type = _type
                    self.unassignedFaces = unassignedFaces
                    self.updatedAt = updatedAt
                }
                typealias CodingKeys = Components.Schemas.AssetResponseDto.CodingKeys
            }
        }
        /// - Remark: Generated from `#/components/schemas/AssetStatsResponseDto`.
        internal struct AssetStatsResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AssetStatsResponseDto/images`.
            internal var images: Swift.Int
            /// - Remark: Generated from `#/components/schemas/AssetStatsResponseDto/total`.
            internal var total: Swift.Int
            /// - Remark: Generated from `#/components/schemas/AssetStatsResponseDto/videos`.
            internal var videos: Swift.Int
            /// Creates a new `AssetStatsResponseDto`.
            ///
            /// - Parameters:
            ///   - images:
            ///   - total:
            ///   - videos:
            internal init(
                images: Swift.Int,
                total: Swift.Int,
                videos: Swift.Int
            ) {
                self.images = images
                self.total = total
                self.videos = videos
            }
            internal enum CodingKeys: String, CodingKey {
                case images
                case total
                case videos
            }
        }
        /// - Remark: Generated from `#/components/schemas/AssetTypeEnum`.
        @frozen internal enum AssetTypeEnum: String, Codable, Hashable, Sendable {
            case IMAGE = "IMAGE"
            case VIDEO = "VIDEO"
            case AUDIO = "AUDIO"
            case OTHER = "OTHER"
        }
        /// - Remark: Generated from `#/components/schemas/AudioCodec`.
        @frozen internal enum AudioCodec: String, Codable, Hashable, Sendable {
            case mp3 = "mp3"
            case aac = "aac"
            case libopus = "libopus"
        }
        /// - Remark: Generated from `#/components/schemas/AuditDeletesResponseDto`.
        internal struct AuditDeletesResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AuditDeletesResponseDto/ids`.
            internal var ids: [Swift.String]
            /// - Remark: Generated from `#/components/schemas/AuditDeletesResponseDto/needsFullSync`.
            internal var needsFullSync: Swift.Bool
            /// Creates a new `AuditDeletesResponseDto`.
            ///
            /// - Parameters:
            ///   - ids:
            ///   - needsFullSync:
            internal init(
                ids: [Swift.String],
                needsFullSync: Swift.Bool
            ) {
                self.ids = ids
                self.needsFullSync = needsFullSync
            }
            internal enum CodingKeys: String, CodingKey {
                case ids
                case needsFullSync
            }
        }
        /// - Remark: Generated from `#/components/schemas/AvatarResponse`.
        internal struct AvatarResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AvatarResponse/color`.
            internal var color: Components.Schemas.UserAvatarColor
            /// Creates a new `AvatarResponse`.
            ///
            /// - Parameters:
            ///   - color:
            internal init(color: Components.Schemas.UserAvatarColor) {
                self.color = color
            }
            internal enum CodingKeys: String, CodingKey {
                case color
            }
        }
        /// - Remark: Generated from `#/components/schemas/AvatarUpdate`.
        internal struct AvatarUpdate: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AvatarUpdate/color`.
            internal var color: Components.Schemas.UserAvatarColor?
            /// Creates a new `AvatarUpdate`.
            ///
            /// - Parameters:
            ///   - color:
            internal init(color: Components.Schemas.UserAvatarColor? = nil) {
                self.color = color
            }
            internal enum CodingKeys: String, CodingKey {
                case color
            }
        }
        /// - Remark: Generated from `#/components/schemas/BulkIdResponseDto`.
        internal struct BulkIdResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BulkIdResponseDto/error`.
            @frozen internal enum errorPayload: String, Codable, Hashable, Sendable {
                case duplicate = "duplicate"
                case no_permission = "no_permission"
                case not_found = "not_found"
                case unknown = "unknown"
            }
            /// - Remark: Generated from `#/components/schemas/BulkIdResponseDto/error`.
            internal var error: Components.Schemas.BulkIdResponseDto.errorPayload?
            /// - Remark: Generated from `#/components/schemas/BulkIdResponseDto/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/BulkIdResponseDto/success`.
            internal var success: Swift.Bool
            /// Creates a new `BulkIdResponseDto`.
            ///
            /// - Parameters:
            ///   - error:
            ///   - id:
            ///   - success:
            internal init(
                error: Components.Schemas.BulkIdResponseDto.errorPayload? = nil,
                id: Swift.String,
                success: Swift.Bool
            ) {
                self.error = error
                self.id = id
                self.success = success
            }
            internal enum CodingKeys: String, CodingKey {
                case error
                case id
                case success
            }
        }
        /// - Remark: Generated from `#/components/schemas/BulkIdsDto`.
        internal struct BulkIdsDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BulkIdsDto/ids`.
            internal var ids: [Swift.String]
            /// Creates a new `BulkIdsDto`.
            ///
            /// - Parameters:
            ///   - ids:
            internal init(ids: [Swift.String]) {
                self.ids = ids
            }
            internal enum CodingKeys: String, CodingKey {
                case ids
            }
        }
        /// - Remark: Generated from `#/components/schemas/CLIPConfig`.
        internal struct CLIPConfig: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/CLIPConfig/enabled`.
            internal var enabled: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/CLIPConfig/modelName`.
            internal var modelName: Swift.String
            /// Creates a new `CLIPConfig`.
            ///
            /// - Parameters:
            ///   - enabled:
            ///   - modelName:
            internal init(
                enabled: Swift.Bool,
                modelName: Swift.String
            ) {
                self.enabled = enabled
                self.modelName = modelName
            }
            internal enum CodingKeys: String, CodingKey {
                case enabled
                case modelName
            }
        }
        /// - Remark: Generated from `#/components/schemas/CQMode`.
        @frozen internal enum CQMode: String, Codable, Hashable, Sendable {
            case auto = "auto"
            case cqp = "cqp"
            case icq = "icq"
        }
        /// - Remark: Generated from `#/components/schemas/ChangePasswordDto`.
        internal struct ChangePasswordDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ChangePasswordDto/newPassword`.
            internal var newPassword: Swift.String
            /// - Remark: Generated from `#/components/schemas/ChangePasswordDto/password`.
            internal var password: Swift.String
            /// Creates a new `ChangePasswordDto`.
            ///
            /// - Parameters:
            ///   - newPassword:
            ///   - password:
            internal init(
                newPassword: Swift.String,
                password: Swift.String
            ) {
                self.newPassword = newPassword
                self.password = password
            }
            internal enum CodingKeys: String, CodingKey {
                case newPassword
                case password
            }
        }
        /// - Remark: Generated from `#/components/schemas/CheckExistingAssetsDto`.
        internal struct CheckExistingAssetsDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/CheckExistingAssetsDto/deviceAssetIds`.
            internal var deviceAssetIds: [Swift.String]
            /// - Remark: Generated from `#/components/schemas/CheckExistingAssetsDto/deviceId`.
            internal var deviceId: Swift.String
            /// Creates a new `CheckExistingAssetsDto`.
            ///
            /// - Parameters:
            ///   - deviceAssetIds:
            ///   - deviceId:
            internal init(
                deviceAssetIds: [Swift.String],
                deviceId: Swift.String
            ) {
                self.deviceAssetIds = deviceAssetIds
                self.deviceId = deviceId
            }
            internal enum CodingKeys: String, CodingKey {
                case deviceAssetIds
                case deviceId
            }
        }
        /// - Remark: Generated from `#/components/schemas/CheckExistingAssetsResponseDto`.
        internal struct CheckExistingAssetsResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/CheckExistingAssetsResponseDto/existingIds`.
            internal var existingIds: [Swift.String]
            /// Creates a new `CheckExistingAssetsResponseDto`.
            ///
            /// - Parameters:
            ///   - existingIds:
            internal init(existingIds: [Swift.String]) {
                self.existingIds = existingIds
            }
            internal enum CodingKeys: String, CodingKey {
                case existingIds
            }
        }
        /// - Remark: Generated from `#/components/schemas/Colorspace`.
        @frozen internal enum Colorspace: String, Codable, Hashable, Sendable {
            case srgb = "srgb"
            case p3 = "p3"
        }
        /// - Remark: Generated from `#/components/schemas/CreateAlbumDto`.
        internal struct CreateAlbumDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/CreateAlbumDto/albumName`.
            internal var albumName: Swift.String
            /// - Remark: Generated from `#/components/schemas/CreateAlbumDto/albumUsers`.
            internal var albumUsers: [Components.Schemas.AlbumUserCreateDto]?
            /// - Remark: Generated from `#/components/schemas/CreateAlbumDto/assetIds`.
            internal var assetIds: [Swift.String]?
            /// - Remark: Generated from `#/components/schemas/CreateAlbumDto/description`.
            internal var description: Swift.String?
            /// Creates a new `CreateAlbumDto`.
            ///
            /// - Parameters:
            ///   - albumName:
            ///   - albumUsers:
            ///   - assetIds:
            ///   - description:
            internal init(
                albumName: Swift.String,
                albumUsers: [Components.Schemas.AlbumUserCreateDto]? = nil,
                assetIds: [Swift.String]? = nil,
                description: Swift.String? = nil
            ) {
                self.albumName = albumName
                self.albumUsers = albumUsers
                self.assetIds = assetIds
                self.description = description
            }
            internal enum CodingKeys: String, CodingKey {
                case albumName
                case albumUsers
                case assetIds
                case description
            }
        }
        /// - Remark: Generated from `#/components/schemas/CreateLibraryDto`.
        internal struct CreateLibraryDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/CreateLibraryDto/exclusionPatterns`.
            internal var exclusionPatterns: [Swift.String]?
            /// - Remark: Generated from `#/components/schemas/CreateLibraryDto/importPaths`.
            internal var importPaths: [Swift.String]?
            /// - Remark: Generated from `#/components/schemas/CreateLibraryDto/name`.
            internal var name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/CreateLibraryDto/ownerId`.
            internal var ownerId: Swift.String
            /// Creates a new `CreateLibraryDto`.
            ///
            /// - Parameters:
            ///   - exclusionPatterns:
            ///   - importPaths:
            ///   - name:
            ///   - ownerId:
            internal init(
                exclusionPatterns: [Swift.String]? = nil,
                importPaths: [Swift.String]? = nil,
                name: Swift.String? = nil,
                ownerId: Swift.String
            ) {
                self.exclusionPatterns = exclusionPatterns
                self.importPaths = importPaths
                self.name = name
                self.ownerId = ownerId
            }
            internal enum CodingKeys: String, CodingKey {
                case exclusionPatterns
                case importPaths
                case name
                case ownerId
            }
        }
        /// - Remark: Generated from `#/components/schemas/CreateProfileImageDto`.
        @frozen internal enum CreateProfileImageDto: Sendable, Hashable {
            /// - Remark: Generated from `#/components/schemas/CreateProfileImageDto/file`.
            internal struct filePayload: Sendable, Hashable {
                internal var body: OpenAPIRuntime.HTTPBody
                /// Creates a new `filePayload`.
                ///
                /// - Parameters:
                ///   - body:
                internal init(body: OpenAPIRuntime.HTTPBody) {
                    self.body = body
                }
            }
            case file(OpenAPIRuntime.MultipartPart<Components.Schemas.CreateProfileImageDto.filePayload>)
            case undocumented(OpenAPIRuntime.MultipartRawPart)
        }
        /// - Remark: Generated from `#/components/schemas/CreateProfileImageResponseDto`.
        internal struct CreateProfileImageResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/CreateProfileImageResponseDto/profileImagePath`.
            internal var profileImagePath: Swift.String
            /// - Remark: Generated from `#/components/schemas/CreateProfileImageResponseDto/userId`.
            internal var userId: Swift.String
            /// Creates a new `CreateProfileImageResponseDto`.
            ///
            /// - Parameters:
            ///   - profileImagePath:
            ///   - userId:
            internal init(
                profileImagePath: Swift.String,
                userId: Swift.String
            ) {
                self.profileImagePath = profileImagePath
                self.userId = userId
            }
            internal enum CodingKeys: String, CodingKey {
                case profileImagePath
                case userId
            }
        }
        /// - Remark: Generated from `#/components/schemas/CreateTagDto`.
        internal struct CreateTagDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/CreateTagDto/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/CreateTagDto/type`.
            internal var _type: Components.Schemas.TagTypeEnum
            /// Creates a new `CreateTagDto`.
            ///
            /// - Parameters:
            ///   - name:
            ///   - _type:
            internal init(
                name: Swift.String,
                _type: Components.Schemas.TagTypeEnum
            ) {
                self.name = name
                self._type = _type
            }
            internal enum CodingKeys: String, CodingKey {
                case name
                case _type = "type"
            }
        }
        /// - Remark: Generated from `#/components/schemas/DownloadArchiveInfo`.
        internal struct DownloadArchiveInfo: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/DownloadArchiveInfo/assetIds`.
            internal var assetIds: [Swift.String]
            /// - Remark: Generated from `#/components/schemas/DownloadArchiveInfo/size`.
            internal var size: Swift.Int
            /// Creates a new `DownloadArchiveInfo`.
            ///
            /// - Parameters:
            ///   - assetIds:
            ///   - size:
            internal init(
                assetIds: [Swift.String],
                size: Swift.Int
            ) {
                self.assetIds = assetIds
                self.size = size
            }
            internal enum CodingKeys: String, CodingKey {
                case assetIds
                case size
            }
        }
        /// - Remark: Generated from `#/components/schemas/DownloadInfoDto`.
        internal struct DownloadInfoDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/DownloadInfoDto/albumId`.
            internal var albumId: Swift.String?
            /// - Remark: Generated from `#/components/schemas/DownloadInfoDto/archiveSize`.
            internal var archiveSize: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/DownloadInfoDto/assetIds`.
            internal var assetIds: [Swift.String]?
            /// - Remark: Generated from `#/components/schemas/DownloadInfoDto/userId`.
            internal var userId: Swift.String?
            /// Creates a new `DownloadInfoDto`.
            ///
            /// - Parameters:
            ///   - albumId:
            ///   - archiveSize:
            ///   - assetIds:
            ///   - userId:
            internal init(
                albumId: Swift.String? = nil,
                archiveSize: Swift.Int? = nil,
                assetIds: [Swift.String]? = nil,
                userId: Swift.String? = nil
            ) {
                self.albumId = albumId
                self.archiveSize = archiveSize
                self.assetIds = assetIds
                self.userId = userId
            }
            internal enum CodingKeys: String, CodingKey {
                case albumId
                case archiveSize
                case assetIds
                case userId
            }
        }
        /// - Remark: Generated from `#/components/schemas/DownloadResponse`.
        internal struct DownloadResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/DownloadResponse/archiveSize`.
            internal var archiveSize: Swift.Int
            /// Creates a new `DownloadResponse`.
            ///
            /// - Parameters:
            ///   - archiveSize:
            internal init(archiveSize: Swift.Int) {
                self.archiveSize = archiveSize
            }
            internal enum CodingKeys: String, CodingKey {
                case archiveSize
            }
        }
        /// - Remark: Generated from `#/components/schemas/DownloadResponseDto`.
        internal struct DownloadResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/DownloadResponseDto/archives`.
            internal var archives: [Components.Schemas.DownloadArchiveInfo]
            /// - Remark: Generated from `#/components/schemas/DownloadResponseDto/totalSize`.
            internal var totalSize: Swift.Int
            /// Creates a new `DownloadResponseDto`.
            ///
            /// - Parameters:
            ///   - archives:
            ///   - totalSize:
            internal init(
                archives: [Components.Schemas.DownloadArchiveInfo],
                totalSize: Swift.Int
            ) {
                self.archives = archives
                self.totalSize = totalSize
            }
            internal enum CodingKeys: String, CodingKey {
                case archives
                case totalSize
            }
        }
        /// - Remark: Generated from `#/components/schemas/DownloadUpdate`.
        internal struct DownloadUpdate: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/DownloadUpdate/archiveSize`.
            internal var archiveSize: Swift.Int?
            /// Creates a new `DownloadUpdate`.
            ///
            /// - Parameters:
            ///   - archiveSize:
            internal init(archiveSize: Swift.Int? = nil) {
                self.archiveSize = archiveSize
            }
            internal enum CodingKeys: String, CodingKey {
                case archiveSize
            }
        }
        /// - Remark: Generated from `#/components/schemas/DuplicateDetectionConfig`.
        internal struct DuplicateDetectionConfig: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/DuplicateDetectionConfig/enabled`.
            internal var enabled: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/DuplicateDetectionConfig/maxDistance`.
            internal var maxDistance: Swift.Double
            /// Creates a new `DuplicateDetectionConfig`.
            ///
            /// - Parameters:
            ///   - enabled:
            ///   - maxDistance:
            internal init(
                enabled: Swift.Bool,
                maxDistance: Swift.Double
            ) {
                self.enabled = enabled
                self.maxDistance = maxDistance
            }
            internal enum CodingKeys: String, CodingKey {
                case enabled
                case maxDistance
            }
        }
        /// - Remark: Generated from `#/components/schemas/DuplicateResponseDto`.
        internal struct DuplicateResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/DuplicateResponseDto/assets`.
            internal var assets: [Components.Schemas.AssetResponseDto]
            /// - Remark: Generated from `#/components/schemas/DuplicateResponseDto/duplicateId`.
            internal var duplicateId: Swift.String
            /// Creates a new `DuplicateResponseDto`.
            ///
            /// - Parameters:
            ///   - assets:
            ///   - duplicateId:
            internal init(
                assets: [Components.Schemas.AssetResponseDto],
                duplicateId: Swift.String
            ) {
                self.assets = assets
                self.duplicateId = duplicateId
            }
            internal enum CodingKeys: String, CodingKey {
                case assets
                case duplicateId
            }
        }
        /// - Remark: Generated from `#/components/schemas/EmailNotificationsResponse`.
        internal struct EmailNotificationsResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/EmailNotificationsResponse/albumInvite`.
            internal var albumInvite: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/EmailNotificationsResponse/albumUpdate`.
            internal var albumUpdate: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/EmailNotificationsResponse/enabled`.
            internal var enabled: Swift.Bool
            /// Creates a new `EmailNotificationsResponse`.
            ///
            /// - Parameters:
            ///   - albumInvite:
            ///   - albumUpdate:
            ///   - enabled:
            internal init(
                albumInvite: Swift.Bool,
                albumUpdate: Swift.Bool,
                enabled: Swift.Bool
            ) {
                self.albumInvite = albumInvite
                self.albumUpdate = albumUpdate
                self.enabled = enabled
            }
            internal enum CodingKeys: String, CodingKey {
                case albumInvite
                case albumUpdate
                case enabled
            }
        }
        /// - Remark: Generated from `#/components/schemas/EmailNotificationsUpdate`.
        internal struct EmailNotificationsUpdate: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/EmailNotificationsUpdate/albumInvite`.
            internal var albumInvite: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/EmailNotificationsUpdate/albumUpdate`.
            internal var albumUpdate: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/EmailNotificationsUpdate/enabled`.
            internal var enabled: Swift.Bool?
            /// Creates a new `EmailNotificationsUpdate`.
            ///
            /// - Parameters:
            ///   - albumInvite:
            ///   - albumUpdate:
            ///   - enabled:
            internal init(
                albumInvite: Swift.Bool? = nil,
                albumUpdate: Swift.Bool? = nil,
                enabled: Swift.Bool? = nil
            ) {
                self.albumInvite = albumInvite
                self.albumUpdate = albumUpdate
                self.enabled = enabled
            }
            internal enum CodingKeys: String, CodingKey {
                case albumInvite
                case albumUpdate
                case enabled
            }
        }
        /// - Remark: Generated from `#/components/schemas/EntityType`.
        @frozen internal enum EntityType: String, Codable, Hashable, Sendable {
            case ASSET = "ASSET"
            case ALBUM = "ALBUM"
        }
        /// - Remark: Generated from `#/components/schemas/ExifResponseDto`.
        internal struct ExifResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ExifResponseDto/city`.
            internal var city: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ExifResponseDto/country`.
            internal var country: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ExifResponseDto/dateTimeOriginal`.
            internal var dateTimeOriginal: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/ExifResponseDto/description`.
            internal var description: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ExifResponseDto/exifImageHeight`.
            internal var exifImageHeight: Swift.Double?
            /// - Remark: Generated from `#/components/schemas/ExifResponseDto/exifImageWidth`.
            internal var exifImageWidth: Swift.Double?
            /// - Remark: Generated from `#/components/schemas/ExifResponseDto/exposureTime`.
            internal var exposureTime: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ExifResponseDto/fNumber`.
            internal var fNumber: Swift.Double?
            /// - Remark: Generated from `#/components/schemas/ExifResponseDto/fileSizeInByte`.
            internal var fileSizeInByte: Swift.Int64?
            /// - Remark: Generated from `#/components/schemas/ExifResponseDto/focalLength`.
            internal var focalLength: Swift.Double?
            /// - Remark: Generated from `#/components/schemas/ExifResponseDto/iso`.
            internal var iso: Swift.Double?
            /// - Remark: Generated from `#/components/schemas/ExifResponseDto/latitude`.
            internal var latitude: Swift.Double?
            /// - Remark: Generated from `#/components/schemas/ExifResponseDto/lensModel`.
            internal var lensModel: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ExifResponseDto/longitude`.
            internal var longitude: Swift.Double?
            /// - Remark: Generated from `#/components/schemas/ExifResponseDto/make`.
            internal var make: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ExifResponseDto/model`.
            internal var model: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ExifResponseDto/modifyDate`.
            internal var modifyDate: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/ExifResponseDto/orientation`.
            internal var orientation: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ExifResponseDto/projectionType`.
            internal var projectionType: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ExifResponseDto/state`.
            internal var state: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ExifResponseDto/timeZone`.
            internal var timeZone: Swift.String?
            /// Creates a new `ExifResponseDto`.
            ///
            /// - Parameters:
            ///   - city:
            ///   - country:
            ///   - dateTimeOriginal:
            ///   - description:
            ///   - exifImageHeight:
            ///   - exifImageWidth:
            ///   - exposureTime:
            ///   - fNumber:
            ///   - fileSizeInByte:
            ///   - focalLength:
            ///   - iso:
            ///   - latitude:
            ///   - lensModel:
            ///   - longitude:
            ///   - make:
            ///   - model:
            ///   - modifyDate:
            ///   - orientation:
            ///   - projectionType:
            ///   - state:
            ///   - timeZone:
            internal init(
                city: Swift.String? = nil,
                country: Swift.String? = nil,
                dateTimeOriginal: Foundation.Date? = nil,
                description: Swift.String? = nil,
                exifImageHeight: Swift.Double? = nil,
                exifImageWidth: Swift.Double? = nil,
                exposureTime: Swift.String? = nil,
                fNumber: Swift.Double? = nil,
                fileSizeInByte: Swift.Int64? = nil,
                focalLength: Swift.Double? = nil,
                iso: Swift.Double? = nil,
                latitude: Swift.Double? = nil,
                lensModel: Swift.String? = nil,
                longitude: Swift.Double? = nil,
                make: Swift.String? = nil,
                model: Swift.String? = nil,
                modifyDate: Foundation.Date? = nil,
                orientation: Swift.String? = nil,
                projectionType: Swift.String? = nil,
                state: Swift.String? = nil,
                timeZone: Swift.String? = nil
            ) {
                self.city = city
                self.country = country
                self.dateTimeOriginal = dateTimeOriginal
                self.description = description
                self.exifImageHeight = exifImageHeight
                self.exifImageWidth = exifImageWidth
                self.exposureTime = exposureTime
                self.fNumber = fNumber
                self.fileSizeInByte = fileSizeInByte
                self.focalLength = focalLength
                self.iso = iso
                self.latitude = latitude
                self.lensModel = lensModel
                self.longitude = longitude
                self.make = make
                self.model = model
                self.modifyDate = modifyDate
                self.orientation = orientation
                self.projectionType = projectionType
                self.state = state
                self.timeZone = timeZone
            }
            internal enum CodingKeys: String, CodingKey {
                case city
                case country
                case dateTimeOriginal
                case description
                case exifImageHeight
                case exifImageWidth
                case exposureTime
                case fNumber
                case fileSizeInByte
                case focalLength
                case iso
                case latitude
                case lensModel
                case longitude
                case make
                case model
                case modifyDate
                case orientation
                case projectionType
                case state
                case timeZone
            }
        }
        /// - Remark: Generated from `#/components/schemas/FaceDto`.
        internal struct FaceDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/FaceDto/id`.
            internal var id: Swift.String
            /// Creates a new `FaceDto`.
            ///
            /// - Parameters:
            ///   - id:
            internal init(id: Swift.String) {
                self.id = id
            }
            internal enum CodingKeys: String, CodingKey {
                case id
            }
        }
        /// - Remark: Generated from `#/components/schemas/FacialRecognitionConfig`.
        internal struct FacialRecognitionConfig: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/FacialRecognitionConfig/enabled`.
            internal var enabled: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/FacialRecognitionConfig/maxDistance`.
            internal var maxDistance: Swift.Double
            /// - Remark: Generated from `#/components/schemas/FacialRecognitionConfig/minFaces`.
            internal var minFaces: Swift.Int
            /// - Remark: Generated from `#/components/schemas/FacialRecognitionConfig/minScore`.
            internal var minScore: Swift.Double
            /// - Remark: Generated from `#/components/schemas/FacialRecognitionConfig/modelName`.
            internal var modelName: Swift.String
            /// Creates a new `FacialRecognitionConfig`.
            ///
            /// - Parameters:
            ///   - enabled:
            ///   - maxDistance:
            ///   - minFaces:
            ///   - minScore:
            ///   - modelName:
            internal init(
                enabled: Swift.Bool,
                maxDistance: Swift.Double,
                minFaces: Swift.Int,
                minScore: Swift.Double,
                modelName: Swift.String
            ) {
                self.enabled = enabled
                self.maxDistance = maxDistance
                self.minFaces = minFaces
                self.minScore = minScore
                self.modelName = modelName
            }
            internal enum CodingKeys: String, CodingKey {
                case enabled
                case maxDistance
                case minFaces
                case minScore
                case modelName
            }
        }
        /// - Remark: Generated from `#/components/schemas/FileChecksumDto`.
        internal struct FileChecksumDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/FileChecksumDto/filenames`.
            internal var filenames: [Swift.String]
            /// Creates a new `FileChecksumDto`.
            ///
            /// - Parameters:
            ///   - filenames:
            internal init(filenames: [Swift.String]) {
                self.filenames = filenames
            }
            internal enum CodingKeys: String, CodingKey {
                case filenames
            }
        }
        /// - Remark: Generated from `#/components/schemas/FileChecksumResponseDto`.
        internal struct FileChecksumResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/FileChecksumResponseDto/checksum`.
            internal var checksum: Swift.String
            /// - Remark: Generated from `#/components/schemas/FileChecksumResponseDto/filename`.
            internal var filename: Swift.String
            /// Creates a new `FileChecksumResponseDto`.
            ///
            /// - Parameters:
            ///   - checksum:
            ///   - filename:
            internal init(
                checksum: Swift.String,
                filename: Swift.String
            ) {
                self.checksum = checksum
                self.filename = filename
            }
            internal enum CodingKeys: String, CodingKey {
                case checksum
                case filename
            }
        }
        /// - Remark: Generated from `#/components/schemas/FileReportDto`.
        internal struct FileReportDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/FileReportDto/extras`.
            internal var extras: [Swift.String]
            /// - Remark: Generated from `#/components/schemas/FileReportDto/orphans`.
            internal var orphans: [Components.Schemas.FileReportItemDto]
            /// Creates a new `FileReportDto`.
            ///
            /// - Parameters:
            ///   - extras:
            ///   - orphans:
            internal init(
                extras: [Swift.String],
                orphans: [Components.Schemas.FileReportItemDto]
            ) {
                self.extras = extras
                self.orphans = orphans
            }
            internal enum CodingKeys: String, CodingKey {
                case extras
                case orphans
            }
        }
        /// - Remark: Generated from `#/components/schemas/FileReportFixDto`.
        internal struct FileReportFixDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/FileReportFixDto/items`.
            internal var items: [Components.Schemas.FileReportItemDto]
            /// Creates a new `FileReportFixDto`.
            ///
            /// - Parameters:
            ///   - items:
            internal init(items: [Components.Schemas.FileReportItemDto]) {
                self.items = items
            }
            internal enum CodingKeys: String, CodingKey {
                case items
            }
        }
        /// - Remark: Generated from `#/components/schemas/FileReportItemDto`.
        internal struct FileReportItemDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/FileReportItemDto/checksum`.
            internal var checksum: Swift.String?
            /// - Remark: Generated from `#/components/schemas/FileReportItemDto/entityId`.
            internal var entityId: Swift.String
            /// - Remark: Generated from `#/components/schemas/FileReportItemDto/entityType`.
            internal var entityType: Components.Schemas.PathEntityType
            /// - Remark: Generated from `#/components/schemas/FileReportItemDto/pathType`.
            internal var pathType: Components.Schemas.PathType
            /// - Remark: Generated from `#/components/schemas/FileReportItemDto/pathValue`.
            internal var pathValue: Swift.String
            /// Creates a new `FileReportItemDto`.
            ///
            /// - Parameters:
            ///   - checksum:
            ///   - entityId:
            ///   - entityType:
            ///   - pathType:
            ///   - pathValue:
            internal init(
                checksum: Swift.String? = nil,
                entityId: Swift.String,
                entityType: Components.Schemas.PathEntityType,
                pathType: Components.Schemas.PathType,
                pathValue: Swift.String
            ) {
                self.checksum = checksum
                self.entityId = entityId
                self.entityType = entityType
                self.pathType = pathType
                self.pathValue = pathValue
            }
            internal enum CodingKeys: String, CodingKey {
                case checksum
                case entityId
                case entityType
                case pathType
                case pathValue
            }
        }
        /// - Remark: Generated from `#/components/schemas/ImageFormat`.
        @frozen internal enum ImageFormat: String, Codable, Hashable, Sendable {
            case jpeg = "jpeg"
            case webp = "webp"
        }
        /// - Remark: Generated from `#/components/schemas/JobCommand`.
        @frozen internal enum JobCommand: String, Codable, Hashable, Sendable {
            case start = "start"
            case pause = "pause"
            case resume = "resume"
            case empty = "empty"
            case clear_hyphen_failed = "clear-failed"
        }
        /// - Remark: Generated from `#/components/schemas/JobCommandDto`.
        internal struct JobCommandDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/JobCommandDto/command`.
            internal var command: Components.Schemas.JobCommand
            /// - Remark: Generated from `#/components/schemas/JobCommandDto/force`.
            internal var force: Swift.Bool
            /// Creates a new `JobCommandDto`.
            ///
            /// - Parameters:
            ///   - command:
            ///   - force:
            internal init(
                command: Components.Schemas.JobCommand,
                force: Swift.Bool
            ) {
                self.command = command
                self.force = force
            }
            internal enum CodingKeys: String, CodingKey {
                case command
                case force
            }
        }
        /// - Remark: Generated from `#/components/schemas/JobCountsDto`.
        internal struct JobCountsDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/JobCountsDto/active`.
            internal var active: Swift.Int
            /// - Remark: Generated from `#/components/schemas/JobCountsDto/completed`.
            internal var completed: Swift.Int
            /// - Remark: Generated from `#/components/schemas/JobCountsDto/delayed`.
            internal var delayed: Swift.Int
            /// - Remark: Generated from `#/components/schemas/JobCountsDto/failed`.
            internal var failed: Swift.Int
            /// - Remark: Generated from `#/components/schemas/JobCountsDto/paused`.
            internal var paused: Swift.Int
            /// - Remark: Generated from `#/components/schemas/JobCountsDto/waiting`.
            internal var waiting: Swift.Int
            /// Creates a new `JobCountsDto`.
            ///
            /// - Parameters:
            ///   - active:
            ///   - completed:
            ///   - delayed:
            ///   - failed:
            ///   - paused:
            ///   - waiting:
            internal init(
                active: Swift.Int,
                completed: Swift.Int,
                delayed: Swift.Int,
                failed: Swift.Int,
                paused: Swift.Int,
                waiting: Swift.Int
            ) {
                self.active = active
                self.completed = completed
                self.delayed = delayed
                self.failed = failed
                self.paused = paused
                self.waiting = waiting
            }
            internal enum CodingKeys: String, CodingKey {
                case active
                case completed
                case delayed
                case failed
                case paused
                case waiting
            }
        }
        /// - Remark: Generated from `#/components/schemas/JobName`.
        @frozen internal enum JobName: String, Codable, Hashable, Sendable {
            case thumbnailGeneration = "thumbnailGeneration"
            case metadataExtraction = "metadataExtraction"
            case videoConversion = "videoConversion"
            case faceDetection = "faceDetection"
            case facialRecognition = "facialRecognition"
            case smartSearch = "smartSearch"
            case duplicateDetection = "duplicateDetection"
            case backgroundTask = "backgroundTask"
            case storageTemplateMigration = "storageTemplateMigration"
            case migration = "migration"
            case search = "search"
            case sidecar = "sidecar"
            case library = "library"
            case notifications = "notifications"
        }
        /// - Remark: Generated from `#/components/schemas/JobSettingsDto`.
        internal struct JobSettingsDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/JobSettingsDto/concurrency`.
            internal var concurrency: Swift.Int
            /// Creates a new `JobSettingsDto`.
            ///
            /// - Parameters:
            ///   - concurrency:
            internal init(concurrency: Swift.Int) {
                self.concurrency = concurrency
            }
            internal enum CodingKeys: String, CodingKey {
                case concurrency
            }
        }
        /// - Remark: Generated from `#/components/schemas/JobStatusDto`.
        internal struct JobStatusDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/JobStatusDto/jobCounts`.
            internal var jobCounts: Components.Schemas.JobCountsDto
            /// - Remark: Generated from `#/components/schemas/JobStatusDto/queueStatus`.
            internal var queueStatus: Components.Schemas.QueueStatusDto
            /// Creates a new `JobStatusDto`.
            ///
            /// - Parameters:
            ///   - jobCounts:
            ///   - queueStatus:
            internal init(
                jobCounts: Components.Schemas.JobCountsDto,
                queueStatus: Components.Schemas.QueueStatusDto
            ) {
                self.jobCounts = jobCounts
                self.queueStatus = queueStatus
            }
            internal enum CodingKeys: String, CodingKey {
                case jobCounts
                case queueStatus
            }
        }
        /// - Remark: Generated from `#/components/schemas/LibraryResponseDto`.
        internal struct LibraryResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/LibraryResponseDto/assetCount`.
            internal var assetCount: Swift.Int
            /// - Remark: Generated from `#/components/schemas/LibraryResponseDto/createdAt`.
            internal var createdAt: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/LibraryResponseDto/exclusionPatterns`.
            internal var exclusionPatterns: [Swift.String]
            /// - Remark: Generated from `#/components/schemas/LibraryResponseDto/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/LibraryResponseDto/importPaths`.
            internal var importPaths: [Swift.String]
            /// - Remark: Generated from `#/components/schemas/LibraryResponseDto/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/LibraryResponseDto/ownerId`.
            internal var ownerId: Swift.String
            /// - Remark: Generated from `#/components/schemas/LibraryResponseDto/refreshedAt`.
            internal var refreshedAt: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/LibraryResponseDto/updatedAt`.
            internal var updatedAt: Foundation.Date
            /// Creates a new `LibraryResponseDto`.
            ///
            /// - Parameters:
            ///   - assetCount:
            ///   - createdAt:
            ///   - exclusionPatterns:
            ///   - id:
            ///   - importPaths:
            ///   - name:
            ///   - ownerId:
            ///   - refreshedAt:
            ///   - updatedAt:
            internal init(
                assetCount: Swift.Int,
                createdAt: Foundation.Date,
                exclusionPatterns: [Swift.String],
                id: Swift.String,
                importPaths: [Swift.String],
                name: Swift.String,
                ownerId: Swift.String,
                refreshedAt: Foundation.Date? = nil,
                updatedAt: Foundation.Date
            ) {
                self.assetCount = assetCount
                self.createdAt = createdAt
                self.exclusionPatterns = exclusionPatterns
                self.id = id
                self.importPaths = importPaths
                self.name = name
                self.ownerId = ownerId
                self.refreshedAt = refreshedAt
                self.updatedAt = updatedAt
            }
            internal enum CodingKeys: String, CodingKey {
                case assetCount
                case createdAt
                case exclusionPatterns
                case id
                case importPaths
                case name
                case ownerId
                case refreshedAt
                case updatedAt
            }
        }
        /// - Remark: Generated from `#/components/schemas/LibraryStatsResponseDto`.
        internal struct LibraryStatsResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/LibraryStatsResponseDto/photos`.
            internal var photos: Swift.Int
            /// - Remark: Generated from `#/components/schemas/LibraryStatsResponseDto/total`.
            internal var total: Swift.Int
            /// - Remark: Generated from `#/components/schemas/LibraryStatsResponseDto/usage`.
            internal var usage: Swift.Int64
            /// - Remark: Generated from `#/components/schemas/LibraryStatsResponseDto/videos`.
            internal var videos: Swift.Int
            /// Creates a new `LibraryStatsResponseDto`.
            ///
            /// - Parameters:
            ///   - photos:
            ///   - total:
            ///   - usage:
            ///   - videos:
            internal init(
                photos: Swift.Int,
                total: Swift.Int,
                usage: Swift.Int64,
                videos: Swift.Int
            ) {
                self.photos = photos
                self.total = total
                self.usage = usage
                self.videos = videos
            }
            internal enum CodingKeys: String, CodingKey {
                case photos
                case total
                case usage
                case videos
            }
        }
        /// - Remark: Generated from `#/components/schemas/LogLevel`.
        @frozen internal enum LogLevel: String, Codable, Hashable, Sendable {
            case verbose = "verbose"
            case debug = "debug"
            case log = "log"
            case warn = "warn"
            case error = "error"
            case fatal = "fatal"
        }
        /// - Remark: Generated from `#/components/schemas/LoginCredentialDto`.
        internal struct LoginCredentialDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/LoginCredentialDto/email`.
            internal var email: Swift.String
            /// - Remark: Generated from `#/components/schemas/LoginCredentialDto/password`.
            internal var password: Swift.String
            /// Creates a new `LoginCredentialDto`.
            ///
            /// - Parameters:
            ///   - email:
            ///   - password:
            internal init(
                email: Swift.String,
                password: Swift.String
            ) {
                self.email = email
                self.password = password
            }
            internal enum CodingKeys: String, CodingKey {
                case email
                case password
            }
        }
        /// - Remark: Generated from `#/components/schemas/LoginResponseDto`.
        internal struct LoginResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/LoginResponseDto/accessToken`.
            internal var accessToken: Swift.String
            /// - Remark: Generated from `#/components/schemas/LoginResponseDto/isAdmin`.
            internal var isAdmin: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/LoginResponseDto/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/LoginResponseDto/profileImagePath`.
            internal var profileImagePath: Swift.String
            /// - Remark: Generated from `#/components/schemas/LoginResponseDto/shouldChangePassword`.
            internal var shouldChangePassword: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/LoginResponseDto/userEmail`.
            internal var userEmail: Swift.String
            /// - Remark: Generated from `#/components/schemas/LoginResponseDto/userId`.
            internal var userId: Swift.String
            /// Creates a new `LoginResponseDto`.
            ///
            /// - Parameters:
            ///   - accessToken:
            ///   - isAdmin:
            ///   - name:
            ///   - profileImagePath:
            ///   - shouldChangePassword:
            ///   - userEmail:
            ///   - userId:
            internal init(
                accessToken: Swift.String,
                isAdmin: Swift.Bool,
                name: Swift.String,
                profileImagePath: Swift.String,
                shouldChangePassword: Swift.Bool,
                userEmail: Swift.String,
                userId: Swift.String
            ) {
                self.accessToken = accessToken
                self.isAdmin = isAdmin
                self.name = name
                self.profileImagePath = profileImagePath
                self.shouldChangePassword = shouldChangePassword
                self.userEmail = userEmail
                self.userId = userId
            }
            internal enum CodingKeys: String, CodingKey {
                case accessToken
                case isAdmin
                case name
                case profileImagePath
                case shouldChangePassword
                case userEmail
                case userId
            }
        }
        /// - Remark: Generated from `#/components/schemas/LogoutResponseDto`.
        internal struct LogoutResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/LogoutResponseDto/redirectUri`.
            internal var redirectUri: Swift.String
            /// - Remark: Generated from `#/components/schemas/LogoutResponseDto/successful`.
            internal var successful: Swift.Bool
            /// Creates a new `LogoutResponseDto`.
            ///
            /// - Parameters:
            ///   - redirectUri:
            ///   - successful:
            internal init(
                redirectUri: Swift.String,
                successful: Swift.Bool
            ) {
                self.redirectUri = redirectUri
                self.successful = successful
            }
            internal enum CodingKeys: String, CodingKey {
                case redirectUri
                case successful
            }
        }
        /// - Remark: Generated from `#/components/schemas/MapMarkerResponseDto`.
        internal struct MapMarkerResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/MapMarkerResponseDto/city`.
            internal var city: Swift.String?
            /// - Remark: Generated from `#/components/schemas/MapMarkerResponseDto/country`.
            internal var country: Swift.String?
            /// - Remark: Generated from `#/components/schemas/MapMarkerResponseDto/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/MapMarkerResponseDto/lat`.
            internal var lat: Swift.Double
            /// - Remark: Generated from `#/components/schemas/MapMarkerResponseDto/lon`.
            internal var lon: Swift.Double
            /// - Remark: Generated from `#/components/schemas/MapMarkerResponseDto/state`.
            internal var state: Swift.String?
            /// Creates a new `MapMarkerResponseDto`.
            ///
            /// - Parameters:
            ///   - city:
            ///   - country:
            ///   - id:
            ///   - lat:
            ///   - lon:
            ///   - state:
            internal init(
                city: Swift.String? = nil,
                country: Swift.String? = nil,
                id: Swift.String,
                lat: Swift.Double,
                lon: Swift.Double,
                state: Swift.String? = nil
            ) {
                self.city = city
                self.country = country
                self.id = id
                self.lat = lat
                self.lon = lon
                self.state = state
            }
            internal enum CodingKeys: String, CodingKey {
                case city
                case country
                case id
                case lat
                case lon
                case state
            }
        }
        /// - Remark: Generated from `#/components/schemas/MapTheme`.
        @frozen internal enum MapTheme: String, Codable, Hashable, Sendable {
            case light = "light"
            case dark = "dark"
        }
        /// - Remark: Generated from `#/components/schemas/MemoryCreateDto`.
        internal struct MemoryCreateDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/MemoryCreateDto/assetIds`.
            internal var assetIds: [Swift.String]?
            /// - Remark: Generated from `#/components/schemas/MemoryCreateDto/data`.
            internal var data: Components.Schemas.OnThisDayDto
            /// - Remark: Generated from `#/components/schemas/MemoryCreateDto/isSaved`.
            internal var isSaved: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/MemoryCreateDto/memoryAt`.
            internal var memoryAt: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/MemoryCreateDto/seenAt`.
            internal var seenAt: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/MemoryCreateDto/type`.
            internal var _type: Components.Schemas.MemoryType
            /// Creates a new `MemoryCreateDto`.
            ///
            /// - Parameters:
            ///   - assetIds:
            ///   - data:
            ///   - isSaved:
            ///   - memoryAt:
            ///   - seenAt:
            ///   - _type:
            internal init(
                assetIds: [Swift.String]? = nil,
                data: Components.Schemas.OnThisDayDto,
                isSaved: Swift.Bool? = nil,
                memoryAt: Foundation.Date,
                seenAt: Foundation.Date? = nil,
                _type: Components.Schemas.MemoryType
            ) {
                self.assetIds = assetIds
                self.data = data
                self.isSaved = isSaved
                self.memoryAt = memoryAt
                self.seenAt = seenAt
                self._type = _type
            }
            internal enum CodingKeys: String, CodingKey {
                case assetIds
                case data
                case isSaved
                case memoryAt
                case seenAt
                case _type = "type"
            }
        }
        /// - Remark: Generated from `#/components/schemas/MemoryLaneResponseDto`.
        internal struct MemoryLaneResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/MemoryLaneResponseDto/assets`.
            internal var assets: [Components.Schemas.AssetResponseDto]
            /// - Remark: Generated from `#/components/schemas/MemoryLaneResponseDto/yearsAgo`.
            internal var yearsAgo: Swift.Int
            /// Creates a new `MemoryLaneResponseDto`.
            ///
            /// - Parameters:
            ///   - assets:
            ///   - yearsAgo:
            internal init(
                assets: [Components.Schemas.AssetResponseDto],
                yearsAgo: Swift.Int
            ) {
                self.assets = assets
                self.yearsAgo = yearsAgo
            }
            internal enum CodingKeys: String, CodingKey {
                case assets
                case yearsAgo
            }
        }
        /// - Remark: Generated from `#/components/schemas/MemoryResponse`.
        internal struct MemoryResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/MemoryResponse/enabled`.
            internal var enabled: Swift.Bool
            /// Creates a new `MemoryResponse`.
            ///
            /// - Parameters:
            ///   - enabled:
            internal init(enabled: Swift.Bool) {
                self.enabled = enabled
            }
            internal enum CodingKeys: String, CodingKey {
                case enabled
            }
        }
        /// - Remark: Generated from `#/components/schemas/MemoryResponseDto`.
        internal struct MemoryResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/MemoryResponseDto/assets`.
            internal var assets: [Components.Schemas.AssetResponseDto]
            /// - Remark: Generated from `#/components/schemas/MemoryResponseDto/createdAt`.
            internal var createdAt: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/MemoryResponseDto/data`.
            internal var data: Components.Schemas.OnThisDayDto
            /// - Remark: Generated from `#/components/schemas/MemoryResponseDto/deletedAt`.
            internal var deletedAt: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/MemoryResponseDto/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/MemoryResponseDto/isSaved`.
            internal var isSaved: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/MemoryResponseDto/memoryAt`.
            internal var memoryAt: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/MemoryResponseDto/ownerId`.
            internal var ownerId: Swift.String
            /// - Remark: Generated from `#/components/schemas/MemoryResponseDto/seenAt`.
            internal var seenAt: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/MemoryResponseDto/type`.
            @frozen internal enum _typePayload: String, Codable, Hashable, Sendable {
                case on_this_day = "on_this_day"
            }
            /// - Remark: Generated from `#/components/schemas/MemoryResponseDto/type`.
            internal var _type: Components.Schemas.MemoryResponseDto._typePayload
            /// - Remark: Generated from `#/components/schemas/MemoryResponseDto/updatedAt`.
            internal var updatedAt: Foundation.Date
            /// Creates a new `MemoryResponseDto`.
            ///
            /// - Parameters:
            ///   - assets:
            ///   - createdAt:
            ///   - data:
            ///   - deletedAt:
            ///   - id:
            ///   - isSaved:
            ///   - memoryAt:
            ///   - ownerId:
            ///   - seenAt:
            ///   - _type:
            ///   - updatedAt:
            internal init(
                assets: [Components.Schemas.AssetResponseDto],
                createdAt: Foundation.Date,
                data: Components.Schemas.OnThisDayDto,
                deletedAt: Foundation.Date? = nil,
                id: Swift.String,
                isSaved: Swift.Bool,
                memoryAt: Foundation.Date,
                ownerId: Swift.String,
                seenAt: Foundation.Date? = nil,
                _type: Components.Schemas.MemoryResponseDto._typePayload,
                updatedAt: Foundation.Date
            ) {
                self.assets = assets
                self.createdAt = createdAt
                self.data = data
                self.deletedAt = deletedAt
                self.id = id
                self.isSaved = isSaved
                self.memoryAt = memoryAt
                self.ownerId = ownerId
                self.seenAt = seenAt
                self._type = _type
                self.updatedAt = updatedAt
            }
            internal enum CodingKeys: String, CodingKey {
                case assets
                case createdAt
                case data
                case deletedAt
                case id
                case isSaved
                case memoryAt
                case ownerId
                case seenAt
                case _type = "type"
                case updatedAt
            }
        }
        /// - Remark: Generated from `#/components/schemas/MemoryType`.
        @frozen internal enum MemoryType: String, Codable, Hashable, Sendable {
            case on_this_day = "on_this_day"
        }
        /// - Remark: Generated from `#/components/schemas/MemoryUpdate`.
        internal struct MemoryUpdate: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/MemoryUpdate/enabled`.
            internal var enabled: Swift.Bool?
            /// Creates a new `MemoryUpdate`.
            ///
            /// - Parameters:
            ///   - enabled:
            internal init(enabled: Swift.Bool? = nil) {
                self.enabled = enabled
            }
            internal enum CodingKeys: String, CodingKey {
                case enabled
            }
        }
        /// - Remark: Generated from `#/components/schemas/MemoryUpdateDto`.
        internal struct MemoryUpdateDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/MemoryUpdateDto/isSaved`.
            internal var isSaved: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/MemoryUpdateDto/memoryAt`.
            internal var memoryAt: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/MemoryUpdateDto/seenAt`.
            internal var seenAt: Foundation.Date?
            /// Creates a new `MemoryUpdateDto`.
            ///
            /// - Parameters:
            ///   - isSaved:
            ///   - memoryAt:
            ///   - seenAt:
            internal init(
                isSaved: Swift.Bool? = nil,
                memoryAt: Foundation.Date? = nil,
                seenAt: Foundation.Date? = nil
            ) {
                self.isSaved = isSaved
                self.memoryAt = memoryAt
                self.seenAt = seenAt
            }
            internal enum CodingKeys: String, CodingKey {
                case isSaved
                case memoryAt
                case seenAt
            }
        }
        /// - Remark: Generated from `#/components/schemas/MergePersonDto`.
        internal struct MergePersonDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/MergePersonDto/ids`.
            internal var ids: [Swift.String]
            /// Creates a new `MergePersonDto`.
            ///
            /// - Parameters:
            ///   - ids:
            internal init(ids: [Swift.String]) {
                self.ids = ids
            }
            internal enum CodingKeys: String, CodingKey {
                case ids
            }
        }
        /// - Remark: Generated from `#/components/schemas/MetadataSearchDto`.
        internal struct MetadataSearchDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/checksum`.
            internal var checksum: Swift.String?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/city`.
            internal var city: Swift.String?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/country`.
            internal var country: Swift.String?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/createdAfter`.
            internal var createdAfter: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/createdBefore`.
            internal var createdBefore: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/deviceAssetId`.
            internal var deviceAssetId: Swift.String?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/deviceId`.
            internal var deviceId: Swift.String?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/encodedVideoPath`.
            internal var encodedVideoPath: Swift.String?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/id`.
            internal var id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/isArchived`.
            internal var isArchived: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/isEncoded`.
            internal var isEncoded: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/isFavorite`.
            internal var isFavorite: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/isMotion`.
            internal var isMotion: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/isNotInAlbum`.
            internal var isNotInAlbum: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/isOffline`.
            internal var isOffline: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/isVisible`.
            internal var isVisible: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/lensModel`.
            internal var lensModel: Swift.String?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/libraryId`.
            internal var libraryId: Swift.String?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/make`.
            internal var make: Swift.String?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/model`.
            internal var model: Swift.String?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/order`.
            internal var order: Components.Schemas.AssetOrder?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/originalFileName`.
            internal var originalFileName: Swift.String?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/originalPath`.
            internal var originalPath: Swift.String?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/page`.
            internal var page: Swift.Double?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/personIds`.
            internal var personIds: [Swift.String]?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/previewPath`.
            internal var previewPath: Swift.String?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/size`.
            internal var size: Swift.Double?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/state`.
            internal var state: Swift.String?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/takenAfter`.
            internal var takenAfter: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/takenBefore`.
            internal var takenBefore: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/thumbnailPath`.
            internal var thumbnailPath: Swift.String?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/trashedAfter`.
            internal var trashedAfter: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/trashedBefore`.
            internal var trashedBefore: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/type`.
            internal var _type: Components.Schemas.AssetTypeEnum?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/updatedAfter`.
            internal var updatedAfter: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/updatedBefore`.
            internal var updatedBefore: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/withArchived`.
            internal var withArchived: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/withDeleted`.
            internal var withDeleted: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/withExif`.
            internal var withExif: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/withPeople`.
            internal var withPeople: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/MetadataSearchDto/withStacked`.
            internal var withStacked: Swift.Bool?
            /// Creates a new `MetadataSearchDto`.
            ///
            /// - Parameters:
            ///   - checksum:
            ///   - city:
            ///   - country:
            ///   - createdAfter:
            ///   - createdBefore:
            ///   - deviceAssetId:
            ///   - deviceId:
            ///   - encodedVideoPath:
            ///   - id:
            ///   - isArchived:
            ///   - isEncoded:
            ///   - isFavorite:
            ///   - isMotion:
            ///   - isNotInAlbum:
            ///   - isOffline:
            ///   - isVisible:
            ///   - lensModel:
            ///   - libraryId:
            ///   - make:
            ///   - model:
            ///   - order:
            ///   - originalFileName:
            ///   - originalPath:
            ///   - page:
            ///   - personIds:
            ///   - previewPath:
            ///   - size:
            ///   - state:
            ///   - takenAfter:
            ///   - takenBefore:
            ///   - thumbnailPath:
            ///   - trashedAfter:
            ///   - trashedBefore:
            ///   - _type:
            ///   - updatedAfter:
            ///   - updatedBefore:
            ///   - withArchived:
            ///   - withDeleted:
            ///   - withExif:
            ///   - withPeople:
            ///   - withStacked:
            internal init(
                checksum: Swift.String? = nil,
                city: Swift.String? = nil,
                country: Swift.String? = nil,
                createdAfter: Foundation.Date? = nil,
                createdBefore: Foundation.Date? = nil,
                deviceAssetId: Swift.String? = nil,
                deviceId: Swift.String? = nil,
                encodedVideoPath: Swift.String? = nil,
                id: Swift.String? = nil,
                isArchived: Swift.Bool? = nil,
                isEncoded: Swift.Bool? = nil,
                isFavorite: Swift.Bool? = nil,
                isMotion: Swift.Bool? = nil,
                isNotInAlbum: Swift.Bool? = nil,
                isOffline: Swift.Bool? = nil,
                isVisible: Swift.Bool? = nil,
                lensModel: Swift.String? = nil,
                libraryId: Swift.String? = nil,
                make: Swift.String? = nil,
                model: Swift.String? = nil,
                order: Components.Schemas.AssetOrder? = nil,
                originalFileName: Swift.String? = nil,
                originalPath: Swift.String? = nil,
                page: Swift.Double? = nil,
                personIds: [Swift.String]? = nil,
                previewPath: Swift.String? = nil,
                size: Swift.Double? = nil,
                state: Swift.String? = nil,
                takenAfter: Foundation.Date? = nil,
                takenBefore: Foundation.Date? = nil,
                thumbnailPath: Swift.String? = nil,
                trashedAfter: Foundation.Date? = nil,
                trashedBefore: Foundation.Date? = nil,
                _type: Components.Schemas.AssetTypeEnum? = nil,
                updatedAfter: Foundation.Date? = nil,
                updatedBefore: Foundation.Date? = nil,
                withArchived: Swift.Bool? = nil,
                withDeleted: Swift.Bool? = nil,
                withExif: Swift.Bool? = nil,
                withPeople: Swift.Bool? = nil,
                withStacked: Swift.Bool? = nil
            ) {
                self.checksum = checksum
                self.city = city
                self.country = country
                self.createdAfter = createdAfter
                self.createdBefore = createdBefore
                self.deviceAssetId = deviceAssetId
                self.deviceId = deviceId
                self.encodedVideoPath = encodedVideoPath
                self.id = id
                self.isArchived = isArchived
                self.isEncoded = isEncoded
                self.isFavorite = isFavorite
                self.isMotion = isMotion
                self.isNotInAlbum = isNotInAlbum
                self.isOffline = isOffline
                self.isVisible = isVisible
                self.lensModel = lensModel
                self.libraryId = libraryId
                self.make = make
                self.model = model
                self.order = order
                self.originalFileName = originalFileName
                self.originalPath = originalPath
                self.page = page
                self.personIds = personIds
                self.previewPath = previewPath
                self.size = size
                self.state = state
                self.takenAfter = takenAfter
                self.takenBefore = takenBefore
                self.thumbnailPath = thumbnailPath
                self.trashedAfter = trashedAfter
                self.trashedBefore = trashedBefore
                self._type = _type
                self.updatedAfter = updatedAfter
                self.updatedBefore = updatedBefore
                self.withArchived = withArchived
                self.withDeleted = withDeleted
                self.withExif = withExif
                self.withPeople = withPeople
                self.withStacked = withStacked
            }
            internal enum CodingKeys: String, CodingKey {
                case checksum
                case city
                case country
                case createdAfter
                case createdBefore
                case deviceAssetId
                case deviceId
                case encodedVideoPath
                case id
                case isArchived
                case isEncoded
                case isFavorite
                case isMotion
                case isNotInAlbum
                case isOffline
                case isVisible
                case lensModel
                case libraryId
                case make
                case model
                case order
                case originalFileName
                case originalPath
                case page
                case personIds
                case previewPath
                case size
                case state
                case takenAfter
                case takenBefore
                case thumbnailPath
                case trashedAfter
                case trashedBefore
                case _type = "type"
                case updatedAfter
                case updatedBefore
                case withArchived
                case withDeleted
                case withExif
                case withPeople
                case withStacked
            }
        }
        /// - Remark: Generated from `#/components/schemas/OAuthAuthorizeResponseDto`.
        internal struct OAuthAuthorizeResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/OAuthAuthorizeResponseDto/url`.
            internal var url: Swift.String
            /// Creates a new `OAuthAuthorizeResponseDto`.
            ///
            /// - Parameters:
            ///   - url:
            internal init(url: Swift.String) {
                self.url = url
            }
            internal enum CodingKeys: String, CodingKey {
                case url
            }
        }
        /// - Remark: Generated from `#/components/schemas/OAuthCallbackDto`.
        internal struct OAuthCallbackDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/OAuthCallbackDto/url`.
            internal var url: Swift.String
            /// Creates a new `OAuthCallbackDto`.
            ///
            /// - Parameters:
            ///   - url:
            internal init(url: Swift.String) {
                self.url = url
            }
            internal enum CodingKeys: String, CodingKey {
                case url
            }
        }
        /// - Remark: Generated from `#/components/schemas/OAuthConfigDto`.
        internal struct OAuthConfigDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/OAuthConfigDto/redirectUri`.
            internal var redirectUri: Swift.String
            /// Creates a new `OAuthConfigDto`.
            ///
            /// - Parameters:
            ///   - redirectUri:
            internal init(redirectUri: Swift.String) {
                self.redirectUri = redirectUri
            }
            internal enum CodingKeys: String, CodingKey {
                case redirectUri
            }
        }
        /// - Remark: Generated from `#/components/schemas/OnThisDayDto`.
        internal struct OnThisDayDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/OnThisDayDto/year`.
            internal var year: Swift.Double
            /// Creates a new `OnThisDayDto`.
            ///
            /// - Parameters:
            ///   - year:
            internal init(year: Swift.Double) {
                self.year = year
            }
            internal enum CodingKeys: String, CodingKey {
                case year
            }
        }
        /// - Remark: Generated from `#/components/schemas/PartnerResponseDto`.
        internal struct PartnerResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/PartnerResponseDto/avatarColor`.
            internal var avatarColor: Components.Schemas.UserAvatarColor
            /// - Remark: Generated from `#/components/schemas/PartnerResponseDto/email`.
            internal var email: Swift.String
            /// - Remark: Generated from `#/components/schemas/PartnerResponseDto/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/PartnerResponseDto/inTimeline`.
            internal var inTimeline: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/PartnerResponseDto/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/PartnerResponseDto/profileImagePath`.
            internal var profileImagePath: Swift.String
            /// Creates a new `PartnerResponseDto`.
            ///
            /// - Parameters:
            ///   - avatarColor:
            ///   - email:
            ///   - id:
            ///   - inTimeline:
            ///   - name:
            ///   - profileImagePath:
            internal init(
                avatarColor: Components.Schemas.UserAvatarColor,
                email: Swift.String,
                id: Swift.String,
                inTimeline: Swift.Bool? = nil,
                name: Swift.String,
                profileImagePath: Swift.String
            ) {
                self.avatarColor = avatarColor
                self.email = email
                self.id = id
                self.inTimeline = inTimeline
                self.name = name
                self.profileImagePath = profileImagePath
            }
            internal enum CodingKeys: String, CodingKey {
                case avatarColor
                case email
                case id
                case inTimeline
                case name
                case profileImagePath
            }
        }
        /// - Remark: Generated from `#/components/schemas/PathEntityType`.
        @frozen internal enum PathEntityType: String, Codable, Hashable, Sendable {
            case asset = "asset"
            case person = "person"
            case user = "user"
        }
        /// - Remark: Generated from `#/components/schemas/PathType`.
        @frozen internal enum PathType: String, Codable, Hashable, Sendable {
            case original = "original"
            case preview = "preview"
            case thumbnail = "thumbnail"
            case encoded_video = "encoded_video"
            case sidecar = "sidecar"
            case face = "face"
            case profile = "profile"
        }
        /// - Remark: Generated from `#/components/schemas/PeopleResponseDto`.
        internal struct PeopleResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/PeopleResponseDto/hidden`.
            internal var hidden: Swift.Int
            /// - Remark: Generated from `#/components/schemas/PeopleResponseDto/people`.
            internal var people: [Components.Schemas.PersonResponseDto]
            /// - Remark: Generated from `#/components/schemas/PeopleResponseDto/total`.
            internal var total: Swift.Int
            /// Creates a new `PeopleResponseDto`.
            ///
            /// - Parameters:
            ///   - hidden:
            ///   - people:
            ///   - total:
            internal init(
                hidden: Swift.Int,
                people: [Components.Schemas.PersonResponseDto],
                total: Swift.Int
            ) {
                self.hidden = hidden
                self.people = people
                self.total = total
            }
            internal enum CodingKeys: String, CodingKey {
                case hidden
                case people
                case total
            }
        }
        /// - Remark: Generated from `#/components/schemas/PeopleUpdateDto`.
        internal struct PeopleUpdateDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/PeopleUpdateDto/people`.
            internal var people: [Components.Schemas.PeopleUpdateItem]
            /// Creates a new `PeopleUpdateDto`.
            ///
            /// - Parameters:
            ///   - people:
            internal init(people: [Components.Schemas.PeopleUpdateItem]) {
                self.people = people
            }
            internal enum CodingKeys: String, CodingKey {
                case people
            }
        }
        /// - Remark: Generated from `#/components/schemas/PeopleUpdateItem`.
        internal struct PeopleUpdateItem: Codable, Hashable, Sendable {
            /// Person date of birth.
            /// Note: the mobile app cannot currently set the birth date to null.
            ///
            /// - Remark: Generated from `#/components/schemas/PeopleUpdateItem/birthDate`.
            internal var birthDate: Swift.String?
            /// Asset is used to get the feature face thumbnail.
            ///
            /// - Remark: Generated from `#/components/schemas/PeopleUpdateItem/featureFaceAssetId`.
            internal var featureFaceAssetId: Swift.String?
            /// Person id.
            ///
            /// - Remark: Generated from `#/components/schemas/PeopleUpdateItem/id`.
            internal var id: Swift.String
            /// Person visibility
            ///
            /// - Remark: Generated from `#/components/schemas/PeopleUpdateItem/isHidden`.
            internal var isHidden: Swift.Bool?
            /// Person name.
            ///
            /// - Remark: Generated from `#/components/schemas/PeopleUpdateItem/name`.
            internal var name: Swift.String?
            /// Creates a new `PeopleUpdateItem`.
            ///
            /// - Parameters:
            ///   - birthDate: Person date of birth.
            ///   - featureFaceAssetId: Asset is used to get the feature face thumbnail.
            ///   - id: Person id.
            ///   - isHidden: Person visibility
            ///   - name: Person name.
            internal init(
                birthDate: Swift.String? = nil,
                featureFaceAssetId: Swift.String? = nil,
                id: Swift.String,
                isHidden: Swift.Bool? = nil,
                name: Swift.String? = nil
            ) {
                self.birthDate = birthDate
                self.featureFaceAssetId = featureFaceAssetId
                self.id = id
                self.isHidden = isHidden
                self.name = name
            }
            internal enum CodingKeys: String, CodingKey {
                case birthDate
                case featureFaceAssetId
                case id
                case isHidden
                case name
            }
        }
        /// - Remark: Generated from `#/components/schemas/PersonCreateDto`.
        internal struct PersonCreateDto: Codable, Hashable, Sendable {
            /// Person date of birth.
            /// Note: the mobile app cannot currently set the birth date to null.
            ///
            /// - Remark: Generated from `#/components/schemas/PersonCreateDto/birthDate`.
            internal var birthDate: Swift.String?
            /// Person visibility
            ///
            /// - Remark: Generated from `#/components/schemas/PersonCreateDto/isHidden`.
            internal var isHidden: Swift.Bool?
            /// Person name.
            ///
            /// - Remark: Generated from `#/components/schemas/PersonCreateDto/name`.
            internal var name: Swift.String?
            /// Creates a new `PersonCreateDto`.
            ///
            /// - Parameters:
            ///   - birthDate: Person date of birth.
            ///   - isHidden: Person visibility
            ///   - name: Person name.
            internal init(
                birthDate: Swift.String? = nil,
                isHidden: Swift.Bool? = nil,
                name: Swift.String? = nil
            ) {
                self.birthDate = birthDate
                self.isHidden = isHidden
                self.name = name
            }
            internal enum CodingKeys: String, CodingKey {
                case birthDate
                case isHidden
                case name
            }
        }
        /// - Remark: Generated from `#/components/schemas/PersonResponseDto`.
        internal struct PersonResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/PersonResponseDto/birthDate`.
            internal var birthDate: Swift.String?
            /// - Remark: Generated from `#/components/schemas/PersonResponseDto/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/PersonResponseDto/isHidden`.
            internal var isHidden: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/PersonResponseDto/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/PersonResponseDto/thumbnailPath`.
            internal var thumbnailPath: Swift.String
            /// This property was added in v1.107.0
            ///
            /// - Remark: Generated from `#/components/schemas/PersonResponseDto/updatedAt`.
            internal var updatedAt: Foundation.Date?
            /// Creates a new `PersonResponseDto`.
            ///
            /// - Parameters:
            ///   - birthDate:
            ///   - id:
            ///   - isHidden:
            ///   - name:
            ///   - thumbnailPath:
            ///   - updatedAt: This property was added in v1.107.0
            internal init(
                birthDate: Swift.String? = nil,
                id: Swift.String,
                isHidden: Swift.Bool,
                name: Swift.String,
                thumbnailPath: Swift.String,
                updatedAt: Foundation.Date? = nil
            ) {
                self.birthDate = birthDate
                self.id = id
                self.isHidden = isHidden
                self.name = name
                self.thumbnailPath = thumbnailPath
                self.updatedAt = updatedAt
            }
            internal enum CodingKeys: String, CodingKey {
                case birthDate
                case id
                case isHidden
                case name
                case thumbnailPath
                case updatedAt
            }
        }
        /// - Remark: Generated from `#/components/schemas/PersonStatisticsResponseDto`.
        internal struct PersonStatisticsResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/PersonStatisticsResponseDto/assets`.
            internal var assets: Swift.Int
            /// Creates a new `PersonStatisticsResponseDto`.
            ///
            /// - Parameters:
            ///   - assets:
            internal init(assets: Swift.Int) {
                self.assets = assets
            }
            internal enum CodingKeys: String, CodingKey {
                case assets
            }
        }
        /// - Remark: Generated from `#/components/schemas/PersonUpdateDto`.
        internal struct PersonUpdateDto: Codable, Hashable, Sendable {
            /// Person date of birth.
            /// Note: the mobile app cannot currently set the birth date to null.
            ///
            /// - Remark: Generated from `#/components/schemas/PersonUpdateDto/birthDate`.
            internal var birthDate: Swift.String?
            /// Asset is used to get the feature face thumbnail.
            ///
            /// - Remark: Generated from `#/components/schemas/PersonUpdateDto/featureFaceAssetId`.
            internal var featureFaceAssetId: Swift.String?
            /// Person visibility
            ///
            /// - Remark: Generated from `#/components/schemas/PersonUpdateDto/isHidden`.
            internal var isHidden: Swift.Bool?
            /// Person name.
            ///
            /// - Remark: Generated from `#/components/schemas/PersonUpdateDto/name`.
            internal var name: Swift.String?
            /// Creates a new `PersonUpdateDto`.
            ///
            /// - Parameters:
            ///   - birthDate: Person date of birth.
            ///   - featureFaceAssetId: Asset is used to get the feature face thumbnail.
            ///   - isHidden: Person visibility
            ///   - name: Person name.
            internal init(
                birthDate: Swift.String? = nil,
                featureFaceAssetId: Swift.String? = nil,
                isHidden: Swift.Bool? = nil,
                name: Swift.String? = nil
            ) {
                self.birthDate = birthDate
                self.featureFaceAssetId = featureFaceAssetId
                self.isHidden = isHidden
                self.name = name
            }
            internal enum CodingKeys: String, CodingKey {
                case birthDate
                case featureFaceAssetId
                case isHidden
                case name
            }
        }
        /// - Remark: Generated from `#/components/schemas/PersonWithFacesResponseDto`.
        internal struct PersonWithFacesResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/PersonWithFacesResponseDto/birthDate`.
            internal var birthDate: Swift.String?
            /// - Remark: Generated from `#/components/schemas/PersonWithFacesResponseDto/faces`.
            internal var faces: [Components.Schemas.AssetFaceWithoutPersonResponseDto]
            /// - Remark: Generated from `#/components/schemas/PersonWithFacesResponseDto/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/PersonWithFacesResponseDto/isHidden`.
            internal var isHidden: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/PersonWithFacesResponseDto/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/PersonWithFacesResponseDto/thumbnailPath`.
            internal var thumbnailPath: Swift.String
            /// This property was added in v1.107.0
            ///
            /// - Remark: Generated from `#/components/schemas/PersonWithFacesResponseDto/updatedAt`.
            internal var updatedAt: Foundation.Date?
            /// Creates a new `PersonWithFacesResponseDto`.
            ///
            /// - Parameters:
            ///   - birthDate:
            ///   - faces:
            ///   - id:
            ///   - isHidden:
            ///   - name:
            ///   - thumbnailPath:
            ///   - updatedAt: This property was added in v1.107.0
            internal init(
                birthDate: Swift.String? = nil,
                faces: [Components.Schemas.AssetFaceWithoutPersonResponseDto],
                id: Swift.String,
                isHidden: Swift.Bool,
                name: Swift.String,
                thumbnailPath: Swift.String,
                updatedAt: Foundation.Date? = nil
            ) {
                self.birthDate = birthDate
                self.faces = faces
                self.id = id
                self.isHidden = isHidden
                self.name = name
                self.thumbnailPath = thumbnailPath
                self.updatedAt = updatedAt
            }
            internal enum CodingKeys: String, CodingKey {
                case birthDate
                case faces
                case id
                case isHidden
                case name
                case thumbnailPath
                case updatedAt
            }
        }
        /// - Remark: Generated from `#/components/schemas/PlacesResponseDto`.
        internal struct PlacesResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/PlacesResponseDto/admin1name`.
            internal var admin1name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/PlacesResponseDto/admin2name`.
            internal var admin2name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/PlacesResponseDto/latitude`.
            internal var latitude: Swift.Double
            /// - Remark: Generated from `#/components/schemas/PlacesResponseDto/longitude`.
            internal var longitude: Swift.Double
            /// - Remark: Generated from `#/components/schemas/PlacesResponseDto/name`.
            internal var name: Swift.String
            /// Creates a new `PlacesResponseDto`.
            ///
            /// - Parameters:
            ///   - admin1name:
            ///   - admin2name:
            ///   - latitude:
            ///   - longitude:
            ///   - name:
            internal init(
                admin1name: Swift.String? = nil,
                admin2name: Swift.String? = nil,
                latitude: Swift.Double,
                longitude: Swift.Double,
                name: Swift.String
            ) {
                self.admin1name = admin1name
                self.admin2name = admin2name
                self.latitude = latitude
                self.longitude = longitude
                self.name = name
            }
            internal enum CodingKeys: String, CodingKey {
                case admin1name
                case admin2name
                case latitude
                case longitude
                case name
            }
        }
        /// - Remark: Generated from `#/components/schemas/QueueStatusDto`.
        internal struct QueueStatusDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/QueueStatusDto/isActive`.
            internal var isActive: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/QueueStatusDto/isPaused`.
            internal var isPaused: Swift.Bool
            /// Creates a new `QueueStatusDto`.
            ///
            /// - Parameters:
            ///   - isActive:
            ///   - isPaused:
            internal init(
                isActive: Swift.Bool,
                isPaused: Swift.Bool
            ) {
                self.isActive = isActive
                self.isPaused = isPaused
            }
            internal enum CodingKeys: String, CodingKey {
                case isActive
                case isPaused
            }
        }
        /// - Remark: Generated from `#/components/schemas/ReactionLevel`.
        @frozen internal enum ReactionLevel: String, Codable, Hashable, Sendable {
            case album = "album"
            case asset = "asset"
        }
        /// - Remark: Generated from `#/components/schemas/ReactionType`.
        @frozen internal enum ReactionType: String, Codable, Hashable, Sendable {
            case comment = "comment"
            case like = "like"
        }
        /// - Remark: Generated from `#/components/schemas/ReverseGeocodingStateResponseDto`.
        internal struct ReverseGeocodingStateResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ReverseGeocodingStateResponseDto/lastImportFileName`.
            internal var lastImportFileName: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ReverseGeocodingStateResponseDto/lastUpdate`.
            internal var lastUpdate: Swift.String?
            /// Creates a new `ReverseGeocodingStateResponseDto`.
            ///
            /// - Parameters:
            ///   - lastImportFileName:
            ///   - lastUpdate:
            internal init(
                lastImportFileName: Swift.String? = nil,
                lastUpdate: Swift.String? = nil
            ) {
                self.lastImportFileName = lastImportFileName
                self.lastUpdate = lastUpdate
            }
            internal enum CodingKeys: String, CodingKey {
                case lastImportFileName
                case lastUpdate
            }
        }
        /// - Remark: Generated from `#/components/schemas/ScanLibraryDto`.
        internal struct ScanLibraryDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ScanLibraryDto/refreshAllFiles`.
            internal var refreshAllFiles: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/ScanLibraryDto/refreshModifiedFiles`.
            internal var refreshModifiedFiles: Swift.Bool?
            /// Creates a new `ScanLibraryDto`.
            ///
            /// - Parameters:
            ///   - refreshAllFiles:
            ///   - refreshModifiedFiles:
            internal init(
                refreshAllFiles: Swift.Bool? = nil,
                refreshModifiedFiles: Swift.Bool? = nil
            ) {
                self.refreshAllFiles = refreshAllFiles
                self.refreshModifiedFiles = refreshModifiedFiles
            }
            internal enum CodingKeys: String, CodingKey {
                case refreshAllFiles
                case refreshModifiedFiles
            }
        }
        /// - Remark: Generated from `#/components/schemas/SearchAlbumResponseDto`.
        internal struct SearchAlbumResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SearchAlbumResponseDto/count`.
            internal var count: Swift.Int
            /// - Remark: Generated from `#/components/schemas/SearchAlbumResponseDto/facets`.
            internal var facets: [Components.Schemas.SearchFacetResponseDto]
            /// - Remark: Generated from `#/components/schemas/SearchAlbumResponseDto/items`.
            internal var items: [Components.Schemas.AlbumResponseDto]
            /// - Remark: Generated from `#/components/schemas/SearchAlbumResponseDto/total`.
            internal var total: Swift.Int
            /// Creates a new `SearchAlbumResponseDto`.
            ///
            /// - Parameters:
            ///   - count:
            ///   - facets:
            ///   - items:
            ///   - total:
            internal init(
                count: Swift.Int,
                facets: [Components.Schemas.SearchFacetResponseDto],
                items: [Components.Schemas.AlbumResponseDto],
                total: Swift.Int
            ) {
                self.count = count
                self.facets = facets
                self.items = items
                self.total = total
            }
            internal enum CodingKeys: String, CodingKey {
                case count
                case facets
                case items
                case total
            }
        }
        /// - Remark: Generated from `#/components/schemas/SearchAssetResponseDto`.
        internal struct SearchAssetResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SearchAssetResponseDto/count`.
            internal var count: Swift.Int
            /// - Remark: Generated from `#/components/schemas/SearchAssetResponseDto/facets`.
            internal var facets: [Components.Schemas.SearchFacetResponseDto]
            /// - Remark: Generated from `#/components/schemas/SearchAssetResponseDto/items`.
            internal var items: [Components.Schemas.AssetResponseDto]
            /// - Remark: Generated from `#/components/schemas/SearchAssetResponseDto/nextPage`.
            internal var nextPage: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SearchAssetResponseDto/total`.
            internal var total: Swift.Int
            /// Creates a new `SearchAssetResponseDto`.
            ///
            /// - Parameters:
            ///   - count:
            ///   - facets:
            ///   - items:
            ///   - nextPage:
            ///   - total:
            internal init(
                count: Swift.Int,
                facets: [Components.Schemas.SearchFacetResponseDto],
                items: [Components.Schemas.AssetResponseDto],
                nextPage: Swift.String? = nil,
                total: Swift.Int
            ) {
                self.count = count
                self.facets = facets
                self.items = items
                self.nextPage = nextPage
                self.total = total
            }
            internal enum CodingKeys: String, CodingKey {
                case count
                case facets
                case items
                case nextPage
                case total
            }
        }
        /// - Remark: Generated from `#/components/schemas/SearchExploreItem`.
        internal struct SearchExploreItem: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SearchExploreItem/data`.
            internal var data: Components.Schemas.AssetResponseDto
            /// - Remark: Generated from `#/components/schemas/SearchExploreItem/value`.
            internal var value: Swift.String
            /// Creates a new `SearchExploreItem`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - value:
            internal init(
                data: Components.Schemas.AssetResponseDto,
                value: Swift.String
            ) {
                self.data = data
                self.value = value
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case value
            }
        }
        /// - Remark: Generated from `#/components/schemas/SearchExploreResponseDto`.
        internal struct SearchExploreResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SearchExploreResponseDto/fieldName`.
            internal var fieldName: Swift.String
            /// - Remark: Generated from `#/components/schemas/SearchExploreResponseDto/items`.
            internal var items: [Components.Schemas.SearchExploreItem]
            /// Creates a new `SearchExploreResponseDto`.
            ///
            /// - Parameters:
            ///   - fieldName:
            ///   - items:
            internal init(
                fieldName: Swift.String,
                items: [Components.Schemas.SearchExploreItem]
            ) {
                self.fieldName = fieldName
                self.items = items
            }
            internal enum CodingKeys: String, CodingKey {
                case fieldName
                case items
            }
        }
        /// - Remark: Generated from `#/components/schemas/SearchFacetCountResponseDto`.
        internal struct SearchFacetCountResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SearchFacetCountResponseDto/count`.
            internal var count: Swift.Int
            /// - Remark: Generated from `#/components/schemas/SearchFacetCountResponseDto/value`.
            internal var value: Swift.String
            /// Creates a new `SearchFacetCountResponseDto`.
            ///
            /// - Parameters:
            ///   - count:
            ///   - value:
            internal init(
                count: Swift.Int,
                value: Swift.String
            ) {
                self.count = count
                self.value = value
            }
            internal enum CodingKeys: String, CodingKey {
                case count
                case value
            }
        }
        /// - Remark: Generated from `#/components/schemas/SearchFacetResponseDto`.
        internal struct SearchFacetResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SearchFacetResponseDto/counts`.
            internal var counts: [Components.Schemas.SearchFacetCountResponseDto]
            /// - Remark: Generated from `#/components/schemas/SearchFacetResponseDto/fieldName`.
            internal var fieldName: Swift.String
            /// Creates a new `SearchFacetResponseDto`.
            ///
            /// - Parameters:
            ///   - counts:
            ///   - fieldName:
            internal init(
                counts: [Components.Schemas.SearchFacetCountResponseDto],
                fieldName: Swift.String
            ) {
                self.counts = counts
                self.fieldName = fieldName
            }
            internal enum CodingKeys: String, CodingKey {
                case counts
                case fieldName
            }
        }
        /// - Remark: Generated from `#/components/schemas/SearchResponseDto`.
        internal struct SearchResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SearchResponseDto/albums`.
            internal var albums: Components.Schemas.SearchAlbumResponseDto
            /// - Remark: Generated from `#/components/schemas/SearchResponseDto/assets`.
            internal var assets: Components.Schemas.SearchAssetResponseDto
            /// Creates a new `SearchResponseDto`.
            ///
            /// - Parameters:
            ///   - albums:
            ///   - assets:
            internal init(
                albums: Components.Schemas.SearchAlbumResponseDto,
                assets: Components.Schemas.SearchAssetResponseDto
            ) {
                self.albums = albums
                self.assets = assets
            }
            internal enum CodingKeys: String, CodingKey {
                case albums
                case assets
            }
        }
        /// - Remark: Generated from `#/components/schemas/SearchSuggestionType`.
        @frozen internal enum SearchSuggestionType: String, Codable, Hashable, Sendable {
            case country = "country"
            case state = "state"
            case city = "city"
            case camera_hyphen_make = "camera-make"
            case camera_hyphen_model = "camera-model"
        }
        /// - Remark: Generated from `#/components/schemas/ServerAboutResponseDto`.
        internal struct ServerAboutResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ServerAboutResponseDto/build`.
            internal var build: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ServerAboutResponseDto/buildImage`.
            internal var buildImage: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ServerAboutResponseDto/buildImageUrl`.
            internal var buildImageUrl: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ServerAboutResponseDto/buildUrl`.
            internal var buildUrl: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ServerAboutResponseDto/exiftool`.
            internal var exiftool: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ServerAboutResponseDto/ffmpeg`.
            internal var ffmpeg: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ServerAboutResponseDto/imagemagick`.
            internal var imagemagick: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ServerAboutResponseDto/libvips`.
            internal var libvips: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ServerAboutResponseDto/nodejs`.
            internal var nodejs: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ServerAboutResponseDto/repository`.
            internal var repository: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ServerAboutResponseDto/repositoryUrl`.
            internal var repositoryUrl: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ServerAboutResponseDto/sourceCommit`.
            internal var sourceCommit: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ServerAboutResponseDto/sourceRef`.
            internal var sourceRef: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ServerAboutResponseDto/sourceUrl`.
            internal var sourceUrl: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ServerAboutResponseDto/version`.
            internal var version: Swift.String
            /// - Remark: Generated from `#/components/schemas/ServerAboutResponseDto/versionUrl`.
            internal var versionUrl: Swift.String
            /// Creates a new `ServerAboutResponseDto`.
            ///
            /// - Parameters:
            ///   - build:
            ///   - buildImage:
            ///   - buildImageUrl:
            ///   - buildUrl:
            ///   - exiftool:
            ///   - ffmpeg:
            ///   - imagemagick:
            ///   - libvips:
            ///   - nodejs:
            ///   - repository:
            ///   - repositoryUrl:
            ///   - sourceCommit:
            ///   - sourceRef:
            ///   - sourceUrl:
            ///   - version:
            ///   - versionUrl:
            internal init(
                build: Swift.String? = nil,
                buildImage: Swift.String? = nil,
                buildImageUrl: Swift.String? = nil,
                buildUrl: Swift.String? = nil,
                exiftool: Swift.String? = nil,
                ffmpeg: Swift.String? = nil,
                imagemagick: Swift.String? = nil,
                libvips: Swift.String? = nil,
                nodejs: Swift.String? = nil,
                repository: Swift.String? = nil,
                repositoryUrl: Swift.String? = nil,
                sourceCommit: Swift.String? = nil,
                sourceRef: Swift.String? = nil,
                sourceUrl: Swift.String? = nil,
                version: Swift.String,
                versionUrl: Swift.String
            ) {
                self.build = build
                self.buildImage = buildImage
                self.buildImageUrl = buildImageUrl
                self.buildUrl = buildUrl
                self.exiftool = exiftool
                self.ffmpeg = ffmpeg
                self.imagemagick = imagemagick
                self.libvips = libvips
                self.nodejs = nodejs
                self.repository = repository
                self.repositoryUrl = repositoryUrl
                self.sourceCommit = sourceCommit
                self.sourceRef = sourceRef
                self.sourceUrl = sourceUrl
                self.version = version
                self.versionUrl = versionUrl
            }
            internal enum CodingKeys: String, CodingKey {
                case build
                case buildImage
                case buildImageUrl
                case buildUrl
                case exiftool
                case ffmpeg
                case imagemagick
                case libvips
                case nodejs
                case repository
                case repositoryUrl
                case sourceCommit
                case sourceRef
                case sourceUrl
                case version
                case versionUrl
            }
        }
        /// - Remark: Generated from `#/components/schemas/ServerConfigDto`.
        internal struct ServerConfigDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ServerConfigDto/externalDomain`.
            internal var externalDomain: Swift.String
            /// - Remark: Generated from `#/components/schemas/ServerConfigDto/isInitialized`.
            internal var isInitialized: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/ServerConfigDto/isOnboarded`.
            internal var isOnboarded: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/ServerConfigDto/loginPageMessage`.
            internal var loginPageMessage: Swift.String
            /// - Remark: Generated from `#/components/schemas/ServerConfigDto/oauthButtonText`.
            internal var oauthButtonText: Swift.String
            /// - Remark: Generated from `#/components/schemas/ServerConfigDto/trashDays`.
            internal var trashDays: Swift.Int
            /// - Remark: Generated from `#/components/schemas/ServerConfigDto/userDeleteDelay`.
            internal var userDeleteDelay: Swift.Int
            /// Creates a new `ServerConfigDto`.
            ///
            /// - Parameters:
            ///   - externalDomain:
            ///   - isInitialized:
            ///   - isOnboarded:
            ///   - loginPageMessage:
            ///   - oauthButtonText:
            ///   - trashDays:
            ///   - userDeleteDelay:
            internal init(
                externalDomain: Swift.String,
                isInitialized: Swift.Bool,
                isOnboarded: Swift.Bool,
                loginPageMessage: Swift.String,
                oauthButtonText: Swift.String,
                trashDays: Swift.Int,
                userDeleteDelay: Swift.Int
            ) {
                self.externalDomain = externalDomain
                self.isInitialized = isInitialized
                self.isOnboarded = isOnboarded
                self.loginPageMessage = loginPageMessage
                self.oauthButtonText = oauthButtonText
                self.trashDays = trashDays
                self.userDeleteDelay = userDeleteDelay
            }
            internal enum CodingKeys: String, CodingKey {
                case externalDomain
                case isInitialized
                case isOnboarded
                case loginPageMessage
                case oauthButtonText
                case trashDays
                case userDeleteDelay
            }
        }
        /// - Remark: Generated from `#/components/schemas/ServerFeaturesDto`.
        internal struct ServerFeaturesDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ServerFeaturesDto/configFile`.
            internal var configFile: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/ServerFeaturesDto/duplicateDetection`.
            internal var duplicateDetection: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/ServerFeaturesDto/email`.
            internal var email: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/ServerFeaturesDto/facialRecognition`.
            internal var facialRecognition: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/ServerFeaturesDto/map`.
            internal var map: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/ServerFeaturesDto/oauth`.
            internal var oauth: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/ServerFeaturesDto/oauthAutoLaunch`.
            internal var oauthAutoLaunch: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/ServerFeaturesDto/passwordLogin`.
            internal var passwordLogin: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/ServerFeaturesDto/reverseGeocoding`.
            internal var reverseGeocoding: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/ServerFeaturesDto/search`.
            internal var search: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/ServerFeaturesDto/sidecar`.
            internal var sidecar: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/ServerFeaturesDto/smartSearch`.
            internal var smartSearch: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/ServerFeaturesDto/trash`.
            internal var trash: Swift.Bool
            /// Creates a new `ServerFeaturesDto`.
            ///
            /// - Parameters:
            ///   - configFile:
            ///   - duplicateDetection:
            ///   - email:
            ///   - facialRecognition:
            ///   - map:
            ///   - oauth:
            ///   - oauthAutoLaunch:
            ///   - passwordLogin:
            ///   - reverseGeocoding:
            ///   - search:
            ///   - sidecar:
            ///   - smartSearch:
            ///   - trash:
            internal init(
                configFile: Swift.Bool,
                duplicateDetection: Swift.Bool,
                email: Swift.Bool,
                facialRecognition: Swift.Bool,
                map: Swift.Bool,
                oauth: Swift.Bool,
                oauthAutoLaunch: Swift.Bool,
                passwordLogin: Swift.Bool,
                reverseGeocoding: Swift.Bool,
                search: Swift.Bool,
                sidecar: Swift.Bool,
                smartSearch: Swift.Bool,
                trash: Swift.Bool
            ) {
                self.configFile = configFile
                self.duplicateDetection = duplicateDetection
                self.email = email
                self.facialRecognition = facialRecognition
                self.map = map
                self.oauth = oauth
                self.oauthAutoLaunch = oauthAutoLaunch
                self.passwordLogin = passwordLogin
                self.reverseGeocoding = reverseGeocoding
                self.search = search
                self.sidecar = sidecar
                self.smartSearch = smartSearch
                self.trash = trash
            }
            internal enum CodingKeys: String, CodingKey {
                case configFile
                case duplicateDetection
                case email
                case facialRecognition
                case map
                case oauth
                case oauthAutoLaunch
                case passwordLogin
                case reverseGeocoding
                case search
                case sidecar
                case smartSearch
                case trash
            }
        }
        /// - Remark: Generated from `#/components/schemas/ServerMediaTypesResponseDto`.
        internal struct ServerMediaTypesResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ServerMediaTypesResponseDto/image`.
            internal var image: [Swift.String]
            /// - Remark: Generated from `#/components/schemas/ServerMediaTypesResponseDto/sidecar`.
            internal var sidecar: [Swift.String]
            /// - Remark: Generated from `#/components/schemas/ServerMediaTypesResponseDto/video`.
            internal var video: [Swift.String]
            /// Creates a new `ServerMediaTypesResponseDto`.
            ///
            /// - Parameters:
            ///   - image:
            ///   - sidecar:
            ///   - video:
            internal init(
                image: [Swift.String],
                sidecar: [Swift.String],
                video: [Swift.String]
            ) {
                self.image = image
                self.sidecar = sidecar
                self.video = video
            }
            internal enum CodingKeys: String, CodingKey {
                case image
                case sidecar
                case video
            }
        }
        /// - Remark: Generated from `#/components/schemas/ServerPingResponse`.
        internal struct ServerPingResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ServerPingResponse/res`.
            internal var res: Swift.String
            /// Creates a new `ServerPingResponse`.
            ///
            /// - Parameters:
            ///   - res:
            internal init(res: Swift.String) {
                self.res = res
            }
            internal enum CodingKeys: String, CodingKey {
                case res
            }
        }
        /// - Remark: Generated from `#/components/schemas/ServerStatsResponseDto`.
        internal struct ServerStatsResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ServerStatsResponseDto/photos`.
            internal var photos: Swift.Int
            /// - Remark: Generated from `#/components/schemas/ServerStatsResponseDto/usage`.
            internal var usage: Swift.Int64
            /// - Remark: Generated from `#/components/schemas/ServerStatsResponseDto/usageByUser`.
            internal var usageByUser: [Components.Schemas.UsageByUserDto]
            /// - Remark: Generated from `#/components/schemas/ServerStatsResponseDto/videos`.
            internal var videos: Swift.Int
            /// Creates a new `ServerStatsResponseDto`.
            ///
            /// - Parameters:
            ///   - photos:
            ///   - usage:
            ///   - usageByUser:
            ///   - videos:
            internal init(
                photos: Swift.Int,
                usage: Swift.Int64,
                usageByUser: [Components.Schemas.UsageByUserDto],
                videos: Swift.Int
            ) {
                self.photos = photos
                self.usage = usage
                self.usageByUser = usageByUser
                self.videos = videos
            }
            internal enum CodingKeys: String, CodingKey {
                case photos
                case usage
                case usageByUser
                case videos
            }
        }
        /// - Remark: Generated from `#/components/schemas/ServerStorageResponseDto`.
        internal struct ServerStorageResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ServerStorageResponseDto/diskAvailable`.
            internal var diskAvailable: Swift.String
            /// - Remark: Generated from `#/components/schemas/ServerStorageResponseDto/diskAvailableRaw`.
            internal var diskAvailableRaw: Swift.Int64
            /// - Remark: Generated from `#/components/schemas/ServerStorageResponseDto/diskSize`.
            internal var diskSize: Swift.String
            /// - Remark: Generated from `#/components/schemas/ServerStorageResponseDto/diskSizeRaw`.
            internal var diskSizeRaw: Swift.Int64
            /// - Remark: Generated from `#/components/schemas/ServerStorageResponseDto/diskUsagePercentage`.
            internal var diskUsagePercentage: Swift.Double
            /// - Remark: Generated from `#/components/schemas/ServerStorageResponseDto/diskUse`.
            internal var diskUse: Swift.String
            /// - Remark: Generated from `#/components/schemas/ServerStorageResponseDto/diskUseRaw`.
            internal var diskUseRaw: Swift.Int64
            /// Creates a new `ServerStorageResponseDto`.
            ///
            /// - Parameters:
            ///   - diskAvailable:
            ///   - diskAvailableRaw:
            ///   - diskSize:
            ///   - diskSizeRaw:
            ///   - diskUsagePercentage:
            ///   - diskUse:
            ///   - diskUseRaw:
            internal init(
                diskAvailable: Swift.String,
                diskAvailableRaw: Swift.Int64,
                diskSize: Swift.String,
                diskSizeRaw: Swift.Int64,
                diskUsagePercentage: Swift.Double,
                diskUse: Swift.String,
                diskUseRaw: Swift.Int64
            ) {
                self.diskAvailable = diskAvailable
                self.diskAvailableRaw = diskAvailableRaw
                self.diskSize = diskSize
                self.diskSizeRaw = diskSizeRaw
                self.diskUsagePercentage = diskUsagePercentage
                self.diskUse = diskUse
                self.diskUseRaw = diskUseRaw
            }
            internal enum CodingKeys: String, CodingKey {
                case diskAvailable
                case diskAvailableRaw
                case diskSize
                case diskSizeRaw
                case diskUsagePercentage
                case diskUse
                case diskUseRaw
            }
        }
        /// - Remark: Generated from `#/components/schemas/ServerThemeDto`.
        internal struct ServerThemeDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ServerThemeDto/customCss`.
            internal var customCss: Swift.String
            /// Creates a new `ServerThemeDto`.
            ///
            /// - Parameters:
            ///   - customCss:
            internal init(customCss: Swift.String) {
                self.customCss = customCss
            }
            internal enum CodingKeys: String, CodingKey {
                case customCss
            }
        }
        /// - Remark: Generated from `#/components/schemas/ServerVersionResponseDto`.
        internal struct ServerVersionResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ServerVersionResponseDto/major`.
            internal var major: Swift.Int
            /// - Remark: Generated from `#/components/schemas/ServerVersionResponseDto/minor`.
            internal var minor: Swift.Int
            /// - Remark: Generated from `#/components/schemas/ServerVersionResponseDto/patch`.
            internal var patch: Swift.Int
            /// Creates a new `ServerVersionResponseDto`.
            ///
            /// - Parameters:
            ///   - major:
            ///   - minor:
            ///   - patch:
            internal init(
                major: Swift.Int,
                minor: Swift.Int,
                patch: Swift.Int
            ) {
                self.major = major
                self.minor = minor
                self.patch = patch
            }
            internal enum CodingKeys: String, CodingKey {
                case major
                case minor
                case patch
            }
        }
        /// - Remark: Generated from `#/components/schemas/SessionResponseDto`.
        internal struct SessionResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SessionResponseDto/createdAt`.
            internal var createdAt: Swift.String
            /// - Remark: Generated from `#/components/schemas/SessionResponseDto/current`.
            internal var current: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/SessionResponseDto/deviceOS`.
            internal var deviceOS: Swift.String
            /// - Remark: Generated from `#/components/schemas/SessionResponseDto/deviceType`.
            internal var deviceType: Swift.String
            /// - Remark: Generated from `#/components/schemas/SessionResponseDto/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/SessionResponseDto/updatedAt`.
            internal var updatedAt: Swift.String
            /// Creates a new `SessionResponseDto`.
            ///
            /// - Parameters:
            ///   - createdAt:
            ///   - current:
            ///   - deviceOS:
            ///   - deviceType:
            ///   - id:
            ///   - updatedAt:
            internal init(
                createdAt: Swift.String,
                current: Swift.Bool,
                deviceOS: Swift.String,
                deviceType: Swift.String,
                id: Swift.String,
                updatedAt: Swift.String
            ) {
                self.createdAt = createdAt
                self.current = current
                self.deviceOS = deviceOS
                self.deviceType = deviceType
                self.id = id
                self.updatedAt = updatedAt
            }
            internal enum CodingKeys: String, CodingKey {
                case createdAt
                case current
                case deviceOS
                case deviceType
                case id
                case updatedAt
            }
        }
        /// - Remark: Generated from `#/components/schemas/SharedLinkCreateDto`.
        internal struct SharedLinkCreateDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SharedLinkCreateDto/albumId`.
            internal var albumId: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SharedLinkCreateDto/allowDownload`.
            internal var allowDownload: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/SharedLinkCreateDto/allowUpload`.
            internal var allowUpload: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/SharedLinkCreateDto/assetIds`.
            internal var assetIds: [Swift.String]?
            /// - Remark: Generated from `#/components/schemas/SharedLinkCreateDto/description`.
            internal var description: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SharedLinkCreateDto/expiresAt`.
            internal var expiresAt: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/SharedLinkCreateDto/password`.
            internal var password: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SharedLinkCreateDto/showMetadata`.
            internal var showMetadata: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/SharedLinkCreateDto/type`.
            internal var _type: Components.Schemas.SharedLinkType
            /// Creates a new `SharedLinkCreateDto`.
            ///
            /// - Parameters:
            ///   - albumId:
            ///   - allowDownload:
            ///   - allowUpload:
            ///   - assetIds:
            ///   - description:
            ///   - expiresAt:
            ///   - password:
            ///   - showMetadata:
            ///   - _type:
            internal init(
                albumId: Swift.String? = nil,
                allowDownload: Swift.Bool? = nil,
                allowUpload: Swift.Bool? = nil,
                assetIds: [Swift.String]? = nil,
                description: Swift.String? = nil,
                expiresAt: Foundation.Date? = nil,
                password: Swift.String? = nil,
                showMetadata: Swift.Bool? = nil,
                _type: Components.Schemas.SharedLinkType
            ) {
                self.albumId = albumId
                self.allowDownload = allowDownload
                self.allowUpload = allowUpload
                self.assetIds = assetIds
                self.description = description
                self.expiresAt = expiresAt
                self.password = password
                self.showMetadata = showMetadata
                self._type = _type
            }
            internal enum CodingKeys: String, CodingKey {
                case albumId
                case allowDownload
                case allowUpload
                case assetIds
                case description
                case expiresAt
                case password
                case showMetadata
                case _type = "type"
            }
        }
        /// - Remark: Generated from `#/components/schemas/SharedLinkEditDto`.
        internal struct SharedLinkEditDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SharedLinkEditDto/allowDownload`.
            internal var allowDownload: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/SharedLinkEditDto/allowUpload`.
            internal var allowUpload: Swift.Bool?
            /// Few clients cannot send null to set the expiryTime to never.
            /// Setting this flag and not sending expiryAt is considered as null instead.
            /// Clients that can send null values can ignore this.
            ///
            /// - Remark: Generated from `#/components/schemas/SharedLinkEditDto/changeExpiryTime`.
            internal var changeExpiryTime: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/SharedLinkEditDto/description`.
            internal var description: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SharedLinkEditDto/expiresAt`.
            internal var expiresAt: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/SharedLinkEditDto/password`.
            internal var password: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SharedLinkEditDto/showMetadata`.
            internal var showMetadata: Swift.Bool?
            /// Creates a new `SharedLinkEditDto`.
            ///
            /// - Parameters:
            ///   - allowDownload:
            ///   - allowUpload:
            ///   - changeExpiryTime: Few clients cannot send null to set the expiryTime to never.
            ///   - description:
            ///   - expiresAt:
            ///   - password:
            ///   - showMetadata:
            internal init(
                allowDownload: Swift.Bool? = nil,
                allowUpload: Swift.Bool? = nil,
                changeExpiryTime: Swift.Bool? = nil,
                description: Swift.String? = nil,
                expiresAt: Foundation.Date? = nil,
                password: Swift.String? = nil,
                showMetadata: Swift.Bool? = nil
            ) {
                self.allowDownload = allowDownload
                self.allowUpload = allowUpload
                self.changeExpiryTime = changeExpiryTime
                self.description = description
                self.expiresAt = expiresAt
                self.password = password
                self.showMetadata = showMetadata
            }
            internal enum CodingKeys: String, CodingKey {
                case allowDownload
                case allowUpload
                case changeExpiryTime
                case description
                case expiresAt
                case password
                case showMetadata
            }
        }
        /// - Remark: Generated from `#/components/schemas/SharedLinkResponseDto`.
        internal struct SharedLinkResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SharedLinkResponseDto/album`.
            internal var album: Components.Schemas.AlbumResponseDto?
            /// - Remark: Generated from `#/components/schemas/SharedLinkResponseDto/allowDownload`.
            internal var allowDownload: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/SharedLinkResponseDto/allowUpload`.
            internal var allowUpload: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/SharedLinkResponseDto/assets`.
            internal var assets: [Components.Schemas.AssetResponseDto]
            /// - Remark: Generated from `#/components/schemas/SharedLinkResponseDto/createdAt`.
            internal var createdAt: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/SharedLinkResponseDto/description`.
            internal var description: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SharedLinkResponseDto/expiresAt`.
            internal var expiresAt: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/SharedLinkResponseDto/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/SharedLinkResponseDto/key`.
            internal var key: Swift.String
            /// - Remark: Generated from `#/components/schemas/SharedLinkResponseDto/password`.
            internal var password: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SharedLinkResponseDto/showMetadata`.
            internal var showMetadata: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/SharedLinkResponseDto/token`.
            internal var token: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SharedLinkResponseDto/type`.
            internal var _type: Components.Schemas.SharedLinkType
            /// - Remark: Generated from `#/components/schemas/SharedLinkResponseDto/userId`.
            internal var userId: Swift.String
            /// Creates a new `SharedLinkResponseDto`.
            ///
            /// - Parameters:
            ///   - album:
            ///   - allowDownload:
            ///   - allowUpload:
            ///   - assets:
            ///   - createdAt:
            ///   - description:
            ///   - expiresAt:
            ///   - id:
            ///   - key:
            ///   - password:
            ///   - showMetadata:
            ///   - token:
            ///   - _type:
            ///   - userId:
            internal init(
                album: Components.Schemas.AlbumResponseDto? = nil,
                allowDownload: Swift.Bool,
                allowUpload: Swift.Bool,
                assets: [Components.Schemas.AssetResponseDto],
                createdAt: Foundation.Date,
                description: Swift.String? = nil,
                expiresAt: Foundation.Date? = nil,
                id: Swift.String,
                key: Swift.String,
                password: Swift.String? = nil,
                showMetadata: Swift.Bool,
                token: Swift.String? = nil,
                _type: Components.Schemas.SharedLinkType,
                userId: Swift.String
            ) {
                self.album = album
                self.allowDownload = allowDownload
                self.allowUpload = allowUpload
                self.assets = assets
                self.createdAt = createdAt
                self.description = description
                self.expiresAt = expiresAt
                self.id = id
                self.key = key
                self.password = password
                self.showMetadata = showMetadata
                self.token = token
                self._type = _type
                self.userId = userId
            }
            internal enum CodingKeys: String, CodingKey {
                case album
                case allowDownload
                case allowUpload
                case assets
                case createdAt
                case description
                case expiresAt
                case id
                case key
                case password
                case showMetadata
                case token
                case _type = "type"
                case userId
            }
        }
        /// - Remark: Generated from `#/components/schemas/SharedLinkType`.
        @frozen internal enum SharedLinkType: String, Codable, Hashable, Sendable {
            case ALBUM = "ALBUM"
            case INDIVIDUAL = "INDIVIDUAL"
        }
        /// - Remark: Generated from `#/components/schemas/SignUpDto`.
        internal struct SignUpDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SignUpDto/email`.
            internal var email: Swift.String
            /// - Remark: Generated from `#/components/schemas/SignUpDto/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/SignUpDto/password`.
            internal var password: Swift.String
            /// Creates a new `SignUpDto`.
            ///
            /// - Parameters:
            ///   - email:
            ///   - name:
            ///   - password:
            internal init(
                email: Swift.String,
                name: Swift.String,
                password: Swift.String
            ) {
                self.email = email
                self.name = name
                self.password = password
            }
            internal enum CodingKeys: String, CodingKey {
                case email
                case name
                case password
            }
        }
        /// - Remark: Generated from `#/components/schemas/SmartInfoResponseDto`.
        internal struct SmartInfoResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SmartInfoResponseDto/objects`.
            internal var objects: [Swift.String]?
            /// - Remark: Generated from `#/components/schemas/SmartInfoResponseDto/tags`.
            internal var tags: [Swift.String]?
            /// Creates a new `SmartInfoResponseDto`.
            ///
            /// - Parameters:
            ///   - objects:
            ///   - tags:
            internal init(
                objects: [Swift.String]? = nil,
                tags: [Swift.String]? = nil
            ) {
                self.objects = objects
                self.tags = tags
            }
            internal enum CodingKeys: String, CodingKey {
                case objects
                case tags
            }
        }
        /// - Remark: Generated from `#/components/schemas/SmartSearchDto`.
        internal struct SmartSearchDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/city`.
            internal var city: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/country`.
            internal var country: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/createdAfter`.
            internal var createdAfter: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/createdBefore`.
            internal var createdBefore: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/deviceId`.
            internal var deviceId: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/isArchived`.
            internal var isArchived: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/isEncoded`.
            internal var isEncoded: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/isFavorite`.
            internal var isFavorite: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/isMotion`.
            internal var isMotion: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/isNotInAlbum`.
            internal var isNotInAlbum: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/isOffline`.
            internal var isOffline: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/isVisible`.
            internal var isVisible: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/lensModel`.
            internal var lensModel: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/libraryId`.
            internal var libraryId: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/make`.
            internal var make: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/model`.
            internal var model: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/page`.
            internal var page: Swift.Double?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/personIds`.
            internal var personIds: [Swift.String]?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/query`.
            internal var query: Swift.String
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/size`.
            internal var size: Swift.Double?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/state`.
            internal var state: Swift.String?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/takenAfter`.
            internal var takenAfter: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/takenBefore`.
            internal var takenBefore: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/trashedAfter`.
            internal var trashedAfter: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/trashedBefore`.
            internal var trashedBefore: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/type`.
            internal var _type: Components.Schemas.AssetTypeEnum?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/updatedAfter`.
            internal var updatedAfter: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/updatedBefore`.
            internal var updatedBefore: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/withArchived`.
            internal var withArchived: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/withDeleted`.
            internal var withDeleted: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/SmartSearchDto/withExif`.
            internal var withExif: Swift.Bool?
            /// Creates a new `SmartSearchDto`.
            ///
            /// - Parameters:
            ///   - city:
            ///   - country:
            ///   - createdAfter:
            ///   - createdBefore:
            ///   - deviceId:
            ///   - isArchived:
            ///   - isEncoded:
            ///   - isFavorite:
            ///   - isMotion:
            ///   - isNotInAlbum:
            ///   - isOffline:
            ///   - isVisible:
            ///   - lensModel:
            ///   - libraryId:
            ///   - make:
            ///   - model:
            ///   - page:
            ///   - personIds:
            ///   - query:
            ///   - size:
            ///   - state:
            ///   - takenAfter:
            ///   - takenBefore:
            ///   - trashedAfter:
            ///   - trashedBefore:
            ///   - _type:
            ///   - updatedAfter:
            ///   - updatedBefore:
            ///   - withArchived:
            ///   - withDeleted:
            ///   - withExif:
            internal init(
                city: Swift.String? = nil,
                country: Swift.String? = nil,
                createdAfter: Foundation.Date? = nil,
                createdBefore: Foundation.Date? = nil,
                deviceId: Swift.String? = nil,
                isArchived: Swift.Bool? = nil,
                isEncoded: Swift.Bool? = nil,
                isFavorite: Swift.Bool? = nil,
                isMotion: Swift.Bool? = nil,
                isNotInAlbum: Swift.Bool? = nil,
                isOffline: Swift.Bool? = nil,
                isVisible: Swift.Bool? = nil,
                lensModel: Swift.String? = nil,
                libraryId: Swift.String? = nil,
                make: Swift.String? = nil,
                model: Swift.String? = nil,
                page: Swift.Double? = nil,
                personIds: [Swift.String]? = nil,
                query: Swift.String,
                size: Swift.Double? = nil,
                state: Swift.String? = nil,
                takenAfter: Foundation.Date? = nil,
                takenBefore: Foundation.Date? = nil,
                trashedAfter: Foundation.Date? = nil,
                trashedBefore: Foundation.Date? = nil,
                _type: Components.Schemas.AssetTypeEnum? = nil,
                updatedAfter: Foundation.Date? = nil,
                updatedBefore: Foundation.Date? = nil,
                withArchived: Swift.Bool? = nil,
                withDeleted: Swift.Bool? = nil,
                withExif: Swift.Bool? = nil
            ) {
                self.city = city
                self.country = country
                self.createdAfter = createdAfter
                self.createdBefore = createdBefore
                self.deviceId = deviceId
                self.isArchived = isArchived
                self.isEncoded = isEncoded
                self.isFavorite = isFavorite
                self.isMotion = isMotion
                self.isNotInAlbum = isNotInAlbum
                self.isOffline = isOffline
                self.isVisible = isVisible
                self.lensModel = lensModel
                self.libraryId = libraryId
                self.make = make
                self.model = model
                self.page = page
                self.personIds = personIds
                self.query = query
                self.size = size
                self.state = state
                self.takenAfter = takenAfter
                self.takenBefore = takenBefore
                self.trashedAfter = trashedAfter
                self.trashedBefore = trashedBefore
                self._type = _type
                self.updatedAfter = updatedAfter
                self.updatedBefore = updatedBefore
                self.withArchived = withArchived
                self.withDeleted = withDeleted
                self.withExif = withExif
            }
            internal enum CodingKeys: String, CodingKey {
                case city
                case country
                case createdAfter
                case createdBefore
                case deviceId
                case isArchived
                case isEncoded
                case isFavorite
                case isMotion
                case isNotInAlbum
                case isOffline
                case isVisible
                case lensModel
                case libraryId
                case make
                case model
                case page
                case personIds
                case query
                case size
                case state
                case takenAfter
                case takenBefore
                case trashedAfter
                case trashedBefore
                case _type = "type"
                case updatedAfter
                case updatedBefore
                case withArchived
                case withDeleted
                case withExif
            }
        }
        /// - Remark: Generated from `#/components/schemas/SystemConfigDto`.
        internal struct SystemConfigDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SystemConfigDto/ffmpeg`.
            internal var ffmpeg: Components.Schemas.SystemConfigFFmpegDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigDto/image`.
            internal var image: Components.Schemas.SystemConfigImageDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigDto/job`.
            internal var job: Components.Schemas.SystemConfigJobDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigDto/library`.
            internal var library: Components.Schemas.SystemConfigLibraryDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigDto/logging`.
            internal var logging: Components.Schemas.SystemConfigLoggingDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigDto/machineLearning`.
            internal var machineLearning: Components.Schemas.SystemConfigMachineLearningDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigDto/map`.
            internal var map: Components.Schemas.SystemConfigMapDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigDto/newVersionCheck`.
            internal var newVersionCheck: Components.Schemas.SystemConfigNewVersionCheckDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigDto/notifications`.
            internal var notifications: Components.Schemas.SystemConfigNotificationsDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigDto/oauth`.
            internal var oauth: Components.Schemas.SystemConfigOAuthDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigDto/passwordLogin`.
            internal var passwordLogin: Components.Schemas.SystemConfigPasswordLoginDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigDto/reverseGeocoding`.
            internal var reverseGeocoding: Components.Schemas.SystemConfigReverseGeocodingDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigDto/server`.
            internal var server: Components.Schemas.SystemConfigServerDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigDto/storageTemplate`.
            internal var storageTemplate: Components.Schemas.SystemConfigStorageTemplateDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigDto/theme`.
            internal var theme: Components.Schemas.SystemConfigThemeDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigDto/trash`.
            internal var trash: Components.Schemas.SystemConfigTrashDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigDto/user`.
            internal var user: Components.Schemas.SystemConfigUserDto
            /// Creates a new `SystemConfigDto`.
            ///
            /// - Parameters:
            ///   - ffmpeg:
            ///   - image:
            ///   - job:
            ///   - library:
            ///   - logging:
            ///   - machineLearning:
            ///   - map:
            ///   - newVersionCheck:
            ///   - notifications:
            ///   - oauth:
            ///   - passwordLogin:
            ///   - reverseGeocoding:
            ///   - server:
            ///   - storageTemplate:
            ///   - theme:
            ///   - trash:
            ///   - user:
            internal init(
                ffmpeg: Components.Schemas.SystemConfigFFmpegDto,
                image: Components.Schemas.SystemConfigImageDto,
                job: Components.Schemas.SystemConfigJobDto,
                library: Components.Schemas.SystemConfigLibraryDto,
                logging: Components.Schemas.SystemConfigLoggingDto,
                machineLearning: Components.Schemas.SystemConfigMachineLearningDto,
                map: Components.Schemas.SystemConfigMapDto,
                newVersionCheck: Components.Schemas.SystemConfigNewVersionCheckDto,
                notifications: Components.Schemas.SystemConfigNotificationsDto,
                oauth: Components.Schemas.SystemConfigOAuthDto,
                passwordLogin: Components.Schemas.SystemConfigPasswordLoginDto,
                reverseGeocoding: Components.Schemas.SystemConfigReverseGeocodingDto,
                server: Components.Schemas.SystemConfigServerDto,
                storageTemplate: Components.Schemas.SystemConfigStorageTemplateDto,
                theme: Components.Schemas.SystemConfigThemeDto,
                trash: Components.Schemas.SystemConfigTrashDto,
                user: Components.Schemas.SystemConfigUserDto
            ) {
                self.ffmpeg = ffmpeg
                self.image = image
                self.job = job
                self.library = library
                self.logging = logging
                self.machineLearning = machineLearning
                self.map = map
                self.newVersionCheck = newVersionCheck
                self.notifications = notifications
                self.oauth = oauth
                self.passwordLogin = passwordLogin
                self.reverseGeocoding = reverseGeocoding
                self.server = server
                self.storageTemplate = storageTemplate
                self.theme = theme
                self.trash = trash
                self.user = user
            }
            internal enum CodingKeys: String, CodingKey {
                case ffmpeg
                case image
                case job
                case library
                case logging
                case machineLearning
                case map
                case newVersionCheck
                case notifications
                case oauth
                case passwordLogin
                case reverseGeocoding
                case server
                case storageTemplate
                case theme
                case trash
                case user
            }
        }
        /// - Remark: Generated from `#/components/schemas/SystemConfigFFmpegDto`.
        internal struct SystemConfigFFmpegDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SystemConfigFFmpegDto/accel`.
            internal var accel: Components.Schemas.TranscodeHWAccel
            /// - Remark: Generated from `#/components/schemas/SystemConfigFFmpegDto/accelDecode`.
            internal var accelDecode: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/SystemConfigFFmpegDto/acceptedAudioCodecs`.
            internal var acceptedAudioCodecs: [Components.Schemas.AudioCodec]
            /// - Remark: Generated from `#/components/schemas/SystemConfigFFmpegDto/acceptedVideoCodecs`.
            internal var acceptedVideoCodecs: [Components.Schemas.VideoCodec]
            /// - Remark: Generated from `#/components/schemas/SystemConfigFFmpegDto/bframes`.
            internal var bframes: Swift.Int
            /// - Remark: Generated from `#/components/schemas/SystemConfigFFmpegDto/cqMode`.
            internal var cqMode: Components.Schemas.CQMode
            /// - Remark: Generated from `#/components/schemas/SystemConfigFFmpegDto/crf`.
            internal var crf: Swift.Int
            /// - Remark: Generated from `#/components/schemas/SystemConfigFFmpegDto/gopSize`.
            internal var gopSize: Swift.Int
            /// - Remark: Generated from `#/components/schemas/SystemConfigFFmpegDto/maxBitrate`.
            internal var maxBitrate: Swift.String
            /// - Remark: Generated from `#/components/schemas/SystemConfigFFmpegDto/npl`.
            internal var npl: Swift.Int
            /// - Remark: Generated from `#/components/schemas/SystemConfigFFmpegDto/preferredHwDevice`.
            internal var preferredHwDevice: Swift.String
            /// - Remark: Generated from `#/components/schemas/SystemConfigFFmpegDto/preset`.
            internal var preset: Swift.String
            /// - Remark: Generated from `#/components/schemas/SystemConfigFFmpegDto/refs`.
            internal var refs: Swift.Int
            /// - Remark: Generated from `#/components/schemas/SystemConfigFFmpegDto/targetAudioCodec`.
            internal var targetAudioCodec: Components.Schemas.AudioCodec
            /// - Remark: Generated from `#/components/schemas/SystemConfigFFmpegDto/targetResolution`.
            internal var targetResolution: Swift.String
            /// - Remark: Generated from `#/components/schemas/SystemConfigFFmpegDto/targetVideoCodec`.
            internal var targetVideoCodec: Components.Schemas.VideoCodec
            /// - Remark: Generated from `#/components/schemas/SystemConfigFFmpegDto/temporalAQ`.
            internal var temporalAQ: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/SystemConfigFFmpegDto/threads`.
            internal var threads: Swift.Int
            /// - Remark: Generated from `#/components/schemas/SystemConfigFFmpegDto/tonemap`.
            internal var tonemap: Components.Schemas.ToneMapping
            /// - Remark: Generated from `#/components/schemas/SystemConfigFFmpegDto/transcode`.
            internal var transcode: Components.Schemas.TranscodePolicy
            /// - Remark: Generated from `#/components/schemas/SystemConfigFFmpegDto/twoPass`.
            internal var twoPass: Swift.Bool
            /// Creates a new `SystemConfigFFmpegDto`.
            ///
            /// - Parameters:
            ///   - accel:
            ///   - accelDecode:
            ///   - acceptedAudioCodecs:
            ///   - acceptedVideoCodecs:
            ///   - bframes:
            ///   - cqMode:
            ///   - crf:
            ///   - gopSize:
            ///   - maxBitrate:
            ///   - npl:
            ///   - preferredHwDevice:
            ///   - preset:
            ///   - refs:
            ///   - targetAudioCodec:
            ///   - targetResolution:
            ///   - targetVideoCodec:
            ///   - temporalAQ:
            ///   - threads:
            ///   - tonemap:
            ///   - transcode:
            ///   - twoPass:
            internal init(
                accel: Components.Schemas.TranscodeHWAccel,
                accelDecode: Swift.Bool,
                acceptedAudioCodecs: [Components.Schemas.AudioCodec],
                acceptedVideoCodecs: [Components.Schemas.VideoCodec],
                bframes: Swift.Int,
                cqMode: Components.Schemas.CQMode,
                crf: Swift.Int,
                gopSize: Swift.Int,
                maxBitrate: Swift.String,
                npl: Swift.Int,
                preferredHwDevice: Swift.String,
                preset: Swift.String,
                refs: Swift.Int,
                targetAudioCodec: Components.Schemas.AudioCodec,
                targetResolution: Swift.String,
                targetVideoCodec: Components.Schemas.VideoCodec,
                temporalAQ: Swift.Bool,
                threads: Swift.Int,
                tonemap: Components.Schemas.ToneMapping,
                transcode: Components.Schemas.TranscodePolicy,
                twoPass: Swift.Bool
            ) {
                self.accel = accel
                self.accelDecode = accelDecode
                self.acceptedAudioCodecs = acceptedAudioCodecs
                self.acceptedVideoCodecs = acceptedVideoCodecs
                self.bframes = bframes
                self.cqMode = cqMode
                self.crf = crf
                self.gopSize = gopSize
                self.maxBitrate = maxBitrate
                self.npl = npl
                self.preferredHwDevice = preferredHwDevice
                self.preset = preset
                self.refs = refs
                self.targetAudioCodec = targetAudioCodec
                self.targetResolution = targetResolution
                self.targetVideoCodec = targetVideoCodec
                self.temporalAQ = temporalAQ
                self.threads = threads
                self.tonemap = tonemap
                self.transcode = transcode
                self.twoPass = twoPass
            }
            internal enum CodingKeys: String, CodingKey {
                case accel
                case accelDecode
                case acceptedAudioCodecs
                case acceptedVideoCodecs
                case bframes
                case cqMode
                case crf
                case gopSize
                case maxBitrate
                case npl
                case preferredHwDevice
                case preset
                case refs
                case targetAudioCodec
                case targetResolution
                case targetVideoCodec
                case temporalAQ
                case threads
                case tonemap
                case transcode
                case twoPass
            }
        }
        /// - Remark: Generated from `#/components/schemas/SystemConfigImageDto`.
        internal struct SystemConfigImageDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SystemConfigImageDto/colorspace`.
            internal var colorspace: Components.Schemas.Colorspace
            /// - Remark: Generated from `#/components/schemas/SystemConfigImageDto/extractEmbedded`.
            internal var extractEmbedded: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/SystemConfigImageDto/previewFormat`.
            internal var previewFormat: Components.Schemas.ImageFormat
            /// - Remark: Generated from `#/components/schemas/SystemConfigImageDto/previewSize`.
            internal var previewSize: Swift.Int
            /// - Remark: Generated from `#/components/schemas/SystemConfigImageDto/quality`.
            internal var quality: Swift.Int
            /// - Remark: Generated from `#/components/schemas/SystemConfigImageDto/thumbnailFormat`.
            internal var thumbnailFormat: Components.Schemas.ImageFormat
            /// - Remark: Generated from `#/components/schemas/SystemConfigImageDto/thumbnailSize`.
            internal var thumbnailSize: Swift.Int
            /// Creates a new `SystemConfigImageDto`.
            ///
            /// - Parameters:
            ///   - colorspace:
            ///   - extractEmbedded:
            ///   - previewFormat:
            ///   - previewSize:
            ///   - quality:
            ///   - thumbnailFormat:
            ///   - thumbnailSize:
            internal init(
                colorspace: Components.Schemas.Colorspace,
                extractEmbedded: Swift.Bool,
                previewFormat: Components.Schemas.ImageFormat,
                previewSize: Swift.Int,
                quality: Swift.Int,
                thumbnailFormat: Components.Schemas.ImageFormat,
                thumbnailSize: Swift.Int
            ) {
                self.colorspace = colorspace
                self.extractEmbedded = extractEmbedded
                self.previewFormat = previewFormat
                self.previewSize = previewSize
                self.quality = quality
                self.thumbnailFormat = thumbnailFormat
                self.thumbnailSize = thumbnailSize
            }
            internal enum CodingKeys: String, CodingKey {
                case colorspace
                case extractEmbedded
                case previewFormat
                case previewSize
                case quality
                case thumbnailFormat
                case thumbnailSize
            }
        }
        /// - Remark: Generated from `#/components/schemas/SystemConfigJobDto`.
        internal struct SystemConfigJobDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SystemConfigJobDto/backgroundTask`.
            internal var backgroundTask: Components.Schemas.JobSettingsDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigJobDto/faceDetection`.
            internal var faceDetection: Components.Schemas.JobSettingsDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigJobDto/library`.
            internal var library: Components.Schemas.JobSettingsDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigJobDto/metadataExtraction`.
            internal var metadataExtraction: Components.Schemas.JobSettingsDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigJobDto/migration`.
            internal var migration: Components.Schemas.JobSettingsDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigJobDto/notifications`.
            internal var notifications: Components.Schemas.JobSettingsDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigJobDto/search`.
            internal var search: Components.Schemas.JobSettingsDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigJobDto/sidecar`.
            internal var sidecar: Components.Schemas.JobSettingsDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigJobDto/smartSearch`.
            internal var smartSearch: Components.Schemas.JobSettingsDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigJobDto/thumbnailGeneration`.
            internal var thumbnailGeneration: Components.Schemas.JobSettingsDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigJobDto/videoConversion`.
            internal var videoConversion: Components.Schemas.JobSettingsDto
            /// Creates a new `SystemConfigJobDto`.
            ///
            /// - Parameters:
            ///   - backgroundTask:
            ///   - faceDetection:
            ///   - library:
            ///   - metadataExtraction:
            ///   - migration:
            ///   - notifications:
            ///   - search:
            ///   - sidecar:
            ///   - smartSearch:
            ///   - thumbnailGeneration:
            ///   - videoConversion:
            internal init(
                backgroundTask: Components.Schemas.JobSettingsDto,
                faceDetection: Components.Schemas.JobSettingsDto,
                library: Components.Schemas.JobSettingsDto,
                metadataExtraction: Components.Schemas.JobSettingsDto,
                migration: Components.Schemas.JobSettingsDto,
                notifications: Components.Schemas.JobSettingsDto,
                search: Components.Schemas.JobSettingsDto,
                sidecar: Components.Schemas.JobSettingsDto,
                smartSearch: Components.Schemas.JobSettingsDto,
                thumbnailGeneration: Components.Schemas.JobSettingsDto,
                videoConversion: Components.Schemas.JobSettingsDto
            ) {
                self.backgroundTask = backgroundTask
                self.faceDetection = faceDetection
                self.library = library
                self.metadataExtraction = metadataExtraction
                self.migration = migration
                self.notifications = notifications
                self.search = search
                self.sidecar = sidecar
                self.smartSearch = smartSearch
                self.thumbnailGeneration = thumbnailGeneration
                self.videoConversion = videoConversion
            }
            internal enum CodingKeys: String, CodingKey {
                case backgroundTask
                case faceDetection
                case library
                case metadataExtraction
                case migration
                case notifications
                case search
                case sidecar
                case smartSearch
                case thumbnailGeneration
                case videoConversion
            }
        }
        /// - Remark: Generated from `#/components/schemas/SystemConfigLibraryDto`.
        internal struct SystemConfigLibraryDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SystemConfigLibraryDto/scan`.
            internal var scan: Components.Schemas.SystemConfigLibraryScanDto
            /// - Remark: Generated from `#/components/schemas/SystemConfigLibraryDto/watch`.
            internal var watch: Components.Schemas.SystemConfigLibraryWatchDto
            /// Creates a new `SystemConfigLibraryDto`.
            ///
            /// - Parameters:
            ///   - scan:
            ///   - watch:
            internal init(
                scan: Components.Schemas.SystemConfigLibraryScanDto,
                watch: Components.Schemas.SystemConfigLibraryWatchDto
            ) {
                self.scan = scan
                self.watch = watch
            }
            internal enum CodingKeys: String, CodingKey {
                case scan
                case watch
            }
        }
        /// - Remark: Generated from `#/components/schemas/SystemConfigLibraryScanDto`.
        internal struct SystemConfigLibraryScanDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SystemConfigLibraryScanDto/cronExpression`.
            internal var cronExpression: Swift.String
            /// - Remark: Generated from `#/components/schemas/SystemConfigLibraryScanDto/enabled`.
            internal var enabled: Swift.Bool
            /// Creates a new `SystemConfigLibraryScanDto`.
            ///
            /// - Parameters:
            ///   - cronExpression:
            ///   - enabled:
            internal init(
                cronExpression: Swift.String,
                enabled: Swift.Bool
            ) {
                self.cronExpression = cronExpression
                self.enabled = enabled
            }
            internal enum CodingKeys: String, CodingKey {
                case cronExpression
                case enabled
            }
        }
        /// - Remark: Generated from `#/components/schemas/SystemConfigLibraryWatchDto`.
        internal struct SystemConfigLibraryWatchDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SystemConfigLibraryWatchDto/enabled`.
            internal var enabled: Swift.Bool
            /// Creates a new `SystemConfigLibraryWatchDto`.
            ///
            /// - Parameters:
            ///   - enabled:
            internal init(enabled: Swift.Bool) {
                self.enabled = enabled
            }
            internal enum CodingKeys: String, CodingKey {
                case enabled
            }
        }
        /// - Remark: Generated from `#/components/schemas/SystemConfigLoggingDto`.
        internal struct SystemConfigLoggingDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SystemConfigLoggingDto/enabled`.
            internal var enabled: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/SystemConfigLoggingDto/level`.
            internal var level: Components.Schemas.LogLevel
            /// Creates a new `SystemConfigLoggingDto`.
            ///
            /// - Parameters:
            ///   - enabled:
            ///   - level:
            internal init(
                enabled: Swift.Bool,
                level: Components.Schemas.LogLevel
            ) {
                self.enabled = enabled
                self.level = level
            }
            internal enum CodingKeys: String, CodingKey {
                case enabled
                case level
            }
        }
        /// - Remark: Generated from `#/components/schemas/SystemConfigMachineLearningDto`.
        internal struct SystemConfigMachineLearningDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SystemConfigMachineLearningDto/clip`.
            internal var clip: Components.Schemas.CLIPConfig
            /// - Remark: Generated from `#/components/schemas/SystemConfigMachineLearningDto/duplicateDetection`.
            internal var duplicateDetection: Components.Schemas.DuplicateDetectionConfig
            /// - Remark: Generated from `#/components/schemas/SystemConfigMachineLearningDto/enabled`.
            internal var enabled: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/SystemConfigMachineLearningDto/facialRecognition`.
            internal var facialRecognition: Components.Schemas.FacialRecognitionConfig
            /// - Remark: Generated from `#/components/schemas/SystemConfigMachineLearningDto/url`.
            internal var url: Swift.String
            /// Creates a new `SystemConfigMachineLearningDto`.
            ///
            /// - Parameters:
            ///   - clip:
            ///   - duplicateDetection:
            ///   - enabled:
            ///   - facialRecognition:
            ///   - url:
            internal init(
                clip: Components.Schemas.CLIPConfig,
                duplicateDetection: Components.Schemas.DuplicateDetectionConfig,
                enabled: Swift.Bool,
                facialRecognition: Components.Schemas.FacialRecognitionConfig,
                url: Swift.String
            ) {
                self.clip = clip
                self.duplicateDetection = duplicateDetection
                self.enabled = enabled
                self.facialRecognition = facialRecognition
                self.url = url
            }
            internal enum CodingKeys: String, CodingKey {
                case clip
                case duplicateDetection
                case enabled
                case facialRecognition
                case url
            }
        }
        /// - Remark: Generated from `#/components/schemas/SystemConfigMapDto`.
        internal struct SystemConfigMapDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SystemConfigMapDto/darkStyle`.
            internal var darkStyle: Swift.String
            /// - Remark: Generated from `#/components/schemas/SystemConfigMapDto/enabled`.
            internal var enabled: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/SystemConfigMapDto/lightStyle`.
            internal var lightStyle: Swift.String
            /// Creates a new `SystemConfigMapDto`.
            ///
            /// - Parameters:
            ///   - darkStyle:
            ///   - enabled:
            ///   - lightStyle:
            internal init(
                darkStyle: Swift.String,
                enabled: Swift.Bool,
                lightStyle: Swift.String
            ) {
                self.darkStyle = darkStyle
                self.enabled = enabled
                self.lightStyle = lightStyle
            }
            internal enum CodingKeys: String, CodingKey {
                case darkStyle
                case enabled
                case lightStyle
            }
        }
        /// - Remark: Generated from `#/components/schemas/SystemConfigNewVersionCheckDto`.
        internal struct SystemConfigNewVersionCheckDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SystemConfigNewVersionCheckDto/enabled`.
            internal var enabled: Swift.Bool
            /// Creates a new `SystemConfigNewVersionCheckDto`.
            ///
            /// - Parameters:
            ///   - enabled:
            internal init(enabled: Swift.Bool) {
                self.enabled = enabled
            }
            internal enum CodingKeys: String, CodingKey {
                case enabled
            }
        }
        /// - Remark: Generated from `#/components/schemas/SystemConfigNotificationsDto`.
        internal struct SystemConfigNotificationsDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SystemConfigNotificationsDto/smtp`.
            internal var smtp: Components.Schemas.SystemConfigSmtpDto
            /// Creates a new `SystemConfigNotificationsDto`.
            ///
            /// - Parameters:
            ///   - smtp:
            internal init(smtp: Components.Schemas.SystemConfigSmtpDto) {
                self.smtp = smtp
            }
            internal enum CodingKeys: String, CodingKey {
                case smtp
            }
        }
        /// - Remark: Generated from `#/components/schemas/SystemConfigOAuthDto`.
        internal struct SystemConfigOAuthDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SystemConfigOAuthDto/autoLaunch`.
            internal var autoLaunch: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/SystemConfigOAuthDto/autoRegister`.
            internal var autoRegister: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/SystemConfigOAuthDto/buttonText`.
            internal var buttonText: Swift.String
            /// - Remark: Generated from `#/components/schemas/SystemConfigOAuthDto/clientId`.
            internal var clientId: Swift.String
            /// - Remark: Generated from `#/components/schemas/SystemConfigOAuthDto/clientSecret`.
            internal var clientSecret: Swift.String
            /// - Remark: Generated from `#/components/schemas/SystemConfigOAuthDto/defaultStorageQuota`.
            internal var defaultStorageQuota: Swift.Double
            /// - Remark: Generated from `#/components/schemas/SystemConfigOAuthDto/enabled`.
            internal var enabled: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/SystemConfigOAuthDto/issuerUrl`.
            internal var issuerUrl: Swift.String
            /// - Remark: Generated from `#/components/schemas/SystemConfigOAuthDto/mobileOverrideEnabled`.
            internal var mobileOverrideEnabled: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/SystemConfigOAuthDto/mobileRedirectUri`.
            internal var mobileRedirectUri: Swift.String
            /// - Remark: Generated from `#/components/schemas/SystemConfigOAuthDto/scope`.
            internal var scope: Swift.String
            /// - Remark: Generated from `#/components/schemas/SystemConfigOAuthDto/signingAlgorithm`.
            internal var signingAlgorithm: Swift.String
            /// - Remark: Generated from `#/components/schemas/SystemConfigOAuthDto/storageLabelClaim`.
            internal var storageLabelClaim: Swift.String
            /// - Remark: Generated from `#/components/schemas/SystemConfigOAuthDto/storageQuotaClaim`.
            internal var storageQuotaClaim: Swift.String
            /// Creates a new `SystemConfigOAuthDto`.
            ///
            /// - Parameters:
            ///   - autoLaunch:
            ///   - autoRegister:
            ///   - buttonText:
            ///   - clientId:
            ///   - clientSecret:
            ///   - defaultStorageQuota:
            ///   - enabled:
            ///   - issuerUrl:
            ///   - mobileOverrideEnabled:
            ///   - mobileRedirectUri:
            ///   - scope:
            ///   - signingAlgorithm:
            ///   - storageLabelClaim:
            ///   - storageQuotaClaim:
            internal init(
                autoLaunch: Swift.Bool,
                autoRegister: Swift.Bool,
                buttonText: Swift.String,
                clientId: Swift.String,
                clientSecret: Swift.String,
                defaultStorageQuota: Swift.Double,
                enabled: Swift.Bool,
                issuerUrl: Swift.String,
                mobileOverrideEnabled: Swift.Bool,
                mobileRedirectUri: Swift.String,
                scope: Swift.String,
                signingAlgorithm: Swift.String,
                storageLabelClaim: Swift.String,
                storageQuotaClaim: Swift.String
            ) {
                self.autoLaunch = autoLaunch
                self.autoRegister = autoRegister
                self.buttonText = buttonText
                self.clientId = clientId
                self.clientSecret = clientSecret
                self.defaultStorageQuota = defaultStorageQuota
                self.enabled = enabled
                self.issuerUrl = issuerUrl
                self.mobileOverrideEnabled = mobileOverrideEnabled
                self.mobileRedirectUri = mobileRedirectUri
                self.scope = scope
                self.signingAlgorithm = signingAlgorithm
                self.storageLabelClaim = storageLabelClaim
                self.storageQuotaClaim = storageQuotaClaim
            }
            internal enum CodingKeys: String, CodingKey {
                case autoLaunch
                case autoRegister
                case buttonText
                case clientId
                case clientSecret
                case defaultStorageQuota
                case enabled
                case issuerUrl
                case mobileOverrideEnabled
                case mobileRedirectUri
                case scope
                case signingAlgorithm
                case storageLabelClaim
                case storageQuotaClaim
            }
        }
        /// - Remark: Generated from `#/components/schemas/SystemConfigPasswordLoginDto`.
        internal struct SystemConfigPasswordLoginDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SystemConfigPasswordLoginDto/enabled`.
            internal var enabled: Swift.Bool
            /// Creates a new `SystemConfigPasswordLoginDto`.
            ///
            /// - Parameters:
            ///   - enabled:
            internal init(enabled: Swift.Bool) {
                self.enabled = enabled
            }
            internal enum CodingKeys: String, CodingKey {
                case enabled
            }
        }
        /// - Remark: Generated from `#/components/schemas/SystemConfigReverseGeocodingDto`.
        internal struct SystemConfigReverseGeocodingDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SystemConfigReverseGeocodingDto/enabled`.
            internal var enabled: Swift.Bool
            /// Creates a new `SystemConfigReverseGeocodingDto`.
            ///
            /// - Parameters:
            ///   - enabled:
            internal init(enabled: Swift.Bool) {
                self.enabled = enabled
            }
            internal enum CodingKeys: String, CodingKey {
                case enabled
            }
        }
        /// - Remark: Generated from `#/components/schemas/SystemConfigServerDto`.
        internal struct SystemConfigServerDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SystemConfigServerDto/externalDomain`.
            internal var externalDomain: Swift.String
            /// - Remark: Generated from `#/components/schemas/SystemConfigServerDto/loginPageMessage`.
            internal var loginPageMessage: Swift.String
            /// Creates a new `SystemConfigServerDto`.
            ///
            /// - Parameters:
            ///   - externalDomain:
            ///   - loginPageMessage:
            internal init(
                externalDomain: Swift.String,
                loginPageMessage: Swift.String
            ) {
                self.externalDomain = externalDomain
                self.loginPageMessage = loginPageMessage
            }
            internal enum CodingKeys: String, CodingKey {
                case externalDomain
                case loginPageMessage
            }
        }
        /// - Remark: Generated from `#/components/schemas/SystemConfigSmtpDto`.
        internal struct SystemConfigSmtpDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SystemConfigSmtpDto/enabled`.
            internal var enabled: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/SystemConfigSmtpDto/from`.
            internal var from: Swift.String
            /// - Remark: Generated from `#/components/schemas/SystemConfigSmtpDto/replyTo`.
            internal var replyTo: Swift.String
            /// - Remark: Generated from `#/components/schemas/SystemConfigSmtpDto/transport`.
            internal var transport: Components.Schemas.SystemConfigSmtpTransportDto
            /// Creates a new `SystemConfigSmtpDto`.
            ///
            /// - Parameters:
            ///   - enabled:
            ///   - from:
            ///   - replyTo:
            ///   - transport:
            internal init(
                enabled: Swift.Bool,
                from: Swift.String,
                replyTo: Swift.String,
                transport: Components.Schemas.SystemConfigSmtpTransportDto
            ) {
                self.enabled = enabled
                self.from = from
                self.replyTo = replyTo
                self.transport = transport
            }
            internal enum CodingKeys: String, CodingKey {
                case enabled
                case from
                case replyTo
                case transport
            }
        }
        /// - Remark: Generated from `#/components/schemas/SystemConfigSmtpTransportDto`.
        internal struct SystemConfigSmtpTransportDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SystemConfigSmtpTransportDto/host`.
            internal var host: Swift.String
            /// - Remark: Generated from `#/components/schemas/SystemConfigSmtpTransportDto/ignoreCert`.
            internal var ignoreCert: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/SystemConfigSmtpTransportDto/password`.
            internal var password: Swift.String
            /// - Remark: Generated from `#/components/schemas/SystemConfigSmtpTransportDto/port`.
            internal var port: Swift.Double
            /// - Remark: Generated from `#/components/schemas/SystemConfigSmtpTransportDto/username`.
            internal var username: Swift.String
            /// Creates a new `SystemConfigSmtpTransportDto`.
            ///
            /// - Parameters:
            ///   - host:
            ///   - ignoreCert:
            ///   - password:
            ///   - port:
            ///   - username:
            internal init(
                host: Swift.String,
                ignoreCert: Swift.Bool,
                password: Swift.String,
                port: Swift.Double,
                username: Swift.String
            ) {
                self.host = host
                self.ignoreCert = ignoreCert
                self.password = password
                self.port = port
                self.username = username
            }
            internal enum CodingKeys: String, CodingKey {
                case host
                case ignoreCert
                case password
                case port
                case username
            }
        }
        /// - Remark: Generated from `#/components/schemas/SystemConfigStorageTemplateDto`.
        internal struct SystemConfigStorageTemplateDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SystemConfigStorageTemplateDto/enabled`.
            internal var enabled: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/SystemConfigStorageTemplateDto/hashVerificationEnabled`.
            internal var hashVerificationEnabled: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/SystemConfigStorageTemplateDto/template`.
            internal var template: Swift.String
            /// Creates a new `SystemConfigStorageTemplateDto`.
            ///
            /// - Parameters:
            ///   - enabled:
            ///   - hashVerificationEnabled:
            ///   - template:
            internal init(
                enabled: Swift.Bool,
                hashVerificationEnabled: Swift.Bool,
                template: Swift.String
            ) {
                self.enabled = enabled
                self.hashVerificationEnabled = hashVerificationEnabled
                self.template = template
            }
            internal enum CodingKeys: String, CodingKey {
                case enabled
                case hashVerificationEnabled
                case template
            }
        }
        /// - Remark: Generated from `#/components/schemas/SystemConfigTemplateStorageOptionDto`.
        internal struct SystemConfigTemplateStorageOptionDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SystemConfigTemplateStorageOptionDto/dayOptions`.
            internal var dayOptions: [Swift.String]
            /// - Remark: Generated from `#/components/schemas/SystemConfigTemplateStorageOptionDto/hourOptions`.
            internal var hourOptions: [Swift.String]
            /// - Remark: Generated from `#/components/schemas/SystemConfigTemplateStorageOptionDto/minuteOptions`.
            internal var minuteOptions: [Swift.String]
            /// - Remark: Generated from `#/components/schemas/SystemConfigTemplateStorageOptionDto/monthOptions`.
            internal var monthOptions: [Swift.String]
            /// - Remark: Generated from `#/components/schemas/SystemConfigTemplateStorageOptionDto/presetOptions`.
            internal var presetOptions: [Swift.String]
            /// - Remark: Generated from `#/components/schemas/SystemConfigTemplateStorageOptionDto/secondOptions`.
            internal var secondOptions: [Swift.String]
            /// - Remark: Generated from `#/components/schemas/SystemConfigTemplateStorageOptionDto/weekOptions`.
            internal var weekOptions: [Swift.String]
            /// - Remark: Generated from `#/components/schemas/SystemConfigTemplateStorageOptionDto/yearOptions`.
            internal var yearOptions: [Swift.String]
            /// Creates a new `SystemConfigTemplateStorageOptionDto`.
            ///
            /// - Parameters:
            ///   - dayOptions:
            ///   - hourOptions:
            ///   - minuteOptions:
            ///   - monthOptions:
            ///   - presetOptions:
            ///   - secondOptions:
            ///   - weekOptions:
            ///   - yearOptions:
            internal init(
                dayOptions: [Swift.String],
                hourOptions: [Swift.String],
                minuteOptions: [Swift.String],
                monthOptions: [Swift.String],
                presetOptions: [Swift.String],
                secondOptions: [Swift.String],
                weekOptions: [Swift.String],
                yearOptions: [Swift.String]
            ) {
                self.dayOptions = dayOptions
                self.hourOptions = hourOptions
                self.minuteOptions = minuteOptions
                self.monthOptions = monthOptions
                self.presetOptions = presetOptions
                self.secondOptions = secondOptions
                self.weekOptions = weekOptions
                self.yearOptions = yearOptions
            }
            internal enum CodingKeys: String, CodingKey {
                case dayOptions
                case hourOptions
                case minuteOptions
                case monthOptions
                case presetOptions
                case secondOptions
                case weekOptions
                case yearOptions
            }
        }
        /// - Remark: Generated from `#/components/schemas/SystemConfigThemeDto`.
        internal struct SystemConfigThemeDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SystemConfigThemeDto/customCss`.
            internal var customCss: Swift.String
            /// Creates a new `SystemConfigThemeDto`.
            ///
            /// - Parameters:
            ///   - customCss:
            internal init(customCss: Swift.String) {
                self.customCss = customCss
            }
            internal enum CodingKeys: String, CodingKey {
                case customCss
            }
        }
        /// - Remark: Generated from `#/components/schemas/SystemConfigTrashDto`.
        internal struct SystemConfigTrashDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SystemConfigTrashDto/days`.
            internal var days: Swift.Int
            /// - Remark: Generated from `#/components/schemas/SystemConfigTrashDto/enabled`.
            internal var enabled: Swift.Bool
            /// Creates a new `SystemConfigTrashDto`.
            ///
            /// - Parameters:
            ///   - days:
            ///   - enabled:
            internal init(
                days: Swift.Int,
                enabled: Swift.Bool
            ) {
                self.days = days
                self.enabled = enabled
            }
            internal enum CodingKeys: String, CodingKey {
                case days
                case enabled
            }
        }
        /// - Remark: Generated from `#/components/schemas/SystemConfigUserDto`.
        internal struct SystemConfigUserDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SystemConfigUserDto/deleteDelay`.
            internal var deleteDelay: Swift.Int
            /// Creates a new `SystemConfigUserDto`.
            ///
            /// - Parameters:
            ///   - deleteDelay:
            internal init(deleteDelay: Swift.Int) {
                self.deleteDelay = deleteDelay
            }
            internal enum CodingKeys: String, CodingKey {
                case deleteDelay
            }
        }
        /// - Remark: Generated from `#/components/schemas/TagResponseDto`.
        internal struct TagResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/TagResponseDto/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/TagResponseDto/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/TagResponseDto/type`.
            internal var _type: Components.Schemas.TagTypeEnum
            /// - Remark: Generated from `#/components/schemas/TagResponseDto/userId`.
            internal var userId: Swift.String
            /// Creates a new `TagResponseDto`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - name:
            ///   - _type:
            ///   - userId:
            internal init(
                id: Swift.String,
                name: Swift.String,
                _type: Components.Schemas.TagTypeEnum,
                userId: Swift.String
            ) {
                self.id = id
                self.name = name
                self._type = _type
                self.userId = userId
            }
            internal enum CodingKeys: String, CodingKey {
                case id
                case name
                case _type = "type"
                case userId
            }
        }
        /// - Remark: Generated from `#/components/schemas/TagTypeEnum`.
        @frozen internal enum TagTypeEnum: String, Codable, Hashable, Sendable {
            case OBJECT = "OBJECT"
            case FACE = "FACE"
            case CUSTOM = "CUSTOM"
        }
        /// - Remark: Generated from `#/components/schemas/TimeBucketResponseDto`.
        internal struct TimeBucketResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/TimeBucketResponseDto/count`.
            internal var count: Swift.Int
            /// - Remark: Generated from `#/components/schemas/TimeBucketResponseDto/timeBucket`.
            internal var timeBucket: Swift.String
            /// Creates a new `TimeBucketResponseDto`.
            ///
            /// - Parameters:
            ///   - count:
            ///   - timeBucket:
            internal init(
                count: Swift.Int,
                timeBucket: Swift.String
            ) {
                self.count = count
                self.timeBucket = timeBucket
            }
            internal enum CodingKeys: String, CodingKey {
                case count
                case timeBucket
            }
        }
        /// - Remark: Generated from `#/components/schemas/TimeBucketSize`.
        @frozen internal enum TimeBucketSize: String, Codable, Hashable, Sendable {
            case DAY = "DAY"
            case MONTH = "MONTH"
        }
        /// - Remark: Generated from `#/components/schemas/ToneMapping`.
        @frozen internal enum ToneMapping: String, Codable, Hashable, Sendable {
            case hable = "hable"
            case mobius = "mobius"
            case reinhard = "reinhard"
            case disabled = "disabled"
        }
        /// - Remark: Generated from `#/components/schemas/TranscodeHWAccel`.
        @frozen internal enum TranscodeHWAccel: String, Codable, Hashable, Sendable {
            case nvenc = "nvenc"
            case qsv = "qsv"
            case vaapi = "vaapi"
            case rkmpp = "rkmpp"
            case disabled = "disabled"
        }
        /// - Remark: Generated from `#/components/schemas/TranscodePolicy`.
        @frozen internal enum TranscodePolicy: String, Codable, Hashable, Sendable {
            case all = "all"
            case optimal = "optimal"
            case bitrate = "bitrate"
            case required = "required"
            case disabled = "disabled"
        }
        /// - Remark: Generated from `#/components/schemas/UpdateAlbumDto`.
        internal struct UpdateAlbumDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UpdateAlbumDto/albumName`.
            internal var albumName: Swift.String?
            /// - Remark: Generated from `#/components/schemas/UpdateAlbumDto/albumThumbnailAssetId`.
            internal var albumThumbnailAssetId: Swift.String?
            /// - Remark: Generated from `#/components/schemas/UpdateAlbumDto/description`.
            internal var description: Swift.String?
            /// - Remark: Generated from `#/components/schemas/UpdateAlbumDto/isActivityEnabled`.
            internal var isActivityEnabled: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/UpdateAlbumDto/order`.
            internal var order: Components.Schemas.AssetOrder?
            /// Creates a new `UpdateAlbumDto`.
            ///
            /// - Parameters:
            ///   - albumName:
            ///   - albumThumbnailAssetId:
            ///   - description:
            ///   - isActivityEnabled:
            ///   - order:
            internal init(
                albumName: Swift.String? = nil,
                albumThumbnailAssetId: Swift.String? = nil,
                description: Swift.String? = nil,
                isActivityEnabled: Swift.Bool? = nil,
                order: Components.Schemas.AssetOrder? = nil
            ) {
                self.albumName = albumName
                self.albumThumbnailAssetId = albumThumbnailAssetId
                self.description = description
                self.isActivityEnabled = isActivityEnabled
                self.order = order
            }
            internal enum CodingKeys: String, CodingKey {
                case albumName
                case albumThumbnailAssetId
                case description
                case isActivityEnabled
                case order
            }
        }
        /// - Remark: Generated from `#/components/schemas/UpdateAlbumUserDto`.
        internal struct UpdateAlbumUserDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UpdateAlbumUserDto/role`.
            internal var role: Components.Schemas.AlbumUserRole
            /// Creates a new `UpdateAlbumUserDto`.
            ///
            /// - Parameters:
            ///   - role:
            internal init(role: Components.Schemas.AlbumUserRole) {
                self.role = role
            }
            internal enum CodingKeys: String, CodingKey {
                case role
            }
        }
        /// - Remark: Generated from `#/components/schemas/UpdateAssetDto`.
        internal struct UpdateAssetDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UpdateAssetDto/dateTimeOriginal`.
            internal var dateTimeOriginal: Swift.String?
            /// - Remark: Generated from `#/components/schemas/UpdateAssetDto/description`.
            internal var description: Swift.String?
            /// - Remark: Generated from `#/components/schemas/UpdateAssetDto/isArchived`.
            internal var isArchived: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/UpdateAssetDto/isFavorite`.
            internal var isFavorite: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/UpdateAssetDto/latitude`.
            internal var latitude: Swift.Double?
            /// - Remark: Generated from `#/components/schemas/UpdateAssetDto/longitude`.
            internal var longitude: Swift.Double?
            /// Creates a new `UpdateAssetDto`.
            ///
            /// - Parameters:
            ///   - dateTimeOriginal:
            ///   - description:
            ///   - isArchived:
            ///   - isFavorite:
            ///   - latitude:
            ///   - longitude:
            internal init(
                dateTimeOriginal: Swift.String? = nil,
                description: Swift.String? = nil,
                isArchived: Swift.Bool? = nil,
                isFavorite: Swift.Bool? = nil,
                latitude: Swift.Double? = nil,
                longitude: Swift.Double? = nil
            ) {
                self.dateTimeOriginal = dateTimeOriginal
                self.description = description
                self.isArchived = isArchived
                self.isFavorite = isFavorite
                self.latitude = latitude
                self.longitude = longitude
            }
            internal enum CodingKeys: String, CodingKey {
                case dateTimeOriginal
                case description
                case isArchived
                case isFavorite
                case latitude
                case longitude
            }
        }
        /// - Remark: Generated from `#/components/schemas/UpdateLibraryDto`.
        internal struct UpdateLibraryDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UpdateLibraryDto/exclusionPatterns`.
            internal var exclusionPatterns: [Swift.String]?
            /// - Remark: Generated from `#/components/schemas/UpdateLibraryDto/importPaths`.
            internal var importPaths: [Swift.String]?
            /// - Remark: Generated from `#/components/schemas/UpdateLibraryDto/name`.
            internal var name: Swift.String?
            /// Creates a new `UpdateLibraryDto`.
            ///
            /// - Parameters:
            ///   - exclusionPatterns:
            ///   - importPaths:
            ///   - name:
            internal init(
                exclusionPatterns: [Swift.String]? = nil,
                importPaths: [Swift.String]? = nil,
                name: Swift.String? = nil
            ) {
                self.exclusionPatterns = exclusionPatterns
                self.importPaths = importPaths
                self.name = name
            }
            internal enum CodingKeys: String, CodingKey {
                case exclusionPatterns
                case importPaths
                case name
            }
        }
        /// - Remark: Generated from `#/components/schemas/UpdatePartnerDto`.
        internal struct UpdatePartnerDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UpdatePartnerDto/inTimeline`.
            internal var inTimeline: Swift.Bool
            /// Creates a new `UpdatePartnerDto`.
            ///
            /// - Parameters:
            ///   - inTimeline:
            internal init(inTimeline: Swift.Bool) {
                self.inTimeline = inTimeline
            }
            internal enum CodingKeys: String, CodingKey {
                case inTimeline
            }
        }
        /// - Remark: Generated from `#/components/schemas/UpdateStackParentDto`.
        internal struct UpdateStackParentDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UpdateStackParentDto/newParentId`.
            internal var newParentId: Swift.String
            /// - Remark: Generated from `#/components/schemas/UpdateStackParentDto/oldParentId`.
            internal var oldParentId: Swift.String
            /// Creates a new `UpdateStackParentDto`.
            ///
            /// - Parameters:
            ///   - newParentId:
            ///   - oldParentId:
            internal init(
                newParentId: Swift.String,
                oldParentId: Swift.String
            ) {
                self.newParentId = newParentId
                self.oldParentId = oldParentId
            }
            internal enum CodingKeys: String, CodingKey {
                case newParentId
                case oldParentId
            }
        }
        /// - Remark: Generated from `#/components/schemas/UpdateTagDto`.
        internal struct UpdateTagDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UpdateTagDto/name`.
            internal var name: Swift.String?
            /// Creates a new `UpdateTagDto`.
            ///
            /// - Parameters:
            ///   - name:
            internal init(name: Swift.String? = nil) {
                self.name = name
            }
            internal enum CodingKeys: String, CodingKey {
                case name
            }
        }
        /// - Remark: Generated from `#/components/schemas/UsageByUserDto`.
        internal struct UsageByUserDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UsageByUserDto/photos`.
            internal var photos: Swift.Int
            /// - Remark: Generated from `#/components/schemas/UsageByUserDto/quotaSizeInBytes`.
            internal var quotaSizeInBytes: Swift.Int64?
            /// - Remark: Generated from `#/components/schemas/UsageByUserDto/usage`.
            internal var usage: Swift.Int64
            /// - Remark: Generated from `#/components/schemas/UsageByUserDto/userId`.
            internal var userId: Swift.String
            /// - Remark: Generated from `#/components/schemas/UsageByUserDto/userName`.
            internal var userName: Swift.String
            /// - Remark: Generated from `#/components/schemas/UsageByUserDto/videos`.
            internal var videos: Swift.Int
            /// Creates a new `UsageByUserDto`.
            ///
            /// - Parameters:
            ///   - photos:
            ///   - quotaSizeInBytes:
            ///   - usage:
            ///   - userId:
            ///   - userName:
            ///   - videos:
            internal init(
                photos: Swift.Int,
                quotaSizeInBytes: Swift.Int64? = nil,
                usage: Swift.Int64,
                userId: Swift.String,
                userName: Swift.String,
                videos: Swift.Int
            ) {
                self.photos = photos
                self.quotaSizeInBytes = quotaSizeInBytes
                self.usage = usage
                self.userId = userId
                self.userName = userName
                self.videos = videos
            }
            internal enum CodingKeys: String, CodingKey {
                case photos
                case quotaSizeInBytes
                case usage
                case userId
                case userName
                case videos
            }
        }
        /// - Remark: Generated from `#/components/schemas/UserAdminCreateDto`.
        internal struct UserAdminCreateDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UserAdminCreateDto/email`.
            internal var email: Swift.String
            /// - Remark: Generated from `#/components/schemas/UserAdminCreateDto/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/UserAdminCreateDto/notify`.
            internal var notify: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/UserAdminCreateDto/password`.
            internal var password: Swift.String
            /// - Remark: Generated from `#/components/schemas/UserAdminCreateDto/quotaSizeInBytes`.
            internal var quotaSizeInBytes: Swift.Int64?
            /// - Remark: Generated from `#/components/schemas/UserAdminCreateDto/shouldChangePassword`.
            internal var shouldChangePassword: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/UserAdminCreateDto/storageLabel`.
            internal var storageLabel: Swift.String?
            /// Creates a new `UserAdminCreateDto`.
            ///
            /// - Parameters:
            ///   - email:
            ///   - name:
            ///   - notify:
            ///   - password:
            ///   - quotaSizeInBytes:
            ///   - shouldChangePassword:
            ///   - storageLabel:
            internal init(
                email: Swift.String,
                name: Swift.String,
                notify: Swift.Bool? = nil,
                password: Swift.String,
                quotaSizeInBytes: Swift.Int64? = nil,
                shouldChangePassword: Swift.Bool? = nil,
                storageLabel: Swift.String? = nil
            ) {
                self.email = email
                self.name = name
                self.notify = notify
                self.password = password
                self.quotaSizeInBytes = quotaSizeInBytes
                self.shouldChangePassword = shouldChangePassword
                self.storageLabel = storageLabel
            }
            internal enum CodingKeys: String, CodingKey {
                case email
                case name
                case notify
                case password
                case quotaSizeInBytes
                case shouldChangePassword
                case storageLabel
            }
        }
        /// - Remark: Generated from `#/components/schemas/UserAdminDeleteDto`.
        internal struct UserAdminDeleteDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UserAdminDeleteDto/force`.
            internal var force: Swift.Bool?
            /// Creates a new `UserAdminDeleteDto`.
            ///
            /// - Parameters:
            ///   - force:
            internal init(force: Swift.Bool? = nil) {
                self.force = force
            }
            internal enum CodingKeys: String, CodingKey {
                case force
            }
        }
        /// - Remark: Generated from `#/components/schemas/UserAdminResponseDto`.
        internal struct UserAdminResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UserAdminResponseDto/avatarColor`.
            internal var avatarColor: Components.Schemas.UserAvatarColor
            /// - Remark: Generated from `#/components/schemas/UserAdminResponseDto/createdAt`.
            internal var createdAt: Foundation.Date
            /// - Remark: Generated from `#/components/schemas/UserAdminResponseDto/deletedAt`.
            internal var deletedAt: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/UserAdminResponseDto/email`.
            internal var email: Swift.String
            /// - Remark: Generated from `#/components/schemas/UserAdminResponseDto/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/UserAdminResponseDto/isAdmin`.
            internal var isAdmin: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/UserAdminResponseDto/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/UserAdminResponseDto/oauthId`.
            internal var oauthId: Swift.String
            /// - Remark: Generated from `#/components/schemas/UserAdminResponseDto/profileImagePath`.
            internal var profileImagePath: Swift.String
            /// - Remark: Generated from `#/components/schemas/UserAdminResponseDto/quotaSizeInBytes`.
            internal var quotaSizeInBytes: Swift.Int64?
            /// - Remark: Generated from `#/components/schemas/UserAdminResponseDto/quotaUsageInBytes`.
            internal var quotaUsageInBytes: Swift.Int64?
            /// - Remark: Generated from `#/components/schemas/UserAdminResponseDto/shouldChangePassword`.
            internal var shouldChangePassword: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/UserAdminResponseDto/status`.
            internal var status: Components.Schemas.UserStatus
            /// - Remark: Generated from `#/components/schemas/UserAdminResponseDto/storageLabel`.
            internal var storageLabel: Swift.String?
            /// - Remark: Generated from `#/components/schemas/UserAdminResponseDto/updatedAt`.
            internal var updatedAt: Foundation.Date
            /// Creates a new `UserAdminResponseDto`.
            ///
            /// - Parameters:
            ///   - avatarColor:
            ///   - createdAt:
            ///   - deletedAt:
            ///   - email:
            ///   - id:
            ///   - isAdmin:
            ///   - name:
            ///   - oauthId:
            ///   - profileImagePath:
            ///   - quotaSizeInBytes:
            ///   - quotaUsageInBytes:
            ///   - shouldChangePassword:
            ///   - status:
            ///   - storageLabel:
            ///   - updatedAt:
            internal init(
                avatarColor: Components.Schemas.UserAvatarColor,
                createdAt: Foundation.Date,
                deletedAt: Foundation.Date? = nil,
                email: Swift.String,
                id: Swift.String,
                isAdmin: Swift.Bool,
                name: Swift.String,
                oauthId: Swift.String,
                profileImagePath: Swift.String,
                quotaSizeInBytes: Swift.Int64? = nil,
                quotaUsageInBytes: Swift.Int64? = nil,
                shouldChangePassword: Swift.Bool,
                status: Components.Schemas.UserStatus,
                storageLabel: Swift.String? = nil,
                updatedAt: Foundation.Date
            ) {
                self.avatarColor = avatarColor
                self.createdAt = createdAt
                self.deletedAt = deletedAt
                self.email = email
                self.id = id
                self.isAdmin = isAdmin
                self.name = name
                self.oauthId = oauthId
                self.profileImagePath = profileImagePath
                self.quotaSizeInBytes = quotaSizeInBytes
                self.quotaUsageInBytes = quotaUsageInBytes
                self.shouldChangePassword = shouldChangePassword
                self.status = status
                self.storageLabel = storageLabel
                self.updatedAt = updatedAt
            }
            internal enum CodingKeys: String, CodingKey {
                case avatarColor
                case createdAt
                case deletedAt
                case email
                case id
                case isAdmin
                case name
                case oauthId
                case profileImagePath
                case quotaSizeInBytes
                case quotaUsageInBytes
                case shouldChangePassword
                case status
                case storageLabel
                case updatedAt
            }
        }
        /// - Remark: Generated from `#/components/schemas/UserAdminUpdateDto`.
        internal struct UserAdminUpdateDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UserAdminUpdateDto/email`.
            internal var email: Swift.String?
            /// - Remark: Generated from `#/components/schemas/UserAdminUpdateDto/name`.
            internal var name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/UserAdminUpdateDto/password`.
            internal var password: Swift.String?
            /// - Remark: Generated from `#/components/schemas/UserAdminUpdateDto/quotaSizeInBytes`.
            internal var quotaSizeInBytes: Swift.Int64?
            /// - Remark: Generated from `#/components/schemas/UserAdminUpdateDto/shouldChangePassword`.
            internal var shouldChangePassword: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/UserAdminUpdateDto/storageLabel`.
            internal var storageLabel: Swift.String?
            /// Creates a new `UserAdminUpdateDto`.
            ///
            /// - Parameters:
            ///   - email:
            ///   - name:
            ///   - password:
            ///   - quotaSizeInBytes:
            ///   - shouldChangePassword:
            ///   - storageLabel:
            internal init(
                email: Swift.String? = nil,
                name: Swift.String? = nil,
                password: Swift.String? = nil,
                quotaSizeInBytes: Swift.Int64? = nil,
                shouldChangePassword: Swift.Bool? = nil,
                storageLabel: Swift.String? = nil
            ) {
                self.email = email
                self.name = name
                self.password = password
                self.quotaSizeInBytes = quotaSizeInBytes
                self.shouldChangePassword = shouldChangePassword
                self.storageLabel = storageLabel
            }
            internal enum CodingKeys: String, CodingKey {
                case email
                case name
                case password
                case quotaSizeInBytes
                case shouldChangePassword
                case storageLabel
            }
        }
        /// - Remark: Generated from `#/components/schemas/UserAvatarColor`.
        @frozen internal enum UserAvatarColor: String, Codable, Hashable, Sendable {
            case primary = "primary"
            case pink = "pink"
            case red = "red"
            case yellow = "yellow"
            case blue = "blue"
            case green = "green"
            case purple = "purple"
            case orange = "orange"
            case gray = "gray"
            case amber = "amber"
        }
        /// - Remark: Generated from `#/components/schemas/UserPreferencesResponseDto`.
        internal struct UserPreferencesResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UserPreferencesResponseDto/avatar`.
            internal var avatar: Components.Schemas.AvatarResponse
            /// - Remark: Generated from `#/components/schemas/UserPreferencesResponseDto/download`.
            internal var download: Components.Schemas.DownloadResponse
            /// - Remark: Generated from `#/components/schemas/UserPreferencesResponseDto/emailNotifications`.
            internal var emailNotifications: Components.Schemas.EmailNotificationsResponse
            /// - Remark: Generated from `#/components/schemas/UserPreferencesResponseDto/memories`.
            internal var memories: Components.Schemas.MemoryResponse
            /// Creates a new `UserPreferencesResponseDto`.
            ///
            /// - Parameters:
            ///   - avatar:
            ///   - download:
            ///   - emailNotifications:
            ///   - memories:
            internal init(
                avatar: Components.Schemas.AvatarResponse,
                download: Components.Schemas.DownloadResponse,
                emailNotifications: Components.Schemas.EmailNotificationsResponse,
                memories: Components.Schemas.MemoryResponse
            ) {
                self.avatar = avatar
                self.download = download
                self.emailNotifications = emailNotifications
                self.memories = memories
            }
            internal enum CodingKeys: String, CodingKey {
                case avatar
                case download
                case emailNotifications
                case memories
            }
        }
        /// - Remark: Generated from `#/components/schemas/UserPreferencesUpdateDto`.
        internal struct UserPreferencesUpdateDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UserPreferencesUpdateDto/avatar`.
            internal var avatar: Components.Schemas.AvatarUpdate?
            /// - Remark: Generated from `#/components/schemas/UserPreferencesUpdateDto/download`.
            internal var download: Components.Schemas.DownloadUpdate?
            /// - Remark: Generated from `#/components/schemas/UserPreferencesUpdateDto/emailNotifications`.
            internal var emailNotifications: Components.Schemas.EmailNotificationsUpdate?
            /// - Remark: Generated from `#/components/schemas/UserPreferencesUpdateDto/memories`.
            internal var memories: Components.Schemas.MemoryUpdate?
            /// Creates a new `UserPreferencesUpdateDto`.
            ///
            /// - Parameters:
            ///   - avatar:
            ///   - download:
            ///   - emailNotifications:
            ///   - memories:
            internal init(
                avatar: Components.Schemas.AvatarUpdate? = nil,
                download: Components.Schemas.DownloadUpdate? = nil,
                emailNotifications: Components.Schemas.EmailNotificationsUpdate? = nil,
                memories: Components.Schemas.MemoryUpdate? = nil
            ) {
                self.avatar = avatar
                self.download = download
                self.emailNotifications = emailNotifications
                self.memories = memories
            }
            internal enum CodingKeys: String, CodingKey {
                case avatar
                case download
                case emailNotifications
                case memories
            }
        }
        /// - Remark: Generated from `#/components/schemas/UserResponseDto`.
        internal struct UserResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UserResponseDto/avatarColor`.
            internal var avatarColor: Components.Schemas.UserAvatarColor
            /// - Remark: Generated from `#/components/schemas/UserResponseDto/email`.
            internal var email: Swift.String
            /// - Remark: Generated from `#/components/schemas/UserResponseDto/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/UserResponseDto/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/UserResponseDto/profileImagePath`.
            internal var profileImagePath: Swift.String
            /// Creates a new `UserResponseDto`.
            ///
            /// - Parameters:
            ///   - avatarColor:
            ///   - email:
            ///   - id:
            ///   - name:
            ///   - profileImagePath:
            internal init(
                avatarColor: Components.Schemas.UserAvatarColor,
                email: Swift.String,
                id: Swift.String,
                name: Swift.String,
                profileImagePath: Swift.String
            ) {
                self.avatarColor = avatarColor
                self.email = email
                self.id = id
                self.name = name
                self.profileImagePath = profileImagePath
            }
            internal enum CodingKeys: String, CodingKey {
                case avatarColor
                case email
                case id
                case name
                case profileImagePath
            }
        }
        /// - Remark: Generated from `#/components/schemas/UserStatus`.
        @frozen internal enum UserStatus: String, Codable, Hashable, Sendable {
            case active = "active"
            case removing = "removing"
            case deleted = "deleted"
        }
        /// - Remark: Generated from `#/components/schemas/UserUpdateMeDto`.
        internal struct UserUpdateMeDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UserUpdateMeDto/email`.
            internal var email: Swift.String?
            /// - Remark: Generated from `#/components/schemas/UserUpdateMeDto/name`.
            internal var name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/UserUpdateMeDto/password`.
            internal var password: Swift.String?
            /// Creates a new `UserUpdateMeDto`.
            ///
            /// - Parameters:
            ///   - email:
            ///   - name:
            ///   - password:
            internal init(
                email: Swift.String? = nil,
                name: Swift.String? = nil,
                password: Swift.String? = nil
            ) {
                self.email = email
                self.name = name
                self.password = password
            }
            internal enum CodingKeys: String, CodingKey {
                case email
                case name
                case password
            }
        }
        /// - Remark: Generated from `#/components/schemas/ValidateAccessTokenResponseDto`.
        internal struct ValidateAccessTokenResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ValidateAccessTokenResponseDto/authStatus`.
            internal var authStatus: Swift.Bool
            /// Creates a new `ValidateAccessTokenResponseDto`.
            ///
            /// - Parameters:
            ///   - authStatus:
            internal init(authStatus: Swift.Bool) {
                self.authStatus = authStatus
            }
            internal enum CodingKeys: String, CodingKey {
                case authStatus
            }
        }
        /// - Remark: Generated from `#/components/schemas/ValidateLibraryDto`.
        internal struct ValidateLibraryDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ValidateLibraryDto/exclusionPatterns`.
            internal var exclusionPatterns: [Swift.String]?
            /// - Remark: Generated from `#/components/schemas/ValidateLibraryDto/importPaths`.
            internal var importPaths: [Swift.String]?
            /// Creates a new `ValidateLibraryDto`.
            ///
            /// - Parameters:
            ///   - exclusionPatterns:
            ///   - importPaths:
            internal init(
                exclusionPatterns: [Swift.String]? = nil,
                importPaths: [Swift.String]? = nil
            ) {
                self.exclusionPatterns = exclusionPatterns
                self.importPaths = importPaths
            }
            internal enum CodingKeys: String, CodingKey {
                case exclusionPatterns
                case importPaths
            }
        }
        /// - Remark: Generated from `#/components/schemas/ValidateLibraryImportPathResponseDto`.
        internal struct ValidateLibraryImportPathResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ValidateLibraryImportPathResponseDto/importPath`.
            internal var importPath: Swift.String
            /// - Remark: Generated from `#/components/schemas/ValidateLibraryImportPathResponseDto/isValid`.
            internal var isValid: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/ValidateLibraryImportPathResponseDto/message`.
            internal var message: Swift.String?
            /// Creates a new `ValidateLibraryImportPathResponseDto`.
            ///
            /// - Parameters:
            ///   - importPath:
            ///   - isValid:
            ///   - message:
            internal init(
                importPath: Swift.String,
                isValid: Swift.Bool,
                message: Swift.String? = nil
            ) {
                self.importPath = importPath
                self.isValid = isValid
                self.message = message
            }
            internal enum CodingKeys: String, CodingKey {
                case importPath
                case isValid
                case message
            }
        }
        /// - Remark: Generated from `#/components/schemas/ValidateLibraryResponseDto`.
        internal struct ValidateLibraryResponseDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ValidateLibraryResponseDto/importPaths`.
            internal var importPaths: [Components.Schemas.ValidateLibraryImportPathResponseDto]?
            /// Creates a new `ValidateLibraryResponseDto`.
            ///
            /// - Parameters:
            ///   - importPaths:
            internal init(importPaths: [Components.Schemas.ValidateLibraryImportPathResponseDto]? = nil) {
                self.importPaths = importPaths
            }
            internal enum CodingKeys: String, CodingKey {
                case importPaths
            }
        }
        /// - Remark: Generated from `#/components/schemas/VideoCodec`.
        @frozen internal enum VideoCodec: String, Codable, Hashable, Sendable {
            case h264 = "h264"
            case hevc = "hevc"
            case vp9 = "vp9"
            case av1 = "av1"
        }
    }
    /// Types generated from the `#/components/parameters` section of the OpenAPI document.
    internal enum Parameters {}
    /// Types generated from the `#/components/requestBodies` section of the OpenAPI document.
    internal enum RequestBodies {}
    /// Types generated from the `#/components/responses` section of the OpenAPI document.
    internal enum Responses {}
    /// Types generated from the `#/components/headers` section of the OpenAPI document.
    internal enum Headers {}
}

/// API operations, with input and output types, generated from `#/paths` in the OpenAPI document.
internal enum Operations {
    /// - Remark: HTTP `GET /activities`.
    /// - Remark: Generated from `#/paths//activities/get(getActivities)`.
    internal enum getActivities {
        internal static let id: Swift.String = "getActivities"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/activities/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/activities/GET/query/albumId`.
                internal var albumId: Swift.String
                /// - Remark: Generated from `#/paths/activities/GET/query/assetId`.
                internal var assetId: Swift.String?
                /// - Remark: Generated from `#/paths/activities/GET/query/level`.
                internal var level: Components.Schemas.ReactionLevel?
                /// - Remark: Generated from `#/paths/activities/GET/query/type`.
                internal var _type: Components.Schemas.ReactionType?
                /// - Remark: Generated from `#/paths/activities/GET/query/userId`.
                internal var userId: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - albumId:
                ///   - assetId:
                ///   - level:
                ///   - _type:
                ///   - userId:
                internal init(
                    albumId: Swift.String,
                    assetId: Swift.String? = nil,
                    level: Components.Schemas.ReactionLevel? = nil,
                    _type: Components.Schemas.ReactionType? = nil,
                    userId: Swift.String? = nil
                ) {
                    self.albumId = albumId
                    self.assetId = assetId
                    self.level = level
                    self._type = _type
                    self.userId = userId
                }
            }
            internal var query: Operations.getActivities.Input.Query
            /// - Remark: Generated from `#/paths/activities/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getActivities.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getActivities.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getActivities.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.getActivities.Input.Query,
                headers: Operations.getActivities.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/activities/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/activities/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.ActivityResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.ActivityResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getActivities.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getActivities.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//activities/get(getActivities)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getActivities.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getActivities.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /activities`.
    /// - Remark: Generated from `#/paths//activities/post(createActivity)`.
    internal enum createActivity {
        internal static let id: Swift.String = "createActivity"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/activities/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.createActivity.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.createActivity.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.createActivity.Input.Headers
            /// - Remark: Generated from `#/paths/activities/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/activities/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.ActivityCreateDto)
            }
            internal var body: Operations.createActivity.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.createActivity.Input.Headers = .init(),
                body: Operations.createActivity.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/activities/POST/responses/201/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/activities/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.ActivityResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ActivityResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.createActivity.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.createActivity.Output.Created.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//activities/post(createActivity)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.createActivity.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.createActivity.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /activities/statistics`.
    /// - Remark: Generated from `#/paths//activities/statistics/get(getActivityStatistics)`.
    internal enum getActivityStatistics {
        internal static let id: Swift.String = "getActivityStatistics"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/activities/statistics/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/activities/statistics/GET/query/albumId`.
                internal var albumId: Swift.String
                /// - Remark: Generated from `#/paths/activities/statistics/GET/query/assetId`.
                internal var assetId: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - albumId:
                ///   - assetId:
                internal init(
                    albumId: Swift.String,
                    assetId: Swift.String? = nil
                ) {
                    self.albumId = albumId
                    self.assetId = assetId
                }
            }
            internal var query: Operations.getActivityStatistics.Input.Query
            /// - Remark: Generated from `#/paths/activities/statistics/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getActivityStatistics.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getActivityStatistics.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getActivityStatistics.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.getActivityStatistics.Input.Query,
                headers: Operations.getActivityStatistics.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/activities/statistics/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/activities/statistics/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.ActivityStatisticsResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ActivityStatisticsResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getActivityStatistics.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getActivityStatistics.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//activities/statistics/get(getActivityStatistics)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getActivityStatistics.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getActivityStatistics.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `DELETE /activities/{id}`.
    /// - Remark: Generated from `#/paths//activities/{id}/delete(deleteActivity)`.
    internal enum deleteActivity {
        internal static let id: Swift.String = "deleteActivity"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/activities/{id}/DELETE/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/activities/{id}/DELETE/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.deleteActivity.Input.Path
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            internal init(path: Operations.deleteActivity.Input.Path) {
                self.path = path
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//activities/{id}/delete(deleteActivity)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.deleteActivity.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.deleteActivity.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `GET /admin/users`.
    /// - Remark: Generated from `#/paths//admin/users/get(searchUsersAdmin)`.
    internal enum searchUsersAdmin {
        internal static let id: Swift.String = "searchUsersAdmin"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/admin/users/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/admin/users/GET/query/withDeleted`.
                internal var withDeleted: Swift.Bool?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - withDeleted:
                internal init(withDeleted: Swift.Bool? = nil) {
                    self.withDeleted = withDeleted
                }
            }
            internal var query: Operations.searchUsersAdmin.Input.Query
            /// - Remark: Generated from `#/paths/admin/users/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.searchUsersAdmin.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.searchUsersAdmin.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.searchUsersAdmin.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.searchUsersAdmin.Input.Query = .init(),
                headers: Operations.searchUsersAdmin.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/admin/users/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/admin/users/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.UserAdminResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.UserAdminResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.searchUsersAdmin.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.searchUsersAdmin.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//admin/users/get(searchUsersAdmin)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.searchUsersAdmin.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.searchUsersAdmin.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /admin/users`.
    /// - Remark: Generated from `#/paths//admin/users/post(createUserAdmin)`.
    internal enum createUserAdmin {
        internal static let id: Swift.String = "createUserAdmin"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/admin/users/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.createUserAdmin.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.createUserAdmin.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.createUserAdmin.Input.Headers
            /// - Remark: Generated from `#/paths/admin/users/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/admin/users/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.UserAdminCreateDto)
            }
            internal var body: Operations.createUserAdmin.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.createUserAdmin.Input.Headers = .init(),
                body: Operations.createUserAdmin.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/admin/users/POST/responses/201/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/admin/users/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.UserAdminResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.UserAdminResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.createUserAdmin.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.createUserAdmin.Output.Created.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//admin/users/post(createUserAdmin)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.createUserAdmin.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.createUserAdmin.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /admin/users/{id}`.
    /// - Remark: Generated from `#/paths//admin/users/{id}/get(getUserAdmin)`.
    internal enum getUserAdmin {
        internal static let id: Swift.String = "getUserAdmin"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/admin/users/{id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/admin/users/{id}/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.getUserAdmin.Input.Path
            /// - Remark: Generated from `#/paths/admin/users/{id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUserAdmin.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUserAdmin.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getUserAdmin.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getUserAdmin.Input.Path,
                headers: Operations.getUserAdmin.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/admin/users/{id}/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/admin/users/{id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.UserAdminResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.UserAdminResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserAdmin.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserAdmin.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//admin/users/{id}/get(getUserAdmin)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getUserAdmin.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getUserAdmin.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PUT /admin/users/{id}`.
    /// - Remark: Generated from `#/paths//admin/users/{id}/put(updateUserAdmin)`.
    internal enum updateUserAdmin {
        internal static let id: Swift.String = "updateUserAdmin"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/admin/users/{id}/PUT/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/admin/users/{id}/PUT/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.updateUserAdmin.Input.Path
            /// - Remark: Generated from `#/paths/admin/users/{id}/PUT/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updateUserAdmin.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updateUserAdmin.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.updateUserAdmin.Input.Headers
            /// - Remark: Generated from `#/paths/admin/users/{id}/PUT/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/admin/users/{id}/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.UserAdminUpdateDto)
            }
            internal var body: Operations.updateUserAdmin.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.updateUserAdmin.Input.Path,
                headers: Operations.updateUserAdmin.Input.Headers = .init(),
                body: Operations.updateUserAdmin.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/admin/users/{id}/PUT/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/admin/users/{id}/PUT/responses/200/content/application\/json`.
                    case json(Components.Schemas.UserAdminResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.UserAdminResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.updateUserAdmin.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.updateUserAdmin.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//admin/users/{id}/put(updateUserAdmin)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.updateUserAdmin.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.updateUserAdmin.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `DELETE /admin/users/{id}`.
    /// - Remark: Generated from `#/paths//admin/users/{id}/delete(deleteUserAdmin)`.
    internal enum deleteUserAdmin {
        internal static let id: Swift.String = "deleteUserAdmin"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/admin/users/{id}/DELETE/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/admin/users/{id}/DELETE/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.deleteUserAdmin.Input.Path
            /// - Remark: Generated from `#/paths/admin/users/{id}/DELETE/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.deleteUserAdmin.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.deleteUserAdmin.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.deleteUserAdmin.Input.Headers
            /// - Remark: Generated from `#/paths/admin/users/{id}/DELETE/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/admin/users/{id}/DELETE/requestBody/content/application\/json`.
                case json(Components.Schemas.UserAdminDeleteDto)
            }
            internal var body: Operations.deleteUserAdmin.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.deleteUserAdmin.Input.Path,
                headers: Operations.deleteUserAdmin.Input.Headers = .init(),
                body: Operations.deleteUserAdmin.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/admin/users/{id}/DELETE/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/admin/users/{id}/DELETE/responses/200/content/application\/json`.
                    case json(Components.Schemas.UserAdminResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.UserAdminResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.deleteUserAdmin.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.deleteUserAdmin.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//admin/users/{id}/delete(deleteUserAdmin)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.deleteUserAdmin.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.deleteUserAdmin.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /admin/users/{id}/preferences`.
    /// - Remark: Generated from `#/paths//admin/users/{id}/preferences/get(getUserPreferencesAdmin)`.
    internal enum getUserPreferencesAdmin {
        internal static let id: Swift.String = "getUserPreferencesAdmin"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/admin/users/{id}/preferences/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/admin/users/{id}/preferences/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.getUserPreferencesAdmin.Input.Path
            /// - Remark: Generated from `#/paths/admin/users/{id}/preferences/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUserPreferencesAdmin.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUserPreferencesAdmin.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getUserPreferencesAdmin.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getUserPreferencesAdmin.Input.Path,
                headers: Operations.getUserPreferencesAdmin.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/admin/users/{id}/preferences/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/admin/users/{id}/preferences/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.UserPreferencesResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.UserPreferencesResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUserPreferencesAdmin.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUserPreferencesAdmin.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//admin/users/{id}/preferences/get(getUserPreferencesAdmin)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getUserPreferencesAdmin.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getUserPreferencesAdmin.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PUT /admin/users/{id}/preferences`.
    /// - Remark: Generated from `#/paths//admin/users/{id}/preferences/put(updateUserPreferencesAdmin)`.
    internal enum updateUserPreferencesAdmin {
        internal static let id: Swift.String = "updateUserPreferencesAdmin"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/admin/users/{id}/preferences/PUT/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/admin/users/{id}/preferences/PUT/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.updateUserPreferencesAdmin.Input.Path
            /// - Remark: Generated from `#/paths/admin/users/{id}/preferences/PUT/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updateUserPreferencesAdmin.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updateUserPreferencesAdmin.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.updateUserPreferencesAdmin.Input.Headers
            /// - Remark: Generated from `#/paths/admin/users/{id}/preferences/PUT/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/admin/users/{id}/preferences/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.UserPreferencesUpdateDto)
            }
            internal var body: Operations.updateUserPreferencesAdmin.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.updateUserPreferencesAdmin.Input.Path,
                headers: Operations.updateUserPreferencesAdmin.Input.Headers = .init(),
                body: Operations.updateUserPreferencesAdmin.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/admin/users/{id}/preferences/PUT/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/admin/users/{id}/preferences/PUT/responses/200/content/application\/json`.
                    case json(Components.Schemas.UserPreferencesResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.UserPreferencesResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.updateUserPreferencesAdmin.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.updateUserPreferencesAdmin.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//admin/users/{id}/preferences/put(updateUserPreferencesAdmin)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.updateUserPreferencesAdmin.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.updateUserPreferencesAdmin.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /admin/users/{id}/restore`.
    /// - Remark: Generated from `#/paths//admin/users/{id}/restore/post(restoreUserAdmin)`.
    internal enum restoreUserAdmin {
        internal static let id: Swift.String = "restoreUserAdmin"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/admin/users/{id}/restore/POST/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/admin/users/{id}/restore/POST/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.restoreUserAdmin.Input.Path
            /// - Remark: Generated from `#/paths/admin/users/{id}/restore/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.restoreUserAdmin.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.restoreUserAdmin.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.restoreUserAdmin.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.restoreUserAdmin.Input.Path,
                headers: Operations.restoreUserAdmin.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/admin/users/{id}/restore/POST/responses/201/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/admin/users/{id}/restore/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.UserAdminResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.UserAdminResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.restoreUserAdmin.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.restoreUserAdmin.Output.Created.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//admin/users/{id}/restore/post(restoreUserAdmin)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.restoreUserAdmin.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.restoreUserAdmin.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /albums`.
    /// - Remark: Generated from `#/paths//albums/get(getAllAlbums)`.
    internal enum getAllAlbums {
        internal static let id: Swift.String = "getAllAlbums"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/albums/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// Only returns albums that contain the asset
                /// Ignores the shared parameter
                /// undefined: get all albums
                ///
                /// - Remark: Generated from `#/paths/albums/GET/query/assetId`.
                internal var assetId: Swift.String?
                /// - Remark: Generated from `#/paths/albums/GET/query/shared`.
                internal var shared: Swift.Bool?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - assetId: Only returns albums that contain the asset
                ///   - shared:
                internal init(
                    assetId: Swift.String? = nil,
                    shared: Swift.Bool? = nil
                ) {
                    self.assetId = assetId
                    self.shared = shared
                }
            }
            internal var query: Operations.getAllAlbums.Input.Query
            /// - Remark: Generated from `#/paths/albums/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAllAlbums.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAllAlbums.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getAllAlbums.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.getAllAlbums.Input.Query = .init(),
                headers: Operations.getAllAlbums.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/albums/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/albums/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.AlbumResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.AlbumResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getAllAlbums.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getAllAlbums.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//albums/get(getAllAlbums)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getAllAlbums.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getAllAlbums.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /albums`.
    /// - Remark: Generated from `#/paths//albums/post(createAlbum)`.
    internal enum createAlbum {
        internal static let id: Swift.String = "createAlbum"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/albums/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.createAlbum.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.createAlbum.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.createAlbum.Input.Headers
            /// - Remark: Generated from `#/paths/albums/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/albums/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.CreateAlbumDto)
            }
            internal var body: Operations.createAlbum.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.createAlbum.Input.Headers = .init(),
                body: Operations.createAlbum.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/albums/POST/responses/201/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/albums/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.AlbumResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.AlbumResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.createAlbum.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.createAlbum.Output.Created.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//albums/post(createAlbum)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.createAlbum.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.createAlbum.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /albums/count`.
    /// - Remark: Generated from `#/paths//albums/count/get(getAlbumCount)`.
    internal enum getAlbumCount {
        internal static let id: Swift.String = "getAlbumCount"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/albums/count/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAlbumCount.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAlbumCount.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getAlbumCount.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getAlbumCount.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/albums/count/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/albums/count/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.AlbumCountResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.AlbumCountResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getAlbumCount.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getAlbumCount.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//albums/count/get(getAlbumCount)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getAlbumCount.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getAlbumCount.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /albums/{id}`.
    /// - Remark: Generated from `#/paths//albums/{id}/get(getAlbumInfo)`.
    internal enum getAlbumInfo {
        internal static let id: Swift.String = "getAlbumInfo"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/albums/{id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/albums/{id}/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.getAlbumInfo.Input.Path
            /// - Remark: Generated from `#/paths/albums/{id}/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/albums/{id}/GET/query/key`.
                internal var key: Swift.String?
                /// - Remark: Generated from `#/paths/albums/{id}/GET/query/withoutAssets`.
                internal var withoutAssets: Swift.Bool?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - key:
                ///   - withoutAssets:
                internal init(
                    key: Swift.String? = nil,
                    withoutAssets: Swift.Bool? = nil
                ) {
                    self.key = key
                    self.withoutAssets = withoutAssets
                }
            }
            internal var query: Operations.getAlbumInfo.Input.Query
            /// - Remark: Generated from `#/paths/albums/{id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAlbumInfo.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAlbumInfo.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getAlbumInfo.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.getAlbumInfo.Input.Path,
                query: Operations.getAlbumInfo.Input.Query = .init(),
                headers: Operations.getAlbumInfo.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/albums/{id}/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/albums/{id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.AlbumResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.AlbumResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getAlbumInfo.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getAlbumInfo.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//albums/{id}/get(getAlbumInfo)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getAlbumInfo.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getAlbumInfo.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PATCH /albums/{id}`.
    /// - Remark: Generated from `#/paths//albums/{id}/patch(updateAlbumInfo)`.
    internal enum updateAlbumInfo {
        internal static let id: Swift.String = "updateAlbumInfo"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/albums/{id}/PATCH/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/albums/{id}/PATCH/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.updateAlbumInfo.Input.Path
            /// - Remark: Generated from `#/paths/albums/{id}/PATCH/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updateAlbumInfo.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updateAlbumInfo.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.updateAlbumInfo.Input.Headers
            /// - Remark: Generated from `#/paths/albums/{id}/PATCH/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/albums/{id}/PATCH/requestBody/content/application\/json`.
                case json(Components.Schemas.UpdateAlbumDto)
            }
            internal var body: Operations.updateAlbumInfo.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.updateAlbumInfo.Input.Path,
                headers: Operations.updateAlbumInfo.Input.Headers = .init(),
                body: Operations.updateAlbumInfo.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/albums/{id}/PATCH/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/albums/{id}/PATCH/responses/200/content/application\/json`.
                    case json(Components.Schemas.AlbumResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.AlbumResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.updateAlbumInfo.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.updateAlbumInfo.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//albums/{id}/patch(updateAlbumInfo)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.updateAlbumInfo.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.updateAlbumInfo.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `DELETE /albums/{id}`.
    /// - Remark: Generated from `#/paths//albums/{id}/delete(deleteAlbum)`.
    internal enum deleteAlbum {
        internal static let id: Swift.String = "deleteAlbum"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/albums/{id}/DELETE/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/albums/{id}/DELETE/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.deleteAlbum.Input.Path
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            internal init(path: Operations.deleteAlbum.Input.Path) {
                self.path = path
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// Creates a new `Ok`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//albums/{id}/delete(deleteAlbum)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.deleteAlbum.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.deleteAlbum.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `PUT /albums/{id}/assets`.
    /// - Remark: Generated from `#/paths//albums/{id}/assets/put(addAssetsToAlbum)`.
    internal enum addAssetsToAlbum {
        internal static let id: Swift.String = "addAssetsToAlbum"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/albums/{id}/assets/PUT/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/albums/{id}/assets/PUT/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.addAssetsToAlbum.Input.Path
            /// - Remark: Generated from `#/paths/albums/{id}/assets/PUT/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/albums/{id}/assets/PUT/query/key`.
                internal var key: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - key:
                internal init(key: Swift.String? = nil) {
                    self.key = key
                }
            }
            internal var query: Operations.addAssetsToAlbum.Input.Query
            /// - Remark: Generated from `#/paths/albums/{id}/assets/PUT/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.addAssetsToAlbum.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.addAssetsToAlbum.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.addAssetsToAlbum.Input.Headers
            /// - Remark: Generated from `#/paths/albums/{id}/assets/PUT/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/albums/{id}/assets/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.BulkIdsDto)
            }
            internal var body: Operations.addAssetsToAlbum.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.addAssetsToAlbum.Input.Path,
                query: Operations.addAssetsToAlbum.Input.Query = .init(),
                headers: Operations.addAssetsToAlbum.Input.Headers = .init(),
                body: Operations.addAssetsToAlbum.Input.Body
            ) {
                self.path = path
                self.query = query
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/albums/{id}/assets/PUT/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/albums/{id}/assets/PUT/responses/200/content/application\/json`.
                    case json([Components.Schemas.BulkIdResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.BulkIdResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.addAssetsToAlbum.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.addAssetsToAlbum.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//albums/{id}/assets/put(addAssetsToAlbum)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.addAssetsToAlbum.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.addAssetsToAlbum.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `DELETE /albums/{id}/assets`.
    /// - Remark: Generated from `#/paths//albums/{id}/assets/delete(removeAssetFromAlbum)`.
    internal enum removeAssetFromAlbum {
        internal static let id: Swift.String = "removeAssetFromAlbum"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/albums/{id}/assets/DELETE/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/albums/{id}/assets/DELETE/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.removeAssetFromAlbum.Input.Path
            /// - Remark: Generated from `#/paths/albums/{id}/assets/DELETE/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.removeAssetFromAlbum.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.removeAssetFromAlbum.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.removeAssetFromAlbum.Input.Headers
            /// - Remark: Generated from `#/paths/albums/{id}/assets/DELETE/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/albums/{id}/assets/DELETE/requestBody/content/application\/json`.
                case json(Components.Schemas.BulkIdsDto)
            }
            internal var body: Operations.removeAssetFromAlbum.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.removeAssetFromAlbum.Input.Path,
                headers: Operations.removeAssetFromAlbum.Input.Headers = .init(),
                body: Operations.removeAssetFromAlbum.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/albums/{id}/assets/DELETE/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/albums/{id}/assets/DELETE/responses/200/content/application\/json`.
                    case json([Components.Schemas.BulkIdResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.BulkIdResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.removeAssetFromAlbum.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.removeAssetFromAlbum.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//albums/{id}/assets/delete(removeAssetFromAlbum)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.removeAssetFromAlbum.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.removeAssetFromAlbum.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PUT /albums/{id}/user/{userId}`.
    /// - Remark: Generated from `#/paths//albums/{id}/user/{userId}/put(updateAlbumUser)`.
    internal enum updateAlbumUser {
        internal static let id: Swift.String = "updateAlbumUser"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/albums/{id}/user/{userId}/PUT/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/albums/{id}/user/{userId}/PUT/path/id`.
                internal var id: Swift.String
                /// - Remark: Generated from `#/paths/albums/{id}/user/{userId}/PUT/path/userId`.
                internal var userId: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                ///   - userId:
                internal init(
                    id: Swift.String,
                    userId: Swift.String
                ) {
                    self.id = id
                    self.userId = userId
                }
            }
            internal var path: Operations.updateAlbumUser.Input.Path
            /// - Remark: Generated from `#/paths/albums/{id}/user/{userId}/PUT/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/albums/{id}/user/{userId}/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.UpdateAlbumUserDto)
            }
            internal var body: Operations.updateAlbumUser.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - body:
            internal init(
                path: Operations.updateAlbumUser.Input.Path,
                body: Operations.updateAlbumUser.Input.Body
            ) {
                self.path = path
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// Creates a new `Ok`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//albums/{id}/user/{userId}/put(updateAlbumUser)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.updateAlbumUser.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.updateAlbumUser.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `DELETE /albums/{id}/user/{userId}`.
    /// - Remark: Generated from `#/paths//albums/{id}/user/{userId}/delete(removeUserFromAlbum)`.
    internal enum removeUserFromAlbum {
        internal static let id: Swift.String = "removeUserFromAlbum"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/albums/{id}/user/{userId}/DELETE/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/albums/{id}/user/{userId}/DELETE/path/id`.
                internal var id: Swift.String
                /// - Remark: Generated from `#/paths/albums/{id}/user/{userId}/DELETE/path/userId`.
                internal var userId: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                ///   - userId:
                internal init(
                    id: Swift.String,
                    userId: Swift.String
                ) {
                    self.id = id
                    self.userId = userId
                }
            }
            internal var path: Operations.removeUserFromAlbum.Input.Path
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            internal init(path: Operations.removeUserFromAlbum.Input.Path) {
                self.path = path
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// Creates a new `Ok`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//albums/{id}/user/{userId}/delete(removeUserFromAlbum)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.removeUserFromAlbum.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.removeUserFromAlbum.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `PUT /albums/{id}/users`.
    /// - Remark: Generated from `#/paths//albums/{id}/users/put(addUsersToAlbum)`.
    internal enum addUsersToAlbum {
        internal static let id: Swift.String = "addUsersToAlbum"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/albums/{id}/users/PUT/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/albums/{id}/users/PUT/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.addUsersToAlbum.Input.Path
            /// - Remark: Generated from `#/paths/albums/{id}/users/PUT/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.addUsersToAlbum.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.addUsersToAlbum.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.addUsersToAlbum.Input.Headers
            /// - Remark: Generated from `#/paths/albums/{id}/users/PUT/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/albums/{id}/users/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.AddUsersDto)
            }
            internal var body: Operations.addUsersToAlbum.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.addUsersToAlbum.Input.Path,
                headers: Operations.addUsersToAlbum.Input.Headers = .init(),
                body: Operations.addUsersToAlbum.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/albums/{id}/users/PUT/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/albums/{id}/users/PUT/responses/200/content/application\/json`.
                    case json(Components.Schemas.AlbumResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.AlbumResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.addUsersToAlbum.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.addUsersToAlbum.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//albums/{id}/users/put(addUsersToAlbum)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.addUsersToAlbum.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.addUsersToAlbum.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /api-keys`.
    /// - Remark: Generated from `#/paths//api-keys/get(getApiKeys)`.
    internal enum getApiKeys {
        internal static let id: Swift.String = "getApiKeys"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api-keys/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getApiKeys.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getApiKeys.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getApiKeys.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getApiKeys.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api-keys/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api-keys/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.APIKeyResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.APIKeyResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getApiKeys.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getApiKeys.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api-keys/get(getApiKeys)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getApiKeys.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getApiKeys.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /api-keys`.
    /// - Remark: Generated from `#/paths//api-keys/post(createApiKey)`.
    internal enum createApiKey {
        internal static let id: Swift.String = "createApiKey"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api-keys/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.createApiKey.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.createApiKey.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.createApiKey.Input.Headers
            /// - Remark: Generated from `#/paths/api-keys/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api-keys/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.APIKeyCreateDto)
            }
            internal var body: Operations.createApiKey.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.createApiKey.Input.Headers = .init(),
                body: Operations.createApiKey.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api-keys/POST/responses/201/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api-keys/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.APIKeyCreateResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.APIKeyCreateResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.createApiKey.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.createApiKey.Output.Created.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api-keys/post(createApiKey)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.createApiKey.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.createApiKey.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /api-keys/{id}`.
    /// - Remark: Generated from `#/paths//api-keys/{id}/get(getApiKey)`.
    internal enum getApiKey {
        internal static let id: Swift.String = "getApiKey"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api-keys/{id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api-keys/{id}/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.getApiKey.Input.Path
            /// - Remark: Generated from `#/paths/api-keys/{id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getApiKey.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getApiKey.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getApiKey.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getApiKey.Input.Path,
                headers: Operations.getApiKey.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api-keys/{id}/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api-keys/{id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.APIKeyResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.APIKeyResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getApiKey.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getApiKey.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api-keys/{id}/get(getApiKey)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getApiKey.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getApiKey.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PUT /api-keys/{id}`.
    /// - Remark: Generated from `#/paths//api-keys/{id}/put(updateApiKey)`.
    internal enum updateApiKey {
        internal static let id: Swift.String = "updateApiKey"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api-keys/{id}/PUT/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api-keys/{id}/PUT/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.updateApiKey.Input.Path
            /// - Remark: Generated from `#/paths/api-keys/{id}/PUT/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updateApiKey.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updateApiKey.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.updateApiKey.Input.Headers
            /// - Remark: Generated from `#/paths/api-keys/{id}/PUT/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api-keys/{id}/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.APIKeyUpdateDto)
            }
            internal var body: Operations.updateApiKey.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.updateApiKey.Input.Path,
                headers: Operations.updateApiKey.Input.Headers = .init(),
                body: Operations.updateApiKey.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api-keys/{id}/PUT/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api-keys/{id}/PUT/responses/200/content/application\/json`.
                    case json(Components.Schemas.APIKeyResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.APIKeyResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.updateApiKey.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.updateApiKey.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api-keys/{id}/put(updateApiKey)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.updateApiKey.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.updateApiKey.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `DELETE /api-keys/{id}`.
    /// - Remark: Generated from `#/paths//api-keys/{id}/delete(deleteApiKey)`.
    internal enum deleteApiKey {
        internal static let id: Swift.String = "deleteApiKey"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api-keys/{id}/DELETE/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api-keys/{id}/DELETE/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.deleteApiKey.Input.Path
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            internal init(path: Operations.deleteApiKey.Input.Path) {
                self.path = path
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// Creates a new `Ok`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api-keys/{id}/delete(deleteApiKey)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.deleteApiKey.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.deleteApiKey.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `POST /assets`.
    /// - Remark: Generated from `#/paths//assets/post(uploadAsset)`.
    internal enum uploadAsset {
        internal static let id: Swift.String = "uploadAsset"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/assets/POST/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/POST/query/key`.
                internal var key: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - key:
                internal init(key: Swift.String? = nil) {
                    self.key = key
                }
            }
            internal var query: Operations.uploadAsset.Input.Query
            /// - Remark: Generated from `#/paths/assets/POST/header`.
            internal struct Headers: Sendable, Hashable {
                /// sha1 checksum that can be used for duplicate detection before the file is uploaded
                ///
                /// - Remark: Generated from `#/paths/assets/POST/header/x-immich-checksum`.
                internal var x_hyphen_immich_hyphen_checksum: Swift.String?
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.uploadAsset.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - x_hyphen_immich_hyphen_checksum: sha1 checksum that can be used for duplicate detection before the file is uploaded
                ///   - accept:
                internal init(
                    x_hyphen_immich_hyphen_checksum: Swift.String? = nil,
                    accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.uploadAsset.AcceptableContentType>] = .defaultValues()
                ) {
                    self.x_hyphen_immich_hyphen_checksum = x_hyphen_immich_hyphen_checksum
                    self.accept = accept
                }
            }
            internal var headers: Operations.uploadAsset.Input.Headers
            /// - Remark: Generated from `#/paths/assets/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/POST/requestBody/content/multipart\/form-data`.
                case multipartForm(OpenAPIRuntime.MultipartBody<Components.Schemas.AssetMediaCreateDto>)
            }
            internal var body: Operations.uploadAsset.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            ///   - body:
            internal init(
                query: Operations.uploadAsset.Input.Query = .init(),
                headers: Operations.uploadAsset.Input.Headers = .init(),
                body: Operations.uploadAsset.Input.Body
            ) {
                self.query = query
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/POST/responses/201/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/assets/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.AssetMediaResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.AssetMediaResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.uploadAsset.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.uploadAsset.Output.Created.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//assets/post(uploadAsset)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.uploadAsset.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.uploadAsset.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PUT /assets`.
    /// - Remark: Generated from `#/paths//assets/put(updateAssets)`.
    internal enum updateAssets {
        internal static let id: Swift.String = "updateAssets"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/assets/PUT/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.AssetBulkUpdateDto)
            }
            internal var body: Operations.updateAssets.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - body:
            internal init(body: Operations.updateAssets.Input.Body) {
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//assets/put(updateAssets)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.updateAssets.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.updateAssets.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `DELETE /assets`.
    /// - Remark: Generated from `#/paths//assets/delete(deleteAssets)`.
    internal enum deleteAssets {
        internal static let id: Swift.String = "deleteAssets"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/assets/DELETE/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/DELETE/requestBody/content/application\/json`.
                case json(Components.Schemas.AssetBulkDeleteDto)
            }
            internal var body: Operations.deleteAssets.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - body:
            internal init(body: Operations.deleteAssets.Input.Body) {
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//assets/delete(deleteAssets)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.deleteAssets.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.deleteAssets.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// Checks if assets exist by checksums
    ///
    /// - Remark: HTTP `POST /assets/bulk-upload-check`.
    /// - Remark: Generated from `#/paths//assets/bulk-upload-check/post(checkBulkUpload)`.
    internal enum checkBulkUpload {
        internal static let id: Swift.String = "checkBulkUpload"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/assets/bulk-upload-check/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.checkBulkUpload.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.checkBulkUpload.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.checkBulkUpload.Input.Headers
            /// - Remark: Generated from `#/paths/assets/bulk-upload-check/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/bulk-upload-check/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.AssetBulkUploadCheckDto)
            }
            internal var body: Operations.checkBulkUpload.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.checkBulkUpload.Input.Headers = .init(),
                body: Operations.checkBulkUpload.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/bulk-upload-check/POST/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/assets/bulk-upload-check/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.AssetBulkUploadCheckResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.AssetBulkUploadCheckResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.checkBulkUpload.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.checkBulkUpload.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//assets/bulk-upload-check/post(checkBulkUpload)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.checkBulkUpload.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.checkBulkUpload.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get all asset of a device that are in the database, ID only.
    ///
    /// - Remark: HTTP `GET /assets/device/{deviceId}`.
    /// - Remark: Generated from `#/paths//assets/device/{deviceId}/get(getAllUserAssetsByDeviceId)`.
    internal enum getAllUserAssetsByDeviceId {
        internal static let id: Swift.String = "getAllUserAssetsByDeviceId"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/assets/device/{deviceId}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/device/{deviceId}/GET/path/deviceId`.
                internal var deviceId: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - deviceId:
                internal init(deviceId: Swift.String) {
                    self.deviceId = deviceId
                }
            }
            internal var path: Operations.getAllUserAssetsByDeviceId.Input.Path
            /// - Remark: Generated from `#/paths/assets/device/{deviceId}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAllUserAssetsByDeviceId.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAllUserAssetsByDeviceId.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getAllUserAssetsByDeviceId.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getAllUserAssetsByDeviceId.Input.Path,
                headers: Operations.getAllUserAssetsByDeviceId.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/device/{deviceId}/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/assets/device/{deviceId}/GET/responses/200/content/application\/json`.
                    case json([Swift.String])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Swift.String] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getAllUserAssetsByDeviceId.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getAllUserAssetsByDeviceId.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//assets/device/{deviceId}/get(getAllUserAssetsByDeviceId)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getAllUserAssetsByDeviceId.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getAllUserAssetsByDeviceId.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Checks if multiple assets exist on the server and returns all existing - used by background backup
    ///
    /// - Remark: HTTP `POST /assets/exist`.
    /// - Remark: Generated from `#/paths//assets/exist/post(checkExistingAssets)`.
    internal enum checkExistingAssets {
        internal static let id: Swift.String = "checkExistingAssets"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/assets/exist/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.checkExistingAssets.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.checkExistingAssets.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.checkExistingAssets.Input.Headers
            /// - Remark: Generated from `#/paths/assets/exist/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/exist/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.CheckExistingAssetsDto)
            }
            internal var body: Operations.checkExistingAssets.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.checkExistingAssets.Input.Headers = .init(),
                body: Operations.checkExistingAssets.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/exist/POST/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/assets/exist/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.CheckExistingAssetsResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.CheckExistingAssetsResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.checkExistingAssets.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.checkExistingAssets.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//assets/exist/post(checkExistingAssets)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.checkExistingAssets.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.checkExistingAssets.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /assets/jobs`.
    /// - Remark: Generated from `#/paths//assets/jobs/post(runAssetJobs)`.
    internal enum runAssetJobs {
        internal static let id: Swift.String = "runAssetJobs"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/assets/jobs/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/jobs/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.AssetJobsDto)
            }
            internal var body: Operations.runAssetJobs.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - body:
            internal init(body: Operations.runAssetJobs.Input.Body) {
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//assets/jobs/post(runAssetJobs)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.runAssetJobs.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.runAssetJobs.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `GET /assets/memory-lane`.
    /// - Remark: Generated from `#/paths//assets/memory-lane/get(getMemoryLane)`.
    internal enum getMemoryLane {
        internal static let id: Swift.String = "getMemoryLane"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/assets/memory-lane/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/memory-lane/GET/query/day`.
                internal var day: Swift.Int
                /// - Remark: Generated from `#/paths/assets/memory-lane/GET/query/month`.
                internal var month: Swift.Int
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - day:
                ///   - month:
                internal init(
                    day: Swift.Int,
                    month: Swift.Int
                ) {
                    self.day = day
                    self.month = month
                }
            }
            internal var query: Operations.getMemoryLane.Input.Query
            /// - Remark: Generated from `#/paths/assets/memory-lane/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getMemoryLane.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getMemoryLane.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getMemoryLane.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.getMemoryLane.Input.Query,
                headers: Operations.getMemoryLane.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/memory-lane/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/assets/memory-lane/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.MemoryLaneResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.MemoryLaneResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getMemoryLane.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getMemoryLane.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//assets/memory-lane/get(getMemoryLane)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getMemoryLane.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getMemoryLane.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /assets/random`.
    /// - Remark: Generated from `#/paths//assets/random/get(getRandom)`.
    internal enum getRandom {
        internal static let id: Swift.String = "getRandom"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/assets/random/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/random/GET/query/count`.
                internal var count: Swift.Double?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - count:
                internal init(count: Swift.Double? = nil) {
                    self.count = count
                }
            }
            internal var query: Operations.getRandom.Input.Query
            /// - Remark: Generated from `#/paths/assets/random/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getRandom.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getRandom.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getRandom.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.getRandom.Input.Query = .init(),
                headers: Operations.getRandom.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/random/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/assets/random/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.AssetResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.AssetResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getRandom.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getRandom.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//assets/random/get(getRandom)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getRandom.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getRandom.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PUT /assets/stack/parent`.
    /// - Remark: Generated from `#/paths//assets/stack/parent/put(updateStackParent)`.
    internal enum updateStackParent {
        internal static let id: Swift.String = "updateStackParent"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/assets/stack/parent/PUT/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/stack/parent/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.UpdateStackParentDto)
            }
            internal var body: Operations.updateStackParent.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - body:
            internal init(body: Operations.updateStackParent.Input.Body) {
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// Creates a new `Ok`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//assets/stack/parent/put(updateStackParent)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.updateStackParent.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.updateStackParent.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `GET /assets/statistics`.
    /// - Remark: Generated from `#/paths//assets/statistics/get(getAssetStatistics)`.
    internal enum getAssetStatistics {
        internal static let id: Swift.String = "getAssetStatistics"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/assets/statistics/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/statistics/GET/query/isArchived`.
                internal var isArchived: Swift.Bool?
                /// - Remark: Generated from `#/paths/assets/statistics/GET/query/isFavorite`.
                internal var isFavorite: Swift.Bool?
                /// - Remark: Generated from `#/paths/assets/statistics/GET/query/isTrashed`.
                internal var isTrashed: Swift.Bool?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - isArchived:
                ///   - isFavorite:
                ///   - isTrashed:
                internal init(
                    isArchived: Swift.Bool? = nil,
                    isFavorite: Swift.Bool? = nil,
                    isTrashed: Swift.Bool? = nil
                ) {
                    self.isArchived = isArchived
                    self.isFavorite = isFavorite
                    self.isTrashed = isTrashed
                }
            }
            internal var query: Operations.getAssetStatistics.Input.Query
            /// - Remark: Generated from `#/paths/assets/statistics/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAssetStatistics.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAssetStatistics.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getAssetStatistics.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.getAssetStatistics.Input.Query = .init(),
                headers: Operations.getAssetStatistics.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/statistics/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/assets/statistics/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.AssetStatsResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.AssetStatsResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getAssetStatistics.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getAssetStatistics.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//assets/statistics/get(getAssetStatistics)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getAssetStatistics.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getAssetStatistics.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /assets/{id}`.
    /// - Remark: Generated from `#/paths//assets/{id}/get(getAssetInfo)`.
    internal enum getAssetInfo {
        internal static let id: Swift.String = "getAssetInfo"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/assets/{id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/{id}/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.getAssetInfo.Input.Path
            /// - Remark: Generated from `#/paths/assets/{id}/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/{id}/GET/query/key`.
                internal var key: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - key:
                internal init(key: Swift.String? = nil) {
                    self.key = key
                }
            }
            internal var query: Operations.getAssetInfo.Input.Query
            /// - Remark: Generated from `#/paths/assets/{id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAssetInfo.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAssetInfo.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getAssetInfo.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.getAssetInfo.Input.Path,
                query: Operations.getAssetInfo.Input.Query = .init(),
                headers: Operations.getAssetInfo.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/{id}/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/assets/{id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.AssetResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.AssetResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getAssetInfo.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getAssetInfo.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//assets/{id}/get(getAssetInfo)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getAssetInfo.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getAssetInfo.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PUT /assets/{id}`.
    /// - Remark: Generated from `#/paths//assets/{id}/put(updateAsset)`.
    internal enum updateAsset {
        internal static let id: Swift.String = "updateAsset"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/assets/{id}/PUT/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/{id}/PUT/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.updateAsset.Input.Path
            /// - Remark: Generated from `#/paths/assets/{id}/PUT/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updateAsset.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updateAsset.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.updateAsset.Input.Headers
            /// - Remark: Generated from `#/paths/assets/{id}/PUT/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/{id}/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.UpdateAssetDto)
            }
            internal var body: Operations.updateAsset.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.updateAsset.Input.Path,
                headers: Operations.updateAsset.Input.Headers = .init(),
                body: Operations.updateAsset.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/{id}/PUT/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/assets/{id}/PUT/responses/200/content/application\/json`.
                    case json(Components.Schemas.AssetResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.AssetResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.updateAsset.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.updateAsset.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//assets/{id}/put(updateAsset)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.updateAsset.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.updateAsset.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /assets/{id}/original`.
    /// - Remark: Generated from `#/paths//assets/{id}/original/get(downloadAsset)`.
    internal enum downloadAsset {
        internal static let id: Swift.String = "downloadAsset"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/assets/{id}/original/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/{id}/original/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.downloadAsset.Input.Path
            /// - Remark: Generated from `#/paths/assets/{id}/original/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/{id}/original/GET/query/key`.
                internal var key: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - key:
                internal init(key: Swift.String? = nil) {
                    self.key = key
                }
            }
            internal var query: Operations.downloadAsset.Input.Query
            /// - Remark: Generated from `#/paths/assets/{id}/original/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.downloadAsset.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.downloadAsset.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.downloadAsset.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.downloadAsset.Input.Path,
                query: Operations.downloadAsset.Input.Query = .init(),
                headers: Operations.downloadAsset.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/{id}/original/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/assets/{id}/original/GET/responses/200/content/application\/octet-stream`.
                    case binary(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.binary`.
                    ///
                    /// - Throws: An error if `self` is not `.binary`.
                    /// - SeeAlso: `.binary`.
                    internal var binary: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .binary(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.downloadAsset.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.downloadAsset.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//assets/{id}/original/get(downloadAsset)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.downloadAsset.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.downloadAsset.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case binary
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/octet-stream":
                    self = .binary
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .binary:
                    return "application/octet-stream"
                }
            }
            internal static var allCases: [Self] {
                [
                    .binary
                ]
            }
        }
    }
    /// Replace the asset with new file, without changing its id
    ///
    /// - Remark: HTTP `PUT /assets/{id}/original`.
    /// - Remark: Generated from `#/paths//assets/{id}/original/put(replaceAsset)`.
    internal enum replaceAsset {
        internal static let id: Swift.String = "replaceAsset"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/assets/{id}/original/PUT/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/{id}/original/PUT/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.replaceAsset.Input.Path
            /// - Remark: Generated from `#/paths/assets/{id}/original/PUT/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/{id}/original/PUT/query/key`.
                internal var key: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - key:
                internal init(key: Swift.String? = nil) {
                    self.key = key
                }
            }
            internal var query: Operations.replaceAsset.Input.Query
            /// - Remark: Generated from `#/paths/assets/{id}/original/PUT/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.replaceAsset.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.replaceAsset.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.replaceAsset.Input.Headers
            /// - Remark: Generated from `#/paths/assets/{id}/original/PUT/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/{id}/original/PUT/requestBody/content/multipart\/form-data`.
                case multipartForm(OpenAPIRuntime.MultipartBody<Components.Schemas.AssetMediaReplaceDto>)
            }
            internal var body: Operations.replaceAsset.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.replaceAsset.Input.Path,
                query: Operations.replaceAsset.Input.Query = .init(),
                headers: Operations.replaceAsset.Input.Headers = .init(),
                body: Operations.replaceAsset.Input.Body
            ) {
                self.path = path
                self.query = query
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/{id}/original/PUT/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/assets/{id}/original/PUT/responses/200/content/application\/json`.
                    case json(Components.Schemas.AssetMediaResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.AssetMediaResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.replaceAsset.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.replaceAsset.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//assets/{id}/original/put(replaceAsset)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.replaceAsset.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.replaceAsset.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /assets/{id}/thumbnail`.
    /// - Remark: Generated from `#/paths//assets/{id}/thumbnail/get(viewAsset)`.
    internal enum viewAsset {
        internal static let id: Swift.String = "viewAsset"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/assets/{id}/thumbnail/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/{id}/thumbnail/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.viewAsset.Input.Path
            /// - Remark: Generated from `#/paths/assets/{id}/thumbnail/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/{id}/thumbnail/GET/query/key`.
                internal var key: Swift.String?
                /// - Remark: Generated from `#/paths/assets/{id}/thumbnail/GET/query/size`.
                internal var size: Components.Schemas.AssetMediaSize?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - key:
                ///   - size:
                internal init(
                    key: Swift.String? = nil,
                    size: Components.Schemas.AssetMediaSize? = nil
                ) {
                    self.key = key
                    self.size = size
                }
            }
            internal var query: Operations.viewAsset.Input.Query
            /// - Remark: Generated from `#/paths/assets/{id}/thumbnail/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.viewAsset.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.viewAsset.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.viewAsset.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.viewAsset.Input.Path,
                query: Operations.viewAsset.Input.Query = .init(),
                headers: Operations.viewAsset.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/{id}/thumbnail/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/assets/{id}/thumbnail/GET/responses/200/content/application\/octet-stream`.
                    case binary(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.binary`.
                    ///
                    /// - Throws: An error if `self` is not `.binary`.
                    /// - SeeAlso: `.binary`.
                    internal var binary: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .binary(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.viewAsset.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.viewAsset.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//assets/{id}/thumbnail/get(viewAsset)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.viewAsset.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.viewAsset.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case binary
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/octet-stream":
                    self = .binary
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .binary:
                    return "application/octet-stream"
                }
            }
            internal static var allCases: [Self] {
                [
                    .binary
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /assets/{id}/video/playback`.
    /// - Remark: Generated from `#/paths//assets/{id}/video/playback/get(playAssetVideo)`.
    internal enum playAssetVideo {
        internal static let id: Swift.String = "playAssetVideo"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/assets/{id}/video/playback/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/{id}/video/playback/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.playAssetVideo.Input.Path
            /// - Remark: Generated from `#/paths/assets/{id}/video/playback/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/{id}/video/playback/GET/query/key`.
                internal var key: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - key:
                internal init(key: Swift.String? = nil) {
                    self.key = key
                }
            }
            internal var query: Operations.playAssetVideo.Input.Query
            /// - Remark: Generated from `#/paths/assets/{id}/video/playback/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.playAssetVideo.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.playAssetVideo.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.playAssetVideo.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.playAssetVideo.Input.Path,
                query: Operations.playAssetVideo.Input.Query = .init(),
                headers: Operations.playAssetVideo.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assets/{id}/video/playback/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/assets/{id}/video/playback/GET/responses/200/content/application\/octet-stream`.
                    case binary(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.binary`.
                    ///
                    /// - Throws: An error if `self` is not `.binary`.
                    /// - SeeAlso: `.binary`.
                    internal var binary: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .binary(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.playAssetVideo.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.playAssetVideo.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//assets/{id}/video/playback/get(playAssetVideo)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.playAssetVideo.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.playAssetVideo.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case binary
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/octet-stream":
                    self = .binary
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .binary:
                    return "application/octet-stream"
                }
            }
            internal static var allCases: [Self] {
                [
                    .binary
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /audit/deletes`.
    /// - Remark: Generated from `#/paths//audit/deletes/get(getAuditDeletes)`.
    internal enum getAuditDeletes {
        internal static let id: Swift.String = "getAuditDeletes"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/audit/deletes/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/audit/deletes/GET/query/after`.
                internal var after: Foundation.Date
                /// - Remark: Generated from `#/paths/audit/deletes/GET/query/entityType`.
                internal var entityType: Components.Schemas.EntityType
                /// - Remark: Generated from `#/paths/audit/deletes/GET/query/userId`.
                internal var userId: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - after:
                ///   - entityType:
                ///   - userId:
                internal init(
                    after: Foundation.Date,
                    entityType: Components.Schemas.EntityType,
                    userId: Swift.String? = nil
                ) {
                    self.after = after
                    self.entityType = entityType
                    self.userId = userId
                }
            }
            internal var query: Operations.getAuditDeletes.Input.Query
            /// - Remark: Generated from `#/paths/audit/deletes/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAuditDeletes.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAuditDeletes.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getAuditDeletes.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.getAuditDeletes.Input.Query,
                headers: Operations.getAuditDeletes.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/audit/deletes/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/audit/deletes/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.AuditDeletesResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.AuditDeletesResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getAuditDeletes.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getAuditDeletes.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//audit/deletes/get(getAuditDeletes)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getAuditDeletes.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getAuditDeletes.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /auth/admin-sign-up`.
    /// - Remark: Generated from `#/paths//auth/admin-sign-up/post(signUpAdmin)`.
    internal enum signUpAdmin {
        internal static let id: Swift.String = "signUpAdmin"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/auth/admin-sign-up/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.signUpAdmin.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.signUpAdmin.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.signUpAdmin.Input.Headers
            /// - Remark: Generated from `#/paths/auth/admin-sign-up/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/auth/admin-sign-up/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.SignUpDto)
            }
            internal var body: Operations.signUpAdmin.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.signUpAdmin.Input.Headers = .init(),
                body: Operations.signUpAdmin.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/auth/admin-sign-up/POST/responses/201/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/auth/admin-sign-up/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.UserAdminResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.UserAdminResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.signUpAdmin.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.signUpAdmin.Output.Created.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//auth/admin-sign-up/post(signUpAdmin)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.signUpAdmin.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.signUpAdmin.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /auth/change-password`.
    /// - Remark: Generated from `#/paths//auth/change-password/post(changePassword)`.
    internal enum changePassword {
        internal static let id: Swift.String = "changePassword"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/auth/change-password/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.changePassword.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.changePassword.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.changePassword.Input.Headers
            /// - Remark: Generated from `#/paths/auth/change-password/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/auth/change-password/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.ChangePasswordDto)
            }
            internal var body: Operations.changePassword.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.changePassword.Input.Headers = .init(),
                body: Operations.changePassword.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/auth/change-password/POST/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/auth/change-password/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.UserAdminResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.UserAdminResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.changePassword.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.changePassword.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//auth/change-password/post(changePassword)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.changePassword.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.changePassword.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /auth/login`.
    /// - Remark: Generated from `#/paths//auth/login/post(login)`.
    internal enum login {
        internal static let id: Swift.String = "login"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/auth/login/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.login.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.login.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.login.Input.Headers
            /// - Remark: Generated from `#/paths/auth/login/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/auth/login/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.LoginCredentialDto)
            }
            internal var body: Operations.login.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.login.Input.Headers = .init(),
                body: Operations.login.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/auth/login/POST/responses/201/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/auth/login/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.LoginResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.LoginResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.login.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.login.Output.Created.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//auth/login/post(login)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.login.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.login.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /auth/logout`.
    /// - Remark: Generated from `#/paths//auth/logout/post(logout)`.
    internal enum logout {
        internal static let id: Swift.String = "logout"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/auth/logout/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.logout.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.logout.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.logout.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.logout.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/auth/logout/POST/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/auth/logout/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.LogoutResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.LogoutResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.logout.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.logout.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//auth/logout/post(logout)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.logout.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.logout.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /auth/validateToken`.
    /// - Remark: Generated from `#/paths//auth/validateToken/post(validateAccessToken)`.
    internal enum validateAccessToken {
        internal static let id: Swift.String = "validateAccessToken"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/auth/validateToken/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.validateAccessToken.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.validateAccessToken.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.validateAccessToken.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.validateAccessToken.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/auth/validateToken/POST/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/auth/validateToken/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.ValidateAccessTokenResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ValidateAccessTokenResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.validateAccessToken.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.validateAccessToken.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//auth/validateToken/post(validateAccessToken)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.validateAccessToken.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.validateAccessToken.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /download/archive`.
    /// - Remark: Generated from `#/paths//download/archive/post(downloadArchive)`.
    internal enum downloadArchive {
        internal static let id: Swift.String = "downloadArchive"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/download/archive/POST/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/download/archive/POST/query/key`.
                internal var key: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - key:
                internal init(key: Swift.String? = nil) {
                    self.key = key
                }
            }
            internal var query: Operations.downloadArchive.Input.Query
            /// - Remark: Generated from `#/paths/download/archive/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.downloadArchive.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.downloadArchive.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.downloadArchive.Input.Headers
            /// - Remark: Generated from `#/paths/download/archive/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/download/archive/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.AssetIdsDto)
            }
            internal var body: Operations.downloadArchive.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            ///   - body:
            internal init(
                query: Operations.downloadArchive.Input.Query = .init(),
                headers: Operations.downloadArchive.Input.Headers = .init(),
                body: Operations.downloadArchive.Input.Body
            ) {
                self.query = query
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/download/archive/POST/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/download/archive/POST/responses/200/content/application\/octet-stream`.
                    case binary(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.binary`.
                    ///
                    /// - Throws: An error if `self` is not `.binary`.
                    /// - SeeAlso: `.binary`.
                    internal var binary: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .binary(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.downloadArchive.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.downloadArchive.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//download/archive/post(downloadArchive)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.downloadArchive.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.downloadArchive.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case binary
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/octet-stream":
                    self = .binary
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .binary:
                    return "application/octet-stream"
                }
            }
            internal static var allCases: [Self] {
                [
                    .binary
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /download/info`.
    /// - Remark: Generated from `#/paths//download/info/post(getDownloadInfo)`.
    internal enum getDownloadInfo {
        internal static let id: Swift.String = "getDownloadInfo"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/download/info/POST/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/download/info/POST/query/key`.
                internal var key: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - key:
                internal init(key: Swift.String? = nil) {
                    self.key = key
                }
            }
            internal var query: Operations.getDownloadInfo.Input.Query
            /// - Remark: Generated from `#/paths/download/info/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getDownloadInfo.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getDownloadInfo.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getDownloadInfo.Input.Headers
            /// - Remark: Generated from `#/paths/download/info/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/download/info/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.DownloadInfoDto)
            }
            internal var body: Operations.getDownloadInfo.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            ///   - body:
            internal init(
                query: Operations.getDownloadInfo.Input.Query = .init(),
                headers: Operations.getDownloadInfo.Input.Headers = .init(),
                body: Operations.getDownloadInfo.Input.Body
            ) {
                self.query = query
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/download/info/POST/responses/201/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/download/info/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.DownloadResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.DownloadResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getDownloadInfo.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getDownloadInfo.Output.Created.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//download/info/post(getDownloadInfo)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.getDownloadInfo.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.getDownloadInfo.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /duplicates`.
    /// - Remark: Generated from `#/paths//duplicates/get(getAssetDuplicates)`.
    internal enum getAssetDuplicates {
        internal static let id: Swift.String = "getAssetDuplicates"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/duplicates/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAssetDuplicates.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAssetDuplicates.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getAssetDuplicates.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getAssetDuplicates.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/duplicates/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/duplicates/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.DuplicateResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.DuplicateResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getAssetDuplicates.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getAssetDuplicates.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//duplicates/get(getAssetDuplicates)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getAssetDuplicates.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getAssetDuplicates.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /faces`.
    /// - Remark: Generated from `#/paths//faces/get(getFaces)`.
    internal enum getFaces {
        internal static let id: Swift.String = "getFaces"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/faces/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/faces/GET/query/id`.
                internal var id: Swift.String
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var query: Operations.getFaces.Input.Query
            /// - Remark: Generated from `#/paths/faces/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getFaces.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getFaces.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getFaces.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.getFaces.Input.Query,
                headers: Operations.getFaces.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/faces/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/faces/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.AssetFaceResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.AssetFaceResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getFaces.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getFaces.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//faces/get(getFaces)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getFaces.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getFaces.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PUT /faces/{id}`.
    /// - Remark: Generated from `#/paths//faces/{id}/put(reassignFacesById)`.
    internal enum reassignFacesById {
        internal static let id: Swift.String = "reassignFacesById"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/faces/{id}/PUT/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/faces/{id}/PUT/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.reassignFacesById.Input.Path
            /// - Remark: Generated from `#/paths/faces/{id}/PUT/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.reassignFacesById.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.reassignFacesById.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.reassignFacesById.Input.Headers
            /// - Remark: Generated from `#/paths/faces/{id}/PUT/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/faces/{id}/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.FaceDto)
            }
            internal var body: Operations.reassignFacesById.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.reassignFacesById.Input.Path,
                headers: Operations.reassignFacesById.Input.Headers = .init(),
                body: Operations.reassignFacesById.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/faces/{id}/PUT/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/faces/{id}/PUT/responses/200/content/application\/json`.
                    case json(Components.Schemas.PersonResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.PersonResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.reassignFacesById.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.reassignFacesById.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//faces/{id}/put(reassignFacesById)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.reassignFacesById.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.reassignFacesById.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /jobs`.
    /// - Remark: Generated from `#/paths//jobs/get(getAllJobsStatus)`.
    internal enum getAllJobsStatus {
        internal static let id: Swift.String = "getAllJobsStatus"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/jobs/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAllJobsStatus.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAllJobsStatus.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getAllJobsStatus.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getAllJobsStatus.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/jobs/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/jobs/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.AllJobStatusResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.AllJobStatusResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getAllJobsStatus.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getAllJobsStatus.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//jobs/get(getAllJobsStatus)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getAllJobsStatus.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getAllJobsStatus.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PUT /jobs/{id}`.
    /// - Remark: Generated from `#/paths//jobs/{id}/put(sendJobCommand)`.
    internal enum sendJobCommand {
        internal static let id: Swift.String = "sendJobCommand"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/jobs/{id}/PUT/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/jobs/{id}/PUT/path/id`.
                internal var id: Components.Schemas.JobName
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Components.Schemas.JobName) {
                    self.id = id
                }
            }
            internal var path: Operations.sendJobCommand.Input.Path
            /// - Remark: Generated from `#/paths/jobs/{id}/PUT/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.sendJobCommand.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.sendJobCommand.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.sendJobCommand.Input.Headers
            /// - Remark: Generated from `#/paths/jobs/{id}/PUT/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/jobs/{id}/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.JobCommandDto)
            }
            internal var body: Operations.sendJobCommand.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.sendJobCommand.Input.Path,
                headers: Operations.sendJobCommand.Input.Headers = .init(),
                body: Operations.sendJobCommand.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/jobs/{id}/PUT/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/jobs/{id}/PUT/responses/200/content/application\/json`.
                    case json(Components.Schemas.JobStatusDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.JobStatusDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.sendJobCommand.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.sendJobCommand.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//jobs/{id}/put(sendJobCommand)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.sendJobCommand.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.sendJobCommand.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /libraries`.
    /// - Remark: Generated from `#/paths//libraries/get(getAllLibraries)`.
    internal enum getAllLibraries {
        internal static let id: Swift.String = "getAllLibraries"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/libraries/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAllLibraries.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAllLibraries.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getAllLibraries.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getAllLibraries.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/libraries/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/libraries/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.LibraryResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.LibraryResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getAllLibraries.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getAllLibraries.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//libraries/get(getAllLibraries)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getAllLibraries.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getAllLibraries.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /libraries`.
    /// - Remark: Generated from `#/paths//libraries/post(createLibrary)`.
    internal enum createLibrary {
        internal static let id: Swift.String = "createLibrary"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/libraries/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.createLibrary.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.createLibrary.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.createLibrary.Input.Headers
            /// - Remark: Generated from `#/paths/libraries/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/libraries/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.CreateLibraryDto)
            }
            internal var body: Operations.createLibrary.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.createLibrary.Input.Headers = .init(),
                body: Operations.createLibrary.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/libraries/POST/responses/201/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/libraries/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.LibraryResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.LibraryResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.createLibrary.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.createLibrary.Output.Created.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//libraries/post(createLibrary)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.createLibrary.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.createLibrary.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /libraries/{id}`.
    /// - Remark: Generated from `#/paths//libraries/{id}/get(getLibrary)`.
    internal enum getLibrary {
        internal static let id: Swift.String = "getLibrary"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/libraries/{id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/libraries/{id}/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.getLibrary.Input.Path
            /// - Remark: Generated from `#/paths/libraries/{id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getLibrary.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getLibrary.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getLibrary.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getLibrary.Input.Path,
                headers: Operations.getLibrary.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/libraries/{id}/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/libraries/{id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.LibraryResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.LibraryResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getLibrary.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getLibrary.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//libraries/{id}/get(getLibrary)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getLibrary.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getLibrary.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PUT /libraries/{id}`.
    /// - Remark: Generated from `#/paths//libraries/{id}/put(updateLibrary)`.
    internal enum updateLibrary {
        internal static let id: Swift.String = "updateLibrary"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/libraries/{id}/PUT/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/libraries/{id}/PUT/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.updateLibrary.Input.Path
            /// - Remark: Generated from `#/paths/libraries/{id}/PUT/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updateLibrary.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updateLibrary.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.updateLibrary.Input.Headers
            /// - Remark: Generated from `#/paths/libraries/{id}/PUT/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/libraries/{id}/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.UpdateLibraryDto)
            }
            internal var body: Operations.updateLibrary.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.updateLibrary.Input.Path,
                headers: Operations.updateLibrary.Input.Headers = .init(),
                body: Operations.updateLibrary.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/libraries/{id}/PUT/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/libraries/{id}/PUT/responses/200/content/application\/json`.
                    case json(Components.Schemas.LibraryResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.LibraryResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.updateLibrary.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.updateLibrary.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//libraries/{id}/put(updateLibrary)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.updateLibrary.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.updateLibrary.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `DELETE /libraries/{id}`.
    /// - Remark: Generated from `#/paths//libraries/{id}/delete(deleteLibrary)`.
    internal enum deleteLibrary {
        internal static let id: Swift.String = "deleteLibrary"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/libraries/{id}/DELETE/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/libraries/{id}/DELETE/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.deleteLibrary.Input.Path
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            internal init(path: Operations.deleteLibrary.Input.Path) {
                self.path = path
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//libraries/{id}/delete(deleteLibrary)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.deleteLibrary.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.deleteLibrary.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `POST /libraries/{id}/removeOffline`.
    /// - Remark: Generated from `#/paths//libraries/{id}/removeOffline/post(removeOfflineFiles)`.
    internal enum removeOfflineFiles {
        internal static let id: Swift.String = "removeOfflineFiles"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/libraries/{id}/removeOffline/POST/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/libraries/{id}/removeOffline/POST/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.removeOfflineFiles.Input.Path
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            internal init(path: Operations.removeOfflineFiles.Input.Path) {
                self.path = path
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//libraries/{id}/removeOffline/post(removeOfflineFiles)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.removeOfflineFiles.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.removeOfflineFiles.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `POST /libraries/{id}/scan`.
    /// - Remark: Generated from `#/paths//libraries/{id}/scan/post(scanLibrary)`.
    internal enum scanLibrary {
        internal static let id: Swift.String = "scanLibrary"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/libraries/{id}/scan/POST/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/libraries/{id}/scan/POST/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.scanLibrary.Input.Path
            /// - Remark: Generated from `#/paths/libraries/{id}/scan/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/libraries/{id}/scan/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.ScanLibraryDto)
            }
            internal var body: Operations.scanLibrary.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - body:
            internal init(
                path: Operations.scanLibrary.Input.Path,
                body: Operations.scanLibrary.Input.Body
            ) {
                self.path = path
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//libraries/{id}/scan/post(scanLibrary)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.scanLibrary.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.scanLibrary.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `GET /libraries/{id}/statistics`.
    /// - Remark: Generated from `#/paths//libraries/{id}/statistics/get(getLibraryStatistics)`.
    internal enum getLibraryStatistics {
        internal static let id: Swift.String = "getLibraryStatistics"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/libraries/{id}/statistics/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/libraries/{id}/statistics/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.getLibraryStatistics.Input.Path
            /// - Remark: Generated from `#/paths/libraries/{id}/statistics/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getLibraryStatistics.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getLibraryStatistics.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getLibraryStatistics.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getLibraryStatistics.Input.Path,
                headers: Operations.getLibraryStatistics.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/libraries/{id}/statistics/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/libraries/{id}/statistics/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.LibraryStatsResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.LibraryStatsResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getLibraryStatistics.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getLibraryStatistics.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//libraries/{id}/statistics/get(getLibraryStatistics)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getLibraryStatistics.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getLibraryStatistics.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /libraries/{id}/validate`.
    /// - Remark: Generated from `#/paths//libraries/{id}/validate/post(validate)`.
    internal enum validate {
        internal static let id: Swift.String = "validate"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/libraries/{id}/validate/POST/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/libraries/{id}/validate/POST/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.validate.Input.Path
            /// - Remark: Generated from `#/paths/libraries/{id}/validate/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.validate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.validate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.validate.Input.Headers
            /// - Remark: Generated from `#/paths/libraries/{id}/validate/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/libraries/{id}/validate/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.ValidateLibraryDto)
            }
            internal var body: Operations.validate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.validate.Input.Path,
                headers: Operations.validate.Input.Headers = .init(),
                body: Operations.validate.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/libraries/{id}/validate/POST/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/libraries/{id}/validate/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.ValidateLibraryResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ValidateLibraryResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.validate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.validate.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//libraries/{id}/validate/post(validate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.validate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.validate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /map/markers`.
    /// - Remark: Generated from `#/paths//map/markers/get(getMapMarkers)`.
    internal enum getMapMarkers {
        internal static let id: Swift.String = "getMapMarkers"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/map/markers/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/map/markers/GET/query/fileCreatedAfter`.
                internal var fileCreatedAfter: Foundation.Date?
                /// - Remark: Generated from `#/paths/map/markers/GET/query/fileCreatedBefore`.
                internal var fileCreatedBefore: Foundation.Date?
                /// - Remark: Generated from `#/paths/map/markers/GET/query/isArchived`.
                internal var isArchived: Swift.Bool?
                /// - Remark: Generated from `#/paths/map/markers/GET/query/isFavorite`.
                internal var isFavorite: Swift.Bool?
                /// - Remark: Generated from `#/paths/map/markers/GET/query/withPartners`.
                internal var withPartners: Swift.Bool?
                /// - Remark: Generated from `#/paths/map/markers/GET/query/withSharedAlbums`.
                internal var withSharedAlbums: Swift.Bool?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - fileCreatedAfter:
                ///   - fileCreatedBefore:
                ///   - isArchived:
                ///   - isFavorite:
                ///   - withPartners:
                ///   - withSharedAlbums:
                internal init(
                    fileCreatedAfter: Foundation.Date? = nil,
                    fileCreatedBefore: Foundation.Date? = nil,
                    isArchived: Swift.Bool? = nil,
                    isFavorite: Swift.Bool? = nil,
                    withPartners: Swift.Bool? = nil,
                    withSharedAlbums: Swift.Bool? = nil
                ) {
                    self.fileCreatedAfter = fileCreatedAfter
                    self.fileCreatedBefore = fileCreatedBefore
                    self.isArchived = isArchived
                    self.isFavorite = isFavorite
                    self.withPartners = withPartners
                    self.withSharedAlbums = withSharedAlbums
                }
            }
            internal var query: Operations.getMapMarkers.Input.Query
            /// - Remark: Generated from `#/paths/map/markers/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getMapMarkers.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getMapMarkers.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getMapMarkers.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.getMapMarkers.Input.Query = .init(),
                headers: Operations.getMapMarkers.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/map/markers/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/map/markers/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.MapMarkerResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.MapMarkerResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getMapMarkers.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getMapMarkers.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//map/markers/get(getMapMarkers)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getMapMarkers.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getMapMarkers.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /map/style.json`.
    /// - Remark: Generated from `#/paths//map/style.json/get(getMapStyle)`.
    internal enum getMapStyle {
        internal static let id: Swift.String = "getMapStyle"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/map/style.json/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/map/style.json/GET/query/key`.
                internal var key: Swift.String?
                /// - Remark: Generated from `#/paths/map/style.json/GET/query/theme`.
                internal var theme: Components.Schemas.MapTheme
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - key:
                ///   - theme:
                internal init(
                    key: Swift.String? = nil,
                    theme: Components.Schemas.MapTheme
                ) {
                    self.key = key
                    self.theme = theme
                }
            }
            internal var query: Operations.getMapStyle.Input.Query
            /// - Remark: Generated from `#/paths/map/style.json/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getMapStyle.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getMapStyle.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getMapStyle.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.getMapStyle.Input.Query,
                headers: Operations.getMapStyle.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/map/style.json/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/map/style.json/GET/responses/200/content/application\/json`.
                    case json(OpenAPIRuntime.OpenAPIObjectContainer)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: OpenAPIRuntime.OpenAPIObjectContainer {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getMapStyle.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getMapStyle.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//map/style.json/get(getMapStyle)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getMapStyle.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getMapStyle.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /memories`.
    /// - Remark: Generated from `#/paths//memories/get(searchMemories)`.
    internal enum searchMemories {
        internal static let id: Swift.String = "searchMemories"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/memories/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.searchMemories.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.searchMemories.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.searchMemories.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.searchMemories.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/memories/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/memories/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.MemoryResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.MemoryResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.searchMemories.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.searchMemories.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//memories/get(searchMemories)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.searchMemories.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.searchMemories.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /memories`.
    /// - Remark: Generated from `#/paths//memories/post(createMemory)`.
    internal enum createMemory {
        internal static let id: Swift.String = "createMemory"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/memories/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.createMemory.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.createMemory.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.createMemory.Input.Headers
            /// - Remark: Generated from `#/paths/memories/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/memories/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.MemoryCreateDto)
            }
            internal var body: Operations.createMemory.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.createMemory.Input.Headers = .init(),
                body: Operations.createMemory.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/memories/POST/responses/201/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/memories/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.MemoryResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.MemoryResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.createMemory.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.createMemory.Output.Created.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//memories/post(createMemory)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.createMemory.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.createMemory.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /memories/{id}`.
    /// - Remark: Generated from `#/paths//memories/{id}/get(getMemory)`.
    internal enum getMemory {
        internal static let id: Swift.String = "getMemory"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/memories/{id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/memories/{id}/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.getMemory.Input.Path
            /// - Remark: Generated from `#/paths/memories/{id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getMemory.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getMemory.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getMemory.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getMemory.Input.Path,
                headers: Operations.getMemory.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/memories/{id}/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/memories/{id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.MemoryResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.MemoryResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getMemory.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getMemory.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//memories/{id}/get(getMemory)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getMemory.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getMemory.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PUT /memories/{id}`.
    /// - Remark: Generated from `#/paths//memories/{id}/put(updateMemory)`.
    internal enum updateMemory {
        internal static let id: Swift.String = "updateMemory"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/memories/{id}/PUT/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/memories/{id}/PUT/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.updateMemory.Input.Path
            /// - Remark: Generated from `#/paths/memories/{id}/PUT/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updateMemory.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updateMemory.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.updateMemory.Input.Headers
            /// - Remark: Generated from `#/paths/memories/{id}/PUT/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/memories/{id}/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.MemoryUpdateDto)
            }
            internal var body: Operations.updateMemory.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.updateMemory.Input.Path,
                headers: Operations.updateMemory.Input.Headers = .init(),
                body: Operations.updateMemory.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/memories/{id}/PUT/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/memories/{id}/PUT/responses/200/content/application\/json`.
                    case json(Components.Schemas.MemoryResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.MemoryResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.updateMemory.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.updateMemory.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//memories/{id}/put(updateMemory)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.updateMemory.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.updateMemory.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `DELETE /memories/{id}`.
    /// - Remark: Generated from `#/paths//memories/{id}/delete(deleteMemory)`.
    internal enum deleteMemory {
        internal static let id: Swift.String = "deleteMemory"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/memories/{id}/DELETE/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/memories/{id}/DELETE/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.deleteMemory.Input.Path
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            internal init(path: Operations.deleteMemory.Input.Path) {
                self.path = path
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//memories/{id}/delete(deleteMemory)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.deleteMemory.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.deleteMemory.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `PUT /memories/{id}/assets`.
    /// - Remark: Generated from `#/paths//memories/{id}/assets/put(addMemoryAssets)`.
    internal enum addMemoryAssets {
        internal static let id: Swift.String = "addMemoryAssets"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/memories/{id}/assets/PUT/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/memories/{id}/assets/PUT/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.addMemoryAssets.Input.Path
            /// - Remark: Generated from `#/paths/memories/{id}/assets/PUT/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.addMemoryAssets.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.addMemoryAssets.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.addMemoryAssets.Input.Headers
            /// - Remark: Generated from `#/paths/memories/{id}/assets/PUT/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/memories/{id}/assets/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.BulkIdsDto)
            }
            internal var body: Operations.addMemoryAssets.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.addMemoryAssets.Input.Path,
                headers: Operations.addMemoryAssets.Input.Headers = .init(),
                body: Operations.addMemoryAssets.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/memories/{id}/assets/PUT/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/memories/{id}/assets/PUT/responses/200/content/application\/json`.
                    case json([Components.Schemas.BulkIdResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.BulkIdResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.addMemoryAssets.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.addMemoryAssets.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//memories/{id}/assets/put(addMemoryAssets)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.addMemoryAssets.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.addMemoryAssets.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `DELETE /memories/{id}/assets`.
    /// - Remark: Generated from `#/paths//memories/{id}/assets/delete(removeMemoryAssets)`.
    internal enum removeMemoryAssets {
        internal static let id: Swift.String = "removeMemoryAssets"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/memories/{id}/assets/DELETE/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/memories/{id}/assets/DELETE/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.removeMemoryAssets.Input.Path
            /// - Remark: Generated from `#/paths/memories/{id}/assets/DELETE/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.removeMemoryAssets.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.removeMemoryAssets.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.removeMemoryAssets.Input.Headers
            /// - Remark: Generated from `#/paths/memories/{id}/assets/DELETE/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/memories/{id}/assets/DELETE/requestBody/content/application\/json`.
                case json(Components.Schemas.BulkIdsDto)
            }
            internal var body: Operations.removeMemoryAssets.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.removeMemoryAssets.Input.Path,
                headers: Operations.removeMemoryAssets.Input.Headers = .init(),
                body: Operations.removeMemoryAssets.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/memories/{id}/assets/DELETE/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/memories/{id}/assets/DELETE/responses/200/content/application\/json`.
                    case json([Components.Schemas.BulkIdResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.BulkIdResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.removeMemoryAssets.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.removeMemoryAssets.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//memories/{id}/assets/delete(removeMemoryAssets)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.removeMemoryAssets.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.removeMemoryAssets.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /notifications/test-email`.
    /// - Remark: Generated from `#/paths//notifications/test-email/post(sendTestEmail)`.
    internal enum sendTestEmail {
        internal static let id: Swift.String = "sendTestEmail"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/notifications/test-email/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/notifications/test-email/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.SystemConfigSmtpDto)
            }
            internal var body: Operations.sendTestEmail.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - body:
            internal init(body: Operations.sendTestEmail.Input.Body) {
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// Creates a new `Ok`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//notifications/test-email/post(sendTestEmail)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.sendTestEmail.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.sendTestEmail.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `POST /oauth/authorize`.
    /// - Remark: Generated from `#/paths//oauth/authorize/post(startOAuth)`.
    internal enum startOAuth {
        internal static let id: Swift.String = "startOAuth"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/oauth/authorize/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.startOAuth.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.startOAuth.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.startOAuth.Input.Headers
            /// - Remark: Generated from `#/paths/oauth/authorize/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/oauth/authorize/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.OAuthConfigDto)
            }
            internal var body: Operations.startOAuth.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.startOAuth.Input.Headers = .init(),
                body: Operations.startOAuth.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/oauth/authorize/POST/responses/201/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/oauth/authorize/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.OAuthAuthorizeResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.OAuthAuthorizeResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.startOAuth.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.startOAuth.Output.Created.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//oauth/authorize/post(startOAuth)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.startOAuth.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.startOAuth.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /oauth/callback`.
    /// - Remark: Generated from `#/paths//oauth/callback/post(finishOAuth)`.
    internal enum finishOAuth {
        internal static let id: Swift.String = "finishOAuth"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/oauth/callback/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.finishOAuth.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.finishOAuth.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.finishOAuth.Input.Headers
            /// - Remark: Generated from `#/paths/oauth/callback/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/oauth/callback/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.OAuthCallbackDto)
            }
            internal var body: Operations.finishOAuth.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.finishOAuth.Input.Headers = .init(),
                body: Operations.finishOAuth.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/oauth/callback/POST/responses/201/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/oauth/callback/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.LoginResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.LoginResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.finishOAuth.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.finishOAuth.Output.Created.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//oauth/callback/post(finishOAuth)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.finishOAuth.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.finishOAuth.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /oauth/link`.
    /// - Remark: Generated from `#/paths//oauth/link/post(linkOAuthAccount)`.
    internal enum linkOAuthAccount {
        internal static let id: Swift.String = "linkOAuthAccount"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/oauth/link/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.linkOAuthAccount.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.linkOAuthAccount.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.linkOAuthAccount.Input.Headers
            /// - Remark: Generated from `#/paths/oauth/link/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/oauth/link/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.OAuthCallbackDto)
            }
            internal var body: Operations.linkOAuthAccount.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.linkOAuthAccount.Input.Headers = .init(),
                body: Operations.linkOAuthAccount.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/oauth/link/POST/responses/201/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/oauth/link/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.UserAdminResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.UserAdminResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.linkOAuthAccount.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.linkOAuthAccount.Output.Created.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//oauth/link/post(linkOAuthAccount)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.linkOAuthAccount.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.linkOAuthAccount.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /oauth/mobile-redirect`.
    /// - Remark: Generated from `#/paths//oauth/mobile-redirect/get(redirectOAuthToMobile)`.
    internal enum redirectOAuthToMobile {
        internal static let id: Swift.String = "redirectOAuthToMobile"
        internal struct Input: Sendable, Hashable {
            /// Creates a new `Input`.
            internal init() {}
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// Creates a new `Ok`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//oauth/mobile-redirect/get(redirectOAuthToMobile)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.redirectOAuthToMobile.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.redirectOAuthToMobile.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `POST /oauth/unlink`.
    /// - Remark: Generated from `#/paths//oauth/unlink/post(unlinkOAuthAccount)`.
    internal enum unlinkOAuthAccount {
        internal static let id: Swift.String = "unlinkOAuthAccount"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/oauth/unlink/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.unlinkOAuthAccount.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.unlinkOAuthAccount.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.unlinkOAuthAccount.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.unlinkOAuthAccount.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/oauth/unlink/POST/responses/201/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/oauth/unlink/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.UserAdminResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.UserAdminResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.unlinkOAuthAccount.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.unlinkOAuthAccount.Output.Created.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//oauth/unlink/post(unlinkOAuthAccount)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.unlinkOAuthAccount.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.unlinkOAuthAccount.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /partners`.
    /// - Remark: Generated from `#/paths//partners/get(getPartners)`.
    internal enum getPartners {
        internal static let id: Swift.String = "getPartners"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/partners/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/partners/GET/query/direction`.
                @frozen internal enum directionPayload: String, Codable, Hashable, Sendable {
                    case shared_hyphen_by = "shared-by"
                    case shared_hyphen_with = "shared-with"
                }
                /// - Remark: Generated from `#/paths/partners/GET/query/direction`.
                internal var direction: Operations.getPartners.Input.Query.directionPayload
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - direction:
                internal init(direction: Operations.getPartners.Input.Query.directionPayload) {
                    self.direction = direction
                }
            }
            internal var query: Operations.getPartners.Input.Query
            /// - Remark: Generated from `#/paths/partners/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getPartners.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getPartners.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getPartners.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.getPartners.Input.Query,
                headers: Operations.getPartners.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/partners/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/partners/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.PartnerResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.PartnerResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getPartners.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getPartners.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//partners/get(getPartners)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getPartners.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getPartners.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /partners/{id}`.
    /// - Remark: Generated from `#/paths//partners/{id}/post(createPartner)`.
    internal enum createPartner {
        internal static let id: Swift.String = "createPartner"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/partners/{id}/POST/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/partners/{id}/POST/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.createPartner.Input.Path
            /// - Remark: Generated from `#/paths/partners/{id}/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.createPartner.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.createPartner.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.createPartner.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.createPartner.Input.Path,
                headers: Operations.createPartner.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/partners/{id}/POST/responses/201/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/partners/{id}/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.PartnerResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.PartnerResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.createPartner.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.createPartner.Output.Created.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//partners/{id}/post(createPartner)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.createPartner.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.createPartner.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PUT /partners/{id}`.
    /// - Remark: Generated from `#/paths//partners/{id}/put(updatePartner)`.
    internal enum updatePartner {
        internal static let id: Swift.String = "updatePartner"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/partners/{id}/PUT/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/partners/{id}/PUT/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.updatePartner.Input.Path
            /// - Remark: Generated from `#/paths/partners/{id}/PUT/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updatePartner.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updatePartner.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.updatePartner.Input.Headers
            /// - Remark: Generated from `#/paths/partners/{id}/PUT/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/partners/{id}/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.UpdatePartnerDto)
            }
            internal var body: Operations.updatePartner.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.updatePartner.Input.Path,
                headers: Operations.updatePartner.Input.Headers = .init(),
                body: Operations.updatePartner.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/partners/{id}/PUT/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/partners/{id}/PUT/responses/200/content/application\/json`.
                    case json(Components.Schemas.PartnerResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.PartnerResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.updatePartner.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.updatePartner.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//partners/{id}/put(updatePartner)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.updatePartner.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.updatePartner.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `DELETE /partners/{id}`.
    /// - Remark: Generated from `#/paths//partners/{id}/delete(removePartner)`.
    internal enum removePartner {
        internal static let id: Swift.String = "removePartner"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/partners/{id}/DELETE/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/partners/{id}/DELETE/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.removePartner.Input.Path
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            internal init(path: Operations.removePartner.Input.Path) {
                self.path = path
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// Creates a new `Ok`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//partners/{id}/delete(removePartner)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.removePartner.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.removePartner.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `GET /people`.
    /// - Remark: Generated from `#/paths//people/get(getAllPeople)`.
    internal enum getAllPeople {
        internal static let id: Swift.String = "getAllPeople"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/people/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/people/GET/query/withHidden`.
                internal var withHidden: Swift.Bool?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - withHidden:
                internal init(withHidden: Swift.Bool? = nil) {
                    self.withHidden = withHidden
                }
            }
            internal var query: Operations.getAllPeople.Input.Query
            /// - Remark: Generated from `#/paths/people/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAllPeople.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAllPeople.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getAllPeople.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.getAllPeople.Input.Query = .init(),
                headers: Operations.getAllPeople.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/people/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/people/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.PeopleResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.PeopleResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getAllPeople.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getAllPeople.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//people/get(getAllPeople)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getAllPeople.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getAllPeople.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /people`.
    /// - Remark: Generated from `#/paths//people/post(createPerson)`.
    internal enum createPerson {
        internal static let id: Swift.String = "createPerson"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/people/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.createPerson.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.createPerson.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.createPerson.Input.Headers
            /// - Remark: Generated from `#/paths/people/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/people/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.PersonCreateDto)
            }
            internal var body: Operations.createPerson.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.createPerson.Input.Headers = .init(),
                body: Operations.createPerson.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/people/POST/responses/201/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/people/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.PersonResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.PersonResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.createPerson.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.createPerson.Output.Created.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//people/post(createPerson)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.createPerson.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.createPerson.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PUT /people`.
    /// - Remark: Generated from `#/paths//people/put(updatePeople)`.
    internal enum updatePeople {
        internal static let id: Swift.String = "updatePeople"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/people/PUT/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updatePeople.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updatePeople.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.updatePeople.Input.Headers
            /// - Remark: Generated from `#/paths/people/PUT/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/people/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.PeopleUpdateDto)
            }
            internal var body: Operations.updatePeople.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.updatePeople.Input.Headers = .init(),
                body: Operations.updatePeople.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/people/PUT/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/people/PUT/responses/200/content/application\/json`.
                    case json([Components.Schemas.BulkIdResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.BulkIdResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.updatePeople.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.updatePeople.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//people/put(updatePeople)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.updatePeople.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.updatePeople.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /people/{id}`.
    /// - Remark: Generated from `#/paths//people/{id}/get(getPerson)`.
    internal enum getPerson {
        internal static let id: Swift.String = "getPerson"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/people/{id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/people/{id}/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.getPerson.Input.Path
            /// - Remark: Generated from `#/paths/people/{id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getPerson.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getPerson.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getPerson.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getPerson.Input.Path,
                headers: Operations.getPerson.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/people/{id}/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/people/{id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.PersonResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.PersonResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getPerson.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getPerson.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//people/{id}/get(getPerson)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getPerson.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getPerson.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PUT /people/{id}`.
    /// - Remark: Generated from `#/paths//people/{id}/put(updatePerson)`.
    internal enum updatePerson {
        internal static let id: Swift.String = "updatePerson"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/people/{id}/PUT/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/people/{id}/PUT/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.updatePerson.Input.Path
            /// - Remark: Generated from `#/paths/people/{id}/PUT/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updatePerson.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updatePerson.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.updatePerson.Input.Headers
            /// - Remark: Generated from `#/paths/people/{id}/PUT/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/people/{id}/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.PersonUpdateDto)
            }
            internal var body: Operations.updatePerson.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.updatePerson.Input.Path,
                headers: Operations.updatePerson.Input.Headers = .init(),
                body: Operations.updatePerson.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/people/{id}/PUT/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/people/{id}/PUT/responses/200/content/application\/json`.
                    case json(Components.Schemas.PersonResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.PersonResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.updatePerson.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.updatePerson.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//people/{id}/put(updatePerson)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.updatePerson.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.updatePerson.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /people/{id}/assets`.
    /// - Remark: Generated from `#/paths//people/{id}/assets/get(getPersonAssets)`.
    internal enum getPersonAssets {
        internal static let id: Swift.String = "getPersonAssets"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/people/{id}/assets/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/people/{id}/assets/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.getPersonAssets.Input.Path
            /// - Remark: Generated from `#/paths/people/{id}/assets/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getPersonAssets.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getPersonAssets.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getPersonAssets.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getPersonAssets.Input.Path,
                headers: Operations.getPersonAssets.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/people/{id}/assets/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/people/{id}/assets/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.AssetResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.AssetResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getPersonAssets.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getPersonAssets.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//people/{id}/assets/get(getPersonAssets)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getPersonAssets.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getPersonAssets.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /people/{id}/merge`.
    /// - Remark: Generated from `#/paths//people/{id}/merge/post(mergePerson)`.
    internal enum mergePerson {
        internal static let id: Swift.String = "mergePerson"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/people/{id}/merge/POST/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/people/{id}/merge/POST/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.mergePerson.Input.Path
            /// - Remark: Generated from `#/paths/people/{id}/merge/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.mergePerson.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.mergePerson.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.mergePerson.Input.Headers
            /// - Remark: Generated from `#/paths/people/{id}/merge/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/people/{id}/merge/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.MergePersonDto)
            }
            internal var body: Operations.mergePerson.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.mergePerson.Input.Path,
                headers: Operations.mergePerson.Input.Headers = .init(),
                body: Operations.mergePerson.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/people/{id}/merge/POST/responses/201/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/people/{id}/merge/POST/responses/201/content/application\/json`.
                    case json([Components.Schemas.BulkIdResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.BulkIdResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.mergePerson.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.mergePerson.Output.Created.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//people/{id}/merge/post(mergePerson)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.mergePerson.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.mergePerson.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PUT /people/{id}/reassign`.
    /// - Remark: Generated from `#/paths//people/{id}/reassign/put(reassignFaces)`.
    internal enum reassignFaces {
        internal static let id: Swift.String = "reassignFaces"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/people/{id}/reassign/PUT/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/people/{id}/reassign/PUT/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.reassignFaces.Input.Path
            /// - Remark: Generated from `#/paths/people/{id}/reassign/PUT/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.reassignFaces.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.reassignFaces.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.reassignFaces.Input.Headers
            /// - Remark: Generated from `#/paths/people/{id}/reassign/PUT/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/people/{id}/reassign/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.AssetFaceUpdateDto)
            }
            internal var body: Operations.reassignFaces.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.reassignFaces.Input.Path,
                headers: Operations.reassignFaces.Input.Headers = .init(),
                body: Operations.reassignFaces.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/people/{id}/reassign/PUT/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/people/{id}/reassign/PUT/responses/200/content/application\/json`.
                    case json([Components.Schemas.PersonResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.PersonResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.reassignFaces.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.reassignFaces.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//people/{id}/reassign/put(reassignFaces)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.reassignFaces.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.reassignFaces.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /people/{id}/statistics`.
    /// - Remark: Generated from `#/paths//people/{id}/statistics/get(getPersonStatistics)`.
    internal enum getPersonStatistics {
        internal static let id: Swift.String = "getPersonStatistics"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/people/{id}/statistics/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/people/{id}/statistics/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.getPersonStatistics.Input.Path
            /// - Remark: Generated from `#/paths/people/{id}/statistics/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getPersonStatistics.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getPersonStatistics.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getPersonStatistics.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getPersonStatistics.Input.Path,
                headers: Operations.getPersonStatistics.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/people/{id}/statistics/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/people/{id}/statistics/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.PersonStatisticsResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.PersonStatisticsResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getPersonStatistics.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getPersonStatistics.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//people/{id}/statistics/get(getPersonStatistics)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getPersonStatistics.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getPersonStatistics.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /people/{id}/thumbnail`.
    /// - Remark: Generated from `#/paths//people/{id}/thumbnail/get(getPersonThumbnail)`.
    internal enum getPersonThumbnail {
        internal static let id: Swift.String = "getPersonThumbnail"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/people/{id}/thumbnail/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/people/{id}/thumbnail/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.getPersonThumbnail.Input.Path
            /// - Remark: Generated from `#/paths/people/{id}/thumbnail/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getPersonThumbnail.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getPersonThumbnail.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getPersonThumbnail.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getPersonThumbnail.Input.Path,
                headers: Operations.getPersonThumbnail.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/people/{id}/thumbnail/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/people/{id}/thumbnail/GET/responses/200/content/application\/octet-stream`.
                    case binary(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.binary`.
                    ///
                    /// - Throws: An error if `self` is not `.binary`.
                    /// - SeeAlso: `.binary`.
                    internal var binary: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .binary(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getPersonThumbnail.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getPersonThumbnail.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//people/{id}/thumbnail/get(getPersonThumbnail)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getPersonThumbnail.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getPersonThumbnail.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case binary
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/octet-stream":
                    self = .binary
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .binary:
                    return "application/octet-stream"
                }
            }
            internal static var allCases: [Self] {
                [
                    .binary
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /reports`.
    /// - Remark: Generated from `#/paths//reports/get(getAuditFiles)`.
    internal enum getAuditFiles {
        internal static let id: Swift.String = "getAuditFiles"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/reports/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAuditFiles.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAuditFiles.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getAuditFiles.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getAuditFiles.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/reports/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/reports/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.FileReportDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.FileReportDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getAuditFiles.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getAuditFiles.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//reports/get(getAuditFiles)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getAuditFiles.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getAuditFiles.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /reports/checksum`.
    /// - Remark: Generated from `#/paths//reports/checksum/post(getFileChecksums)`.
    internal enum getFileChecksums {
        internal static let id: Swift.String = "getFileChecksums"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/reports/checksum/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getFileChecksums.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getFileChecksums.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getFileChecksums.Input.Headers
            /// - Remark: Generated from `#/paths/reports/checksum/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/reports/checksum/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.FileChecksumDto)
            }
            internal var body: Operations.getFileChecksums.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.getFileChecksums.Input.Headers = .init(),
                body: Operations.getFileChecksums.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/reports/checksum/POST/responses/201/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/reports/checksum/POST/responses/201/content/application\/json`.
                    case json([Components.Schemas.FileChecksumResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.FileChecksumResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getFileChecksums.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getFileChecksums.Output.Created.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//reports/checksum/post(getFileChecksums)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.getFileChecksums.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.getFileChecksums.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /reports/fix`.
    /// - Remark: Generated from `#/paths//reports/fix/post(fixAuditFiles)`.
    internal enum fixAuditFiles {
        internal static let id: Swift.String = "fixAuditFiles"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/reports/fix/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/reports/fix/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.FileReportFixDto)
            }
            internal var body: Operations.fixAuditFiles.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - body:
            internal init(body: Operations.fixAuditFiles.Input.Body) {
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Created: Sendable, Hashable {
                /// Creates a new `Created`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//reports/fix/post(fixAuditFiles)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.fixAuditFiles.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.fixAuditFiles.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `GET /search/cities`.
    /// - Remark: Generated from `#/paths//search/cities/get(getAssetsByCity)`.
    internal enum getAssetsByCity {
        internal static let id: Swift.String = "getAssetsByCity"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/search/cities/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAssetsByCity.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAssetsByCity.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getAssetsByCity.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getAssetsByCity.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/search/cities/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/search/cities/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.AssetResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.AssetResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getAssetsByCity.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getAssetsByCity.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//search/cities/get(getAssetsByCity)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getAssetsByCity.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getAssetsByCity.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /search/explore`.
    /// - Remark: Generated from `#/paths//search/explore/get(getExploreData)`.
    internal enum getExploreData {
        internal static let id: Swift.String = "getExploreData"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/search/explore/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getExploreData.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getExploreData.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getExploreData.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getExploreData.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/search/explore/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/search/explore/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.SearchExploreResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.SearchExploreResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getExploreData.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getExploreData.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//search/explore/get(getExploreData)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getExploreData.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getExploreData.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /search/metadata`.
    /// - Remark: Generated from `#/paths//search/metadata/post(searchMetadata)`.
    internal enum searchMetadata {
        internal static let id: Swift.String = "searchMetadata"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/search/metadata/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.searchMetadata.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.searchMetadata.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.searchMetadata.Input.Headers
            /// - Remark: Generated from `#/paths/search/metadata/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/search/metadata/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.MetadataSearchDto)
            }
            internal var body: Operations.searchMetadata.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.searchMetadata.Input.Headers = .init(),
                body: Operations.searchMetadata.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/search/metadata/POST/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/search/metadata/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.SearchResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.SearchResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.searchMetadata.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.searchMetadata.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//search/metadata/post(searchMetadata)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.searchMetadata.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.searchMetadata.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /search/person`.
    /// - Remark: Generated from `#/paths//search/person/get(searchPerson)`.
    internal enum searchPerson {
        internal static let id: Swift.String = "searchPerson"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/search/person/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/search/person/GET/query/name`.
                internal var name: Swift.String
                /// - Remark: Generated from `#/paths/search/person/GET/query/withHidden`.
                internal var withHidden: Swift.Bool?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - name:
                ///   - withHidden:
                internal init(
                    name: Swift.String,
                    withHidden: Swift.Bool? = nil
                ) {
                    self.name = name
                    self.withHidden = withHidden
                }
            }
            internal var query: Operations.searchPerson.Input.Query
            /// - Remark: Generated from `#/paths/search/person/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.searchPerson.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.searchPerson.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.searchPerson.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.searchPerson.Input.Query,
                headers: Operations.searchPerson.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/search/person/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/search/person/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.PersonResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.PersonResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.searchPerson.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.searchPerson.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//search/person/get(searchPerson)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.searchPerson.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.searchPerson.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /search/places`.
    /// - Remark: Generated from `#/paths//search/places/get(searchPlaces)`.
    internal enum searchPlaces {
        internal static let id: Swift.String = "searchPlaces"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/search/places/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/search/places/GET/query/name`.
                internal var name: Swift.String
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - name:
                internal init(name: Swift.String) {
                    self.name = name
                }
            }
            internal var query: Operations.searchPlaces.Input.Query
            /// - Remark: Generated from `#/paths/search/places/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.searchPlaces.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.searchPlaces.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.searchPlaces.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.searchPlaces.Input.Query,
                headers: Operations.searchPlaces.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/search/places/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/search/places/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.PlacesResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.PlacesResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.searchPlaces.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.searchPlaces.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//search/places/get(searchPlaces)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.searchPlaces.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.searchPlaces.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /search/smart`.
    /// - Remark: Generated from `#/paths//search/smart/post(searchSmart)`.
    internal enum searchSmart {
        internal static let id: Swift.String = "searchSmart"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/search/smart/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.searchSmart.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.searchSmart.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.searchSmart.Input.Headers
            /// - Remark: Generated from `#/paths/search/smart/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/search/smart/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.SmartSearchDto)
            }
            internal var body: Operations.searchSmart.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.searchSmart.Input.Headers = .init(),
                body: Operations.searchSmart.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/search/smart/POST/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/search/smart/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.SearchResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.SearchResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.searchSmart.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.searchSmart.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//search/smart/post(searchSmart)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.searchSmart.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.searchSmart.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /search/suggestions`.
    /// - Remark: Generated from `#/paths//search/suggestions/get(getSearchSuggestions)`.
    internal enum getSearchSuggestions {
        internal static let id: Swift.String = "getSearchSuggestions"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/search/suggestions/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/search/suggestions/GET/query/country`.
                internal var country: Swift.String?
                /// - Remark: Generated from `#/paths/search/suggestions/GET/query/make`.
                internal var make: Swift.String?
                /// - Remark: Generated from `#/paths/search/suggestions/GET/query/model`.
                internal var model: Swift.String?
                /// - Remark: Generated from `#/paths/search/suggestions/GET/query/state`.
                internal var state: Swift.String?
                /// - Remark: Generated from `#/paths/search/suggestions/GET/query/type`.
                internal var _type: Components.Schemas.SearchSuggestionType
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - country:
                ///   - make:
                ///   - model:
                ///   - state:
                ///   - _type:
                internal init(
                    country: Swift.String? = nil,
                    make: Swift.String? = nil,
                    model: Swift.String? = nil,
                    state: Swift.String? = nil,
                    _type: Components.Schemas.SearchSuggestionType
                ) {
                    self.country = country
                    self.make = make
                    self.model = model
                    self.state = state
                    self._type = _type
                }
            }
            internal var query: Operations.getSearchSuggestions.Input.Query
            /// - Remark: Generated from `#/paths/search/suggestions/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getSearchSuggestions.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getSearchSuggestions.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getSearchSuggestions.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.getSearchSuggestions.Input.Query,
                headers: Operations.getSearchSuggestions.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/search/suggestions/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/search/suggestions/GET/responses/200/content/application\/json`.
                    case json([Swift.String])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Swift.String] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getSearchSuggestions.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getSearchSuggestions.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//search/suggestions/get(getSearchSuggestions)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getSearchSuggestions.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getSearchSuggestions.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/about`.
    /// - Remark: Generated from `#/paths//server-info/about/get(getAboutInfo)`.
    internal enum getAboutInfo {
        internal static let id: Swift.String = "getAboutInfo"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/server-info/about/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAboutInfo.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAboutInfo.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getAboutInfo.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getAboutInfo.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/server-info/about/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/server-info/about/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.ServerAboutResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ServerAboutResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getAboutInfo.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getAboutInfo.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//server-info/about/get(getAboutInfo)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getAboutInfo.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getAboutInfo.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/config`.
    /// - Remark: Generated from `#/paths//server-info/config/get(getServerConfig)`.
    internal enum getServerConfig {
        internal static let id: Swift.String = "getServerConfig"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/server-info/config/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getServerConfig.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getServerConfig.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getServerConfig.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getServerConfig.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/server-info/config/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/server-info/config/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.ServerConfigDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ServerConfigDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getServerConfig.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getServerConfig.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//server-info/config/get(getServerConfig)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getServerConfig.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getServerConfig.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/features`.
    /// - Remark: Generated from `#/paths//server-info/features/get(getServerFeatures)`.
    internal enum getServerFeatures {
        internal static let id: Swift.String = "getServerFeatures"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/server-info/features/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getServerFeatures.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getServerFeatures.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getServerFeatures.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getServerFeatures.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/server-info/features/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/server-info/features/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.ServerFeaturesDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ServerFeaturesDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getServerFeatures.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getServerFeatures.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//server-info/features/get(getServerFeatures)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getServerFeatures.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getServerFeatures.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/media-types`.
    /// - Remark: Generated from `#/paths//server-info/media-types/get(getSupportedMediaTypes)`.
    internal enum getSupportedMediaTypes {
        internal static let id: Swift.String = "getSupportedMediaTypes"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/server-info/media-types/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getSupportedMediaTypes.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getSupportedMediaTypes.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getSupportedMediaTypes.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getSupportedMediaTypes.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/server-info/media-types/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/server-info/media-types/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.ServerMediaTypesResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ServerMediaTypesResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getSupportedMediaTypes.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getSupportedMediaTypes.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//server-info/media-types/get(getSupportedMediaTypes)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getSupportedMediaTypes.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getSupportedMediaTypes.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/ping`.
    /// - Remark: Generated from `#/paths//server-info/ping/get(pingServer)`.
    internal enum pingServer {
        internal static let id: Swift.String = "pingServer"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/server-info/ping/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.pingServer.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.pingServer.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.pingServer.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.pingServer.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/server-info/ping/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/server-info/ping/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.ServerPingResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ServerPingResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.pingServer.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.pingServer.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//server-info/ping/get(pingServer)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.pingServer.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.pingServer.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/statistics`.
    /// - Remark: Generated from `#/paths//server-info/statistics/get(getServerStatistics)`.
    internal enum getServerStatistics {
        internal static let id: Swift.String = "getServerStatistics"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/server-info/statistics/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getServerStatistics.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getServerStatistics.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getServerStatistics.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getServerStatistics.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/server-info/statistics/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/server-info/statistics/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.ServerStatsResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ServerStatsResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getServerStatistics.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getServerStatistics.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//server-info/statistics/get(getServerStatistics)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getServerStatistics.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getServerStatistics.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/storage`.
    /// - Remark: Generated from `#/paths//server-info/storage/get(getStorage)`.
    internal enum getStorage {
        internal static let id: Swift.String = "getStorage"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/server-info/storage/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getStorage.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getStorage.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getStorage.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getStorage.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/server-info/storage/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/server-info/storage/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.ServerStorageResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ServerStorageResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getStorage.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getStorage.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//server-info/storage/get(getStorage)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getStorage.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getStorage.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/theme`.
    /// - Remark: Generated from `#/paths//server-info/theme/get(getTheme)`.
    internal enum getTheme {
        internal static let id: Swift.String = "getTheme"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/server-info/theme/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getTheme.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getTheme.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getTheme.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getTheme.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/server-info/theme/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/server-info/theme/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.ServerThemeDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ServerThemeDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getTheme.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getTheme.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//server-info/theme/get(getTheme)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getTheme.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getTheme.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// This property was deprecated in v1.107.0
    ///
    /// - Remark: HTTP `GET /server-info/version`.
    /// - Remark: Generated from `#/paths//server-info/version/get(getServerVersion)`.
    internal enum getServerVersion {
        internal static let id: Swift.String = "getServerVersion"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/server-info/version/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getServerVersion.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getServerVersion.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getServerVersion.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getServerVersion.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/server-info/version/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/server-info/version/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.ServerVersionResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ServerVersionResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getServerVersion.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getServerVersion.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//server-info/version/get(getServerVersion)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getServerVersion.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getServerVersion.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /sessions`.
    /// - Remark: Generated from `#/paths//sessions/get(getSessions)`.
    internal enum getSessions {
        internal static let id: Swift.String = "getSessions"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/sessions/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getSessions.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getSessions.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getSessions.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getSessions.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/sessions/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/sessions/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.SessionResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.SessionResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getSessions.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getSessions.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//sessions/get(getSessions)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getSessions.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getSessions.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `DELETE /sessions`.
    /// - Remark: Generated from `#/paths//sessions/delete(deleteAllSessions)`.
    internal enum deleteAllSessions {
        internal static let id: Swift.String = "deleteAllSessions"
        internal struct Input: Sendable, Hashable {
            /// Creates a new `Input`.
            internal init() {}
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//sessions/delete(deleteAllSessions)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.deleteAllSessions.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.deleteAllSessions.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `DELETE /sessions/{id}`.
    /// - Remark: Generated from `#/paths//sessions/{id}/delete(deleteSession)`.
    internal enum deleteSession {
        internal static let id: Swift.String = "deleteSession"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/sessions/{id}/DELETE/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/sessions/{id}/DELETE/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.deleteSession.Input.Path
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            internal init(path: Operations.deleteSession.Input.Path) {
                self.path = path
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//sessions/{id}/delete(deleteSession)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.deleteSession.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.deleteSession.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `GET /shared-links`.
    /// - Remark: Generated from `#/paths//shared-links/get(getAllSharedLinks)`.
    internal enum getAllSharedLinks {
        internal static let id: Swift.String = "getAllSharedLinks"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/shared-links/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAllSharedLinks.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAllSharedLinks.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getAllSharedLinks.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getAllSharedLinks.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/shared-links/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/shared-links/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.SharedLinkResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.SharedLinkResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getAllSharedLinks.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getAllSharedLinks.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//shared-links/get(getAllSharedLinks)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getAllSharedLinks.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getAllSharedLinks.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /shared-links`.
    /// - Remark: Generated from `#/paths//shared-links/post(createSharedLink)`.
    internal enum createSharedLink {
        internal static let id: Swift.String = "createSharedLink"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/shared-links/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.createSharedLink.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.createSharedLink.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.createSharedLink.Input.Headers
            /// - Remark: Generated from `#/paths/shared-links/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/shared-links/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.SharedLinkCreateDto)
            }
            internal var body: Operations.createSharedLink.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.createSharedLink.Input.Headers = .init(),
                body: Operations.createSharedLink.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/shared-links/POST/responses/201/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/shared-links/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.SharedLinkResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.SharedLinkResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.createSharedLink.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.createSharedLink.Output.Created.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//shared-links/post(createSharedLink)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.createSharedLink.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.createSharedLink.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /shared-links/me`.
    /// - Remark: Generated from `#/paths//shared-links/me/get(getMySharedLink)`.
    internal enum getMySharedLink {
        internal static let id: Swift.String = "getMySharedLink"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/shared-links/me/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/shared-links/me/GET/query/key`.
                internal var key: Swift.String?
                /// - Remark: Generated from `#/paths/shared-links/me/GET/query/password`.
                internal var password: Swift.String?
                /// - Remark: Generated from `#/paths/shared-links/me/GET/query/token`.
                internal var token: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - key:
                ///   - password:
                ///   - token:
                internal init(
                    key: Swift.String? = nil,
                    password: Swift.String? = nil,
                    token: Swift.String? = nil
                ) {
                    self.key = key
                    self.password = password
                    self.token = token
                }
            }
            internal var query: Operations.getMySharedLink.Input.Query
            /// - Remark: Generated from `#/paths/shared-links/me/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getMySharedLink.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getMySharedLink.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getMySharedLink.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.getMySharedLink.Input.Query = .init(),
                headers: Operations.getMySharedLink.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/shared-links/me/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/shared-links/me/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.SharedLinkResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.SharedLinkResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getMySharedLink.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getMySharedLink.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//shared-links/me/get(getMySharedLink)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getMySharedLink.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getMySharedLink.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /shared-links/{id}`.
    /// - Remark: Generated from `#/paths//shared-links/{id}/get(getSharedLinkById)`.
    internal enum getSharedLinkById {
        internal static let id: Swift.String = "getSharedLinkById"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/shared-links/{id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/shared-links/{id}/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.getSharedLinkById.Input.Path
            /// - Remark: Generated from `#/paths/shared-links/{id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getSharedLinkById.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getSharedLinkById.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getSharedLinkById.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getSharedLinkById.Input.Path,
                headers: Operations.getSharedLinkById.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/shared-links/{id}/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/shared-links/{id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.SharedLinkResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.SharedLinkResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getSharedLinkById.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getSharedLinkById.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//shared-links/{id}/get(getSharedLinkById)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getSharedLinkById.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getSharedLinkById.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PATCH /shared-links/{id}`.
    /// - Remark: Generated from `#/paths//shared-links/{id}/patch(updateSharedLink)`.
    internal enum updateSharedLink {
        internal static let id: Swift.String = "updateSharedLink"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/shared-links/{id}/PATCH/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/shared-links/{id}/PATCH/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.updateSharedLink.Input.Path
            /// - Remark: Generated from `#/paths/shared-links/{id}/PATCH/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updateSharedLink.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updateSharedLink.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.updateSharedLink.Input.Headers
            /// - Remark: Generated from `#/paths/shared-links/{id}/PATCH/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/shared-links/{id}/PATCH/requestBody/content/application\/json`.
                case json(Components.Schemas.SharedLinkEditDto)
            }
            internal var body: Operations.updateSharedLink.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.updateSharedLink.Input.Path,
                headers: Operations.updateSharedLink.Input.Headers = .init(),
                body: Operations.updateSharedLink.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/shared-links/{id}/PATCH/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/shared-links/{id}/PATCH/responses/200/content/application\/json`.
                    case json(Components.Schemas.SharedLinkResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.SharedLinkResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.updateSharedLink.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.updateSharedLink.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//shared-links/{id}/patch(updateSharedLink)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.updateSharedLink.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.updateSharedLink.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `DELETE /shared-links/{id}`.
    /// - Remark: Generated from `#/paths//shared-links/{id}/delete(removeSharedLink)`.
    internal enum removeSharedLink {
        internal static let id: Swift.String = "removeSharedLink"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/shared-links/{id}/DELETE/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/shared-links/{id}/DELETE/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.removeSharedLink.Input.Path
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            internal init(path: Operations.removeSharedLink.Input.Path) {
                self.path = path
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// Creates a new `Ok`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//shared-links/{id}/delete(removeSharedLink)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.removeSharedLink.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.removeSharedLink.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `PUT /shared-links/{id}/assets`.
    /// - Remark: Generated from `#/paths//shared-links/{id}/assets/put(addSharedLinkAssets)`.
    internal enum addSharedLinkAssets {
        internal static let id: Swift.String = "addSharedLinkAssets"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/shared-links/{id}/assets/PUT/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/shared-links/{id}/assets/PUT/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.addSharedLinkAssets.Input.Path
            /// - Remark: Generated from `#/paths/shared-links/{id}/assets/PUT/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/shared-links/{id}/assets/PUT/query/key`.
                internal var key: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - key:
                internal init(key: Swift.String? = nil) {
                    self.key = key
                }
            }
            internal var query: Operations.addSharedLinkAssets.Input.Query
            /// - Remark: Generated from `#/paths/shared-links/{id}/assets/PUT/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.addSharedLinkAssets.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.addSharedLinkAssets.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.addSharedLinkAssets.Input.Headers
            /// - Remark: Generated from `#/paths/shared-links/{id}/assets/PUT/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/shared-links/{id}/assets/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.AssetIdsDto)
            }
            internal var body: Operations.addSharedLinkAssets.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.addSharedLinkAssets.Input.Path,
                query: Operations.addSharedLinkAssets.Input.Query = .init(),
                headers: Operations.addSharedLinkAssets.Input.Headers = .init(),
                body: Operations.addSharedLinkAssets.Input.Body
            ) {
                self.path = path
                self.query = query
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/shared-links/{id}/assets/PUT/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/shared-links/{id}/assets/PUT/responses/200/content/application\/json`.
                    case json([Components.Schemas.AssetIdsResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.AssetIdsResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.addSharedLinkAssets.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.addSharedLinkAssets.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//shared-links/{id}/assets/put(addSharedLinkAssets)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.addSharedLinkAssets.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.addSharedLinkAssets.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `DELETE /shared-links/{id}/assets`.
    /// - Remark: Generated from `#/paths//shared-links/{id}/assets/delete(removeSharedLinkAssets)`.
    internal enum removeSharedLinkAssets {
        internal static let id: Swift.String = "removeSharedLinkAssets"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/shared-links/{id}/assets/DELETE/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/shared-links/{id}/assets/DELETE/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.removeSharedLinkAssets.Input.Path
            /// - Remark: Generated from `#/paths/shared-links/{id}/assets/DELETE/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/shared-links/{id}/assets/DELETE/query/key`.
                internal var key: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - key:
                internal init(key: Swift.String? = nil) {
                    self.key = key
                }
            }
            internal var query: Operations.removeSharedLinkAssets.Input.Query
            /// - Remark: Generated from `#/paths/shared-links/{id}/assets/DELETE/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.removeSharedLinkAssets.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.removeSharedLinkAssets.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.removeSharedLinkAssets.Input.Headers
            /// - Remark: Generated from `#/paths/shared-links/{id}/assets/DELETE/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/shared-links/{id}/assets/DELETE/requestBody/content/application\/json`.
                case json(Components.Schemas.AssetIdsDto)
            }
            internal var body: Operations.removeSharedLinkAssets.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.removeSharedLinkAssets.Input.Path,
                query: Operations.removeSharedLinkAssets.Input.Query = .init(),
                headers: Operations.removeSharedLinkAssets.Input.Headers = .init(),
                body: Operations.removeSharedLinkAssets.Input.Body
            ) {
                self.path = path
                self.query = query
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/shared-links/{id}/assets/DELETE/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/shared-links/{id}/assets/DELETE/responses/200/content/application\/json`.
                    case json([Components.Schemas.AssetIdsResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.AssetIdsResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.removeSharedLinkAssets.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.removeSharedLinkAssets.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//shared-links/{id}/assets/delete(removeSharedLinkAssets)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.removeSharedLinkAssets.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.removeSharedLinkAssets.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /sync/delta-sync`.
    /// - Remark: Generated from `#/paths//sync/delta-sync/post(getDeltaSync)`.
    internal enum getDeltaSync {
        internal static let id: Swift.String = "getDeltaSync"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/sync/delta-sync/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getDeltaSync.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getDeltaSync.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getDeltaSync.Input.Headers
            /// - Remark: Generated from `#/paths/sync/delta-sync/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/sync/delta-sync/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.AssetDeltaSyncDto)
            }
            internal var body: Operations.getDeltaSync.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.getDeltaSync.Input.Headers = .init(),
                body: Operations.getDeltaSync.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/sync/delta-sync/POST/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/sync/delta-sync/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.AssetDeltaSyncResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.AssetDeltaSyncResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getDeltaSync.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getDeltaSync.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//sync/delta-sync/post(getDeltaSync)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getDeltaSync.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getDeltaSync.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /sync/full-sync`.
    /// - Remark: Generated from `#/paths//sync/full-sync/post(getFullSyncForUser)`.
    internal enum getFullSyncForUser {
        internal static let id: Swift.String = "getFullSyncForUser"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/sync/full-sync/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getFullSyncForUser.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getFullSyncForUser.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getFullSyncForUser.Input.Headers
            /// - Remark: Generated from `#/paths/sync/full-sync/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/sync/full-sync/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.AssetFullSyncDto)
            }
            internal var body: Operations.getFullSyncForUser.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.getFullSyncForUser.Input.Headers = .init(),
                body: Operations.getFullSyncForUser.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/sync/full-sync/POST/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/sync/full-sync/POST/responses/200/content/application\/json`.
                    case json([Components.Schemas.AssetResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.AssetResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getFullSyncForUser.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getFullSyncForUser.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//sync/full-sync/post(getFullSyncForUser)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getFullSyncForUser.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getFullSyncForUser.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /system-config`.
    /// - Remark: Generated from `#/paths//system-config/get(getConfig)`.
    internal enum getConfig {
        internal static let id: Swift.String = "getConfig"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/system-config/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getConfig.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getConfig.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getConfig.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getConfig.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/system-config/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/system-config/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.SystemConfigDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.SystemConfigDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getConfig.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getConfig.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//system-config/get(getConfig)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getConfig.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getConfig.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PUT /system-config`.
    /// - Remark: Generated from `#/paths//system-config/put(updateConfig)`.
    internal enum updateConfig {
        internal static let id: Swift.String = "updateConfig"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/system-config/PUT/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updateConfig.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updateConfig.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.updateConfig.Input.Headers
            /// - Remark: Generated from `#/paths/system-config/PUT/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/system-config/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.SystemConfigDto)
            }
            internal var body: Operations.updateConfig.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.updateConfig.Input.Headers = .init(),
                body: Operations.updateConfig.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/system-config/PUT/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/system-config/PUT/responses/200/content/application\/json`.
                    case json(Components.Schemas.SystemConfigDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.SystemConfigDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.updateConfig.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.updateConfig.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//system-config/put(updateConfig)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.updateConfig.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.updateConfig.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /system-config/defaults`.
    /// - Remark: Generated from `#/paths//system-config/defaults/get(getConfigDefaults)`.
    internal enum getConfigDefaults {
        internal static let id: Swift.String = "getConfigDefaults"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/system-config/defaults/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getConfigDefaults.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getConfigDefaults.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getConfigDefaults.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getConfigDefaults.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/system-config/defaults/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/system-config/defaults/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.SystemConfigDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.SystemConfigDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getConfigDefaults.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getConfigDefaults.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//system-config/defaults/get(getConfigDefaults)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getConfigDefaults.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getConfigDefaults.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /system-config/storage-template-options`.
    /// - Remark: Generated from `#/paths//system-config/storage-template-options/get(getStorageTemplateOptions)`.
    internal enum getStorageTemplateOptions {
        internal static let id: Swift.String = "getStorageTemplateOptions"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/system-config/storage-template-options/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getStorageTemplateOptions.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getStorageTemplateOptions.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getStorageTemplateOptions.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getStorageTemplateOptions.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/system-config/storage-template-options/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/system-config/storage-template-options/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.SystemConfigTemplateStorageOptionDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.SystemConfigTemplateStorageOptionDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getStorageTemplateOptions.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getStorageTemplateOptions.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//system-config/storage-template-options/get(getStorageTemplateOptions)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getStorageTemplateOptions.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getStorageTemplateOptions.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /system-metadata/admin-onboarding`.
    /// - Remark: Generated from `#/paths//system-metadata/admin-onboarding/get(getAdminOnboarding)`.
    internal enum getAdminOnboarding {
        internal static let id: Swift.String = "getAdminOnboarding"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/system-metadata/admin-onboarding/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAdminOnboarding.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAdminOnboarding.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getAdminOnboarding.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getAdminOnboarding.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/system-metadata/admin-onboarding/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/system-metadata/admin-onboarding/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.AdminOnboardingUpdateDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.AdminOnboardingUpdateDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getAdminOnboarding.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getAdminOnboarding.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//system-metadata/admin-onboarding/get(getAdminOnboarding)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getAdminOnboarding.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getAdminOnboarding.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /system-metadata/admin-onboarding`.
    /// - Remark: Generated from `#/paths//system-metadata/admin-onboarding/post(updateAdminOnboarding)`.
    internal enum updateAdminOnboarding {
        internal static let id: Swift.String = "updateAdminOnboarding"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/system-metadata/admin-onboarding/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/system-metadata/admin-onboarding/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.AdminOnboardingUpdateDto)
            }
            internal var body: Operations.updateAdminOnboarding.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - body:
            internal init(body: Operations.updateAdminOnboarding.Input.Body) {
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//system-metadata/admin-onboarding/post(updateAdminOnboarding)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.updateAdminOnboarding.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.updateAdminOnboarding.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `GET /system-metadata/reverse-geocoding-state`.
    /// - Remark: Generated from `#/paths//system-metadata/reverse-geocoding-state/get(getReverseGeocodingState)`.
    internal enum getReverseGeocodingState {
        internal static let id: Swift.String = "getReverseGeocodingState"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/system-metadata/reverse-geocoding-state/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getReverseGeocodingState.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getReverseGeocodingState.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getReverseGeocodingState.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getReverseGeocodingState.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/system-metadata/reverse-geocoding-state/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/system-metadata/reverse-geocoding-state/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.ReverseGeocodingStateResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ReverseGeocodingStateResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getReverseGeocodingState.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getReverseGeocodingState.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//system-metadata/reverse-geocoding-state/get(getReverseGeocodingState)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getReverseGeocodingState.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getReverseGeocodingState.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /tags`.
    /// - Remark: Generated from `#/paths//tags/get(getAllTags)`.
    internal enum getAllTags {
        internal static let id: Swift.String = "getAllTags"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/tags/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAllTags.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getAllTags.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getAllTags.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getAllTags.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/tags/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/tags/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.TagResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.TagResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getAllTags.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getAllTags.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//tags/get(getAllTags)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getAllTags.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getAllTags.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /tags`.
    /// - Remark: Generated from `#/paths//tags/post(createTag)`.
    internal enum createTag {
        internal static let id: Swift.String = "createTag"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/tags/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.createTag.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.createTag.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.createTag.Input.Headers
            /// - Remark: Generated from `#/paths/tags/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/tags/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.CreateTagDto)
            }
            internal var body: Operations.createTag.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.createTag.Input.Headers = .init(),
                body: Operations.createTag.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/tags/POST/responses/201/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/tags/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.TagResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.TagResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.createTag.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.createTag.Output.Created.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//tags/post(createTag)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.createTag.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.createTag.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /tags/{id}`.
    /// - Remark: Generated from `#/paths//tags/{id}/get(getTagById)`.
    internal enum getTagById {
        internal static let id: Swift.String = "getTagById"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/tags/{id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/tags/{id}/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.getTagById.Input.Path
            /// - Remark: Generated from `#/paths/tags/{id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getTagById.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getTagById.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getTagById.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getTagById.Input.Path,
                headers: Operations.getTagById.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/tags/{id}/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/tags/{id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.TagResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.TagResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getTagById.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getTagById.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//tags/{id}/get(getTagById)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getTagById.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getTagById.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PATCH /tags/{id}`.
    /// - Remark: Generated from `#/paths//tags/{id}/patch(updateTag)`.
    internal enum updateTag {
        internal static let id: Swift.String = "updateTag"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/tags/{id}/PATCH/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/tags/{id}/PATCH/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.updateTag.Input.Path
            /// - Remark: Generated from `#/paths/tags/{id}/PATCH/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updateTag.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updateTag.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.updateTag.Input.Headers
            /// - Remark: Generated from `#/paths/tags/{id}/PATCH/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/tags/{id}/PATCH/requestBody/content/application\/json`.
                case json(Components.Schemas.UpdateTagDto)
            }
            internal var body: Operations.updateTag.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.updateTag.Input.Path,
                headers: Operations.updateTag.Input.Headers = .init(),
                body: Operations.updateTag.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/tags/{id}/PATCH/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/tags/{id}/PATCH/responses/200/content/application\/json`.
                    case json(Components.Schemas.TagResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.TagResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.updateTag.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.updateTag.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//tags/{id}/patch(updateTag)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.updateTag.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.updateTag.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `DELETE /tags/{id}`.
    /// - Remark: Generated from `#/paths//tags/{id}/delete(deleteTag)`.
    internal enum deleteTag {
        internal static let id: Swift.String = "deleteTag"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/tags/{id}/DELETE/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/tags/{id}/DELETE/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.deleteTag.Input.Path
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            internal init(path: Operations.deleteTag.Input.Path) {
                self.path = path
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// Creates a new `Ok`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//tags/{id}/delete(deleteTag)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.deleteTag.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.deleteTag.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `GET /tags/{id}/assets`.
    /// - Remark: Generated from `#/paths//tags/{id}/assets/get(getTagAssets)`.
    internal enum getTagAssets {
        internal static let id: Swift.String = "getTagAssets"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/tags/{id}/assets/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/tags/{id}/assets/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.getTagAssets.Input.Path
            /// - Remark: Generated from `#/paths/tags/{id}/assets/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getTagAssets.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getTagAssets.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getTagAssets.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getTagAssets.Input.Path,
                headers: Operations.getTagAssets.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/tags/{id}/assets/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/tags/{id}/assets/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.AssetResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.AssetResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getTagAssets.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getTagAssets.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//tags/{id}/assets/get(getTagAssets)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getTagAssets.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getTagAssets.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PUT /tags/{id}/assets`.
    /// - Remark: Generated from `#/paths//tags/{id}/assets/put(tagAssets)`.
    internal enum tagAssets {
        internal static let id: Swift.String = "tagAssets"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/tags/{id}/assets/PUT/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/tags/{id}/assets/PUT/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.tagAssets.Input.Path
            /// - Remark: Generated from `#/paths/tags/{id}/assets/PUT/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.tagAssets.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.tagAssets.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.tagAssets.Input.Headers
            /// - Remark: Generated from `#/paths/tags/{id}/assets/PUT/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/tags/{id}/assets/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.AssetIdsDto)
            }
            internal var body: Operations.tagAssets.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.tagAssets.Input.Path,
                headers: Operations.tagAssets.Input.Headers = .init(),
                body: Operations.tagAssets.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/tags/{id}/assets/PUT/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/tags/{id}/assets/PUT/responses/200/content/application\/json`.
                    case json([Components.Schemas.AssetIdsResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.AssetIdsResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.tagAssets.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.tagAssets.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//tags/{id}/assets/put(tagAssets)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.tagAssets.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.tagAssets.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `DELETE /tags/{id}/assets`.
    /// - Remark: Generated from `#/paths//tags/{id}/assets/delete(untagAssets)`.
    internal enum untagAssets {
        internal static let id: Swift.String = "untagAssets"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/tags/{id}/assets/DELETE/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/tags/{id}/assets/DELETE/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.untagAssets.Input.Path
            /// - Remark: Generated from `#/paths/tags/{id}/assets/DELETE/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.untagAssets.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.untagAssets.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.untagAssets.Input.Headers
            /// - Remark: Generated from `#/paths/tags/{id}/assets/DELETE/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/tags/{id}/assets/DELETE/requestBody/content/application\/json`.
                case json(Components.Schemas.AssetIdsDto)
            }
            internal var body: Operations.untagAssets.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.untagAssets.Input.Path,
                headers: Operations.untagAssets.Input.Headers = .init(),
                body: Operations.untagAssets.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/tags/{id}/assets/DELETE/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/tags/{id}/assets/DELETE/responses/200/content/application\/json`.
                    case json([Components.Schemas.AssetIdsResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.AssetIdsResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.untagAssets.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.untagAssets.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//tags/{id}/assets/delete(untagAssets)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.untagAssets.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.untagAssets.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /timeline/bucket`.
    /// - Remark: Generated from `#/paths//timeline/bucket/get(getTimeBucket)`.
    internal enum getTimeBucket {
        internal static let id: Swift.String = "getTimeBucket"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/timeline/bucket/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/timeline/bucket/GET/query/albumId`.
                internal var albumId: Swift.String?
                /// - Remark: Generated from `#/paths/timeline/bucket/GET/query/isArchived`.
                internal var isArchived: Swift.Bool?
                /// - Remark: Generated from `#/paths/timeline/bucket/GET/query/isFavorite`.
                internal var isFavorite: Swift.Bool?
                /// - Remark: Generated from `#/paths/timeline/bucket/GET/query/isTrashed`.
                internal var isTrashed: Swift.Bool?
                /// - Remark: Generated from `#/paths/timeline/bucket/GET/query/key`.
                internal var key: Swift.String?
                /// - Remark: Generated from `#/paths/timeline/bucket/GET/query/order`.
                internal var order: Components.Schemas.AssetOrder?
                /// - Remark: Generated from `#/paths/timeline/bucket/GET/query/personId`.
                internal var personId: Swift.String?
                /// - Remark: Generated from `#/paths/timeline/bucket/GET/query/size`.
                internal var size: Components.Schemas.TimeBucketSize
                /// - Remark: Generated from `#/paths/timeline/bucket/GET/query/timeBucket`.
                internal var timeBucket: Swift.String
                /// - Remark: Generated from `#/paths/timeline/bucket/GET/query/userId`.
                internal var userId: Swift.String?
                /// - Remark: Generated from `#/paths/timeline/bucket/GET/query/withPartners`.
                internal var withPartners: Swift.Bool?
                /// - Remark: Generated from `#/paths/timeline/bucket/GET/query/withStacked`.
                internal var withStacked: Swift.Bool?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - albumId:
                ///   - isArchived:
                ///   - isFavorite:
                ///   - isTrashed:
                ///   - key:
                ///   - order:
                ///   - personId:
                ///   - size:
                ///   - timeBucket:
                ///   - userId:
                ///   - withPartners:
                ///   - withStacked:
                internal init(
                    albumId: Swift.String? = nil,
                    isArchived: Swift.Bool? = nil,
                    isFavorite: Swift.Bool? = nil,
                    isTrashed: Swift.Bool? = nil,
                    key: Swift.String? = nil,
                    order: Components.Schemas.AssetOrder? = nil,
                    personId: Swift.String? = nil,
                    size: Components.Schemas.TimeBucketSize,
                    timeBucket: Swift.String,
                    userId: Swift.String? = nil,
                    withPartners: Swift.Bool? = nil,
                    withStacked: Swift.Bool? = nil
                ) {
                    self.albumId = albumId
                    self.isArchived = isArchived
                    self.isFavorite = isFavorite
                    self.isTrashed = isTrashed
                    self.key = key
                    self.order = order
                    self.personId = personId
                    self.size = size
                    self.timeBucket = timeBucket
                    self.userId = userId
                    self.withPartners = withPartners
                    self.withStacked = withStacked
                }
            }
            internal var query: Operations.getTimeBucket.Input.Query
            /// - Remark: Generated from `#/paths/timeline/bucket/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getTimeBucket.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getTimeBucket.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getTimeBucket.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.getTimeBucket.Input.Query,
                headers: Operations.getTimeBucket.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/timeline/bucket/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/timeline/bucket/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.AssetResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.AssetResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getTimeBucket.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getTimeBucket.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//timeline/bucket/get(getTimeBucket)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getTimeBucket.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getTimeBucket.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /timeline/buckets`.
    /// - Remark: Generated from `#/paths//timeline/buckets/get(getTimeBuckets)`.
    internal enum getTimeBuckets {
        internal static let id: Swift.String = "getTimeBuckets"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/timeline/buckets/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/timeline/buckets/GET/query/albumId`.
                internal var albumId: Swift.String?
                /// - Remark: Generated from `#/paths/timeline/buckets/GET/query/isArchived`.
                internal var isArchived: Swift.Bool?
                /// - Remark: Generated from `#/paths/timeline/buckets/GET/query/isFavorite`.
                internal var isFavorite: Swift.Bool?
                /// - Remark: Generated from `#/paths/timeline/buckets/GET/query/isTrashed`.
                internal var isTrashed: Swift.Bool?
                /// - Remark: Generated from `#/paths/timeline/buckets/GET/query/key`.
                internal var key: Swift.String?
                /// - Remark: Generated from `#/paths/timeline/buckets/GET/query/order`.
                internal var order: Components.Schemas.AssetOrder?
                /// - Remark: Generated from `#/paths/timeline/buckets/GET/query/personId`.
                internal var personId: Swift.String?
                /// - Remark: Generated from `#/paths/timeline/buckets/GET/query/size`.
                internal var size: Components.Schemas.TimeBucketSize
                /// - Remark: Generated from `#/paths/timeline/buckets/GET/query/userId`.
                internal var userId: Swift.String?
                /// - Remark: Generated from `#/paths/timeline/buckets/GET/query/withPartners`.
                internal var withPartners: Swift.Bool?
                /// - Remark: Generated from `#/paths/timeline/buckets/GET/query/withStacked`.
                internal var withStacked: Swift.Bool?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - albumId:
                ///   - isArchived:
                ///   - isFavorite:
                ///   - isTrashed:
                ///   - key:
                ///   - order:
                ///   - personId:
                ///   - size:
                ///   - userId:
                ///   - withPartners:
                ///   - withStacked:
                internal init(
                    albumId: Swift.String? = nil,
                    isArchived: Swift.Bool? = nil,
                    isFavorite: Swift.Bool? = nil,
                    isTrashed: Swift.Bool? = nil,
                    key: Swift.String? = nil,
                    order: Components.Schemas.AssetOrder? = nil,
                    personId: Swift.String? = nil,
                    size: Components.Schemas.TimeBucketSize,
                    userId: Swift.String? = nil,
                    withPartners: Swift.Bool? = nil,
                    withStacked: Swift.Bool? = nil
                ) {
                    self.albumId = albumId
                    self.isArchived = isArchived
                    self.isFavorite = isFavorite
                    self.isTrashed = isTrashed
                    self.key = key
                    self.order = order
                    self.personId = personId
                    self.size = size
                    self.userId = userId
                    self.withPartners = withPartners
                    self.withStacked = withStacked
                }
            }
            internal var query: Operations.getTimeBuckets.Input.Query
            /// - Remark: Generated from `#/paths/timeline/buckets/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getTimeBuckets.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getTimeBuckets.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getTimeBuckets.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.getTimeBuckets.Input.Query,
                headers: Operations.getTimeBuckets.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/timeline/buckets/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/timeline/buckets/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.TimeBucketResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.TimeBucketResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getTimeBuckets.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getTimeBuckets.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//timeline/buckets/get(getTimeBuckets)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getTimeBuckets.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getTimeBuckets.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /trash/empty`.
    /// - Remark: Generated from `#/paths//trash/empty/post(emptyTrash)`.
    internal enum emptyTrash {
        internal static let id: Swift.String = "emptyTrash"
        internal struct Input: Sendable, Hashable {
            /// Creates a new `Input`.
            internal init() {}
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//trash/empty/post(emptyTrash)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.emptyTrash.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.emptyTrash.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `POST /trash/restore`.
    /// - Remark: Generated from `#/paths//trash/restore/post(restoreTrash)`.
    internal enum restoreTrash {
        internal static let id: Swift.String = "restoreTrash"
        internal struct Input: Sendable, Hashable {
            /// Creates a new `Input`.
            internal init() {}
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//trash/restore/post(restoreTrash)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.restoreTrash.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.restoreTrash.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `POST /trash/restore/assets`.
    /// - Remark: Generated from `#/paths//trash/restore/assets/post(restoreAssets)`.
    internal enum restoreAssets {
        internal static let id: Swift.String = "restoreAssets"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/trash/restore/assets/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/trash/restore/assets/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.BulkIdsDto)
            }
            internal var body: Operations.restoreAssets.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - body:
            internal init(body: Operations.restoreAssets.Input.Body) {
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//trash/restore/assets/post(restoreAssets)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.restoreAssets.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.restoreAssets.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `GET /users`.
    /// - Remark: Generated from `#/paths//users/get(searchUsers)`.
    internal enum searchUsers {
        internal static let id: Swift.String = "searchUsers"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/users/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.searchUsers.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.searchUsers.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.searchUsers.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.searchUsers.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.UserResponseDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.UserResponseDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.searchUsers.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.searchUsers.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//users/get(searchUsers)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.searchUsers.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.searchUsers.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /users/me`.
    /// - Remark: Generated from `#/paths//users/me/get(getMyUser)`.
    internal enum getMyUser {
        internal static let id: Swift.String = "getMyUser"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/users/me/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getMyUser.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getMyUser.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getMyUser.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getMyUser.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/me/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/me/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.UserAdminResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.UserAdminResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getMyUser.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getMyUser.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//users/me/get(getMyUser)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getMyUser.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getMyUser.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PUT /users/me`.
    /// - Remark: Generated from `#/paths//users/me/put(updateMyUser)`.
    internal enum updateMyUser {
        internal static let id: Swift.String = "updateMyUser"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/users/me/PUT/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updateMyUser.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updateMyUser.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.updateMyUser.Input.Headers
            /// - Remark: Generated from `#/paths/users/me/PUT/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/me/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.UserUpdateMeDto)
            }
            internal var body: Operations.updateMyUser.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.updateMyUser.Input.Headers = .init(),
                body: Operations.updateMyUser.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/me/PUT/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/me/PUT/responses/200/content/application\/json`.
                    case json(Components.Schemas.UserAdminResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.UserAdminResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.updateMyUser.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.updateMyUser.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//users/me/put(updateMyUser)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.updateMyUser.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.updateMyUser.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /users/me/preferences`.
    /// - Remark: Generated from `#/paths//users/me/preferences/get(getMyPreferences)`.
    internal enum getMyPreferences {
        internal static let id: Swift.String = "getMyPreferences"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/users/me/preferences/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getMyPreferences.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getMyPreferences.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getMyPreferences.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.getMyPreferences.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/me/preferences/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/me/preferences/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.UserPreferencesResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.UserPreferencesResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getMyPreferences.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getMyPreferences.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//users/me/preferences/get(getMyPreferences)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getMyPreferences.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getMyPreferences.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PUT /users/me/preferences`.
    /// - Remark: Generated from `#/paths//users/me/preferences/put(updateMyPreferences)`.
    internal enum updateMyPreferences {
        internal static let id: Swift.String = "updateMyPreferences"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/users/me/preferences/PUT/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updateMyPreferences.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.updateMyPreferences.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.updateMyPreferences.Input.Headers
            /// - Remark: Generated from `#/paths/users/me/preferences/PUT/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/me/preferences/PUT/requestBody/content/application\/json`.
                case json(Components.Schemas.UserPreferencesUpdateDto)
            }
            internal var body: Operations.updateMyPreferences.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.updateMyPreferences.Input.Headers = .init(),
                body: Operations.updateMyPreferences.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/me/preferences/PUT/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/me/preferences/PUT/responses/200/content/application\/json`.
                    case json(Components.Schemas.UserPreferencesResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.UserPreferencesResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.updateMyPreferences.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.updateMyPreferences.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//users/me/preferences/put(updateMyPreferences)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.updateMyPreferences.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.updateMyPreferences.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /users/profile-image`.
    /// - Remark: Generated from `#/paths//users/profile-image/post(createProfileImage)`.
    internal enum createProfileImage {
        internal static let id: Swift.String = "createProfileImage"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/users/profile-image/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.createProfileImage.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.createProfileImage.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.createProfileImage.Input.Headers
            /// - Remark: Generated from `#/paths/users/profile-image/POST/requestBody`.
            @frozen internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/profile-image/POST/requestBody/content/multipart\/form-data`.
                case multipartForm(OpenAPIRuntime.MultipartBody<Components.Schemas.CreateProfileImageDto>)
            }
            internal var body: Operations.createProfileImage.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.createProfileImage.Input.Headers = .init(),
                body: Operations.createProfileImage.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/profile-image/POST/responses/201/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/profile-image/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.CreateProfileImageResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.CreateProfileImageResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.createProfileImage.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.createProfileImage.Output.Created.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//users/profile-image/post(createProfileImage)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.createProfileImage.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.createProfileImage.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `DELETE /users/profile-image`.
    /// - Remark: Generated from `#/paths//users/profile-image/delete(deleteProfileImage)`.
    internal enum deleteProfileImage {
        internal static let id: Swift.String = "deleteProfileImage"
        internal struct Input: Sendable, Hashable {
            /// Creates a new `Input`.
            internal init() {}
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//users/profile-image/delete(deleteProfileImage)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.deleteProfileImage.Output.NoContent)
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.deleteProfileImage.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// - Remark: HTTP `GET /users/{id}`.
    /// - Remark: Generated from `#/paths//users/{id}/get(getUser)`.
    internal enum getUser {
        internal static let id: Swift.String = "getUser"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/users/{id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{id}/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.getUser.Input.Path
            /// - Remark: Generated from `#/paths/users/{id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUser.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getUser.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getUser.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getUser.Input.Path,
                headers: Operations.getUser.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{id}/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/{id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.UserResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.UserResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getUser.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getUser.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//users/{id}/get(getUser)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getUser.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getUser.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /users/{id}/profile-image`.
    /// - Remark: Generated from `#/paths//users/{id}/profile-image/get(getProfileImage)`.
    internal enum getProfileImage {
        internal static let id: Swift.String = "getProfileImage"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/users/{id}/profile-image/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{id}/profile-image/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.getProfileImage.Input.Path
            /// - Remark: Generated from `#/paths/users/{id}/profile-image/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getProfileImage.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getProfileImage.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getProfileImage.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getProfileImage.Input.Path,
                headers: Operations.getProfileImage.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/users/{id}/profile-image/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/users/{id}/profile-image/GET/responses/200/content/application\/octet-stream`.
                    case binary(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.binary`.
                    ///
                    /// - Throws: An error if `self` is not `.binary`.
                    /// - SeeAlso: `.binary`.
                    internal var binary: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .binary(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getProfileImage.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getProfileImage.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//users/{id}/profile-image/get(getProfileImage)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getProfileImage.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getProfileImage.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case binary
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/octet-stream":
                    self = .binary
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .binary:
                    return "application/octet-stream"
                }
            }
            internal static var allCases: [Self] {
                [
                    .binary
                ]
            }
        }
    }
}
